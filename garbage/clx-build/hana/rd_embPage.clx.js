/*
 * App URI: hana/rd_embPage
 * Source Location: hana/rd_embPage.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("hana/rd_embPage", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * rd_sample.js
			 * Created at 2020. 5. 18. 오전 9:59:50.
			 *
			 * @author daye
			 ************************************************/
			
			
			/*
			 * "조회" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				setReportPost(app, "ep1", ["dmParam"], {
					"url" : "localhost:8080",
					"filePath" : "fileName.mrd",
					"options" : {
						"exportFileNm" : "exportSample.pdf",
						"toolbarVisible" : false,
						"saveFileTypes" : "All",
						"saveButtonDisable" : false,
						"printButtonDisable" : false
					}
				}, false);
			};
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dmParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "strParam1"},
					{"name": "strParam2"}
				]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output();
			output_1.value = "임베디드페이지를 이용한 Clip 레포트 연동 예제입니다.\r\n본 예제의 연동방법을 사용할 경우, 레포트의 파라미터 및 옵션을 POST 방식으로 전달가능합니다.\r\n해당 연동 방식을 사용할 경우, 레포트를 연동하는 jsp 파일이 필요합니다.\r\n\r\n[조회]버튼을 누르면 조회조건의 파라미터(데이터맵 바인딩)가 레포트로 전달됩니다.\r\n\r\n\u203b 주의사항\r\n- 연동에 실패했을 경우, 레포트서버 url이 틀렸는지 확인하십시오.";
			output_1.style.css({
				"border-right-style" : "solid",
				"border-top-width" : "1px",
				"border-bottom-color" : "gray",
				"border-right-width" : "1px",
				"border-left-style" : "solid",
				"border-bottom-width" : "1px",
				"border-left-color" : "gray",
				"border-top-color" : "gray",
				"border-bottom-style" : "solid",
				"border-right-color" : "gray",
				"border-left-width" : "1px",
				"border-top-style" : "solid"
			});
			container.addChild(output_1, {
				"top": "20px",
				"right": "20px",
				"left": "20px",
				"height": "200px"
			});
			
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["cl-form-group"]);
			var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("dmParam"));
			group_1.setBindContext(dataMapContext_1);
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "1fr";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "1fr";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.setColumns(["100px", "200px", "100px", "200px", "1fr", "70px"]);
			formLayout_1.setUseColumnShade(0, true);
			formLayout_1.setUseColumnShade(2, true);
			formLayout_1.setRows(["30px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_2 = new cpr.controls.Output();
				output_2.value = "param1";
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "param2";
				container.addChild(output_3, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				inputBox_1.bind("value").toDataColumn("strParam1");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var inputBox_2 = new cpr.controls.InputBox("ipb2");
				inputBox_2.bind("value").toDataColumn("strParam2");
				container.addChild(inputBox_2, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var button_1 = new cpr.controls.Button();
				button_1.value = "조회";
				if(typeof onButtonClick == "function") {
					button_1.addEventListener("click", onButtonClick);
				}
				container.addChild(button_1, {
					"colIndex": 5,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "230px",
				"right": "20px",
				"left": "20px",
				"height": "50px"
			});
			
			var embeddedPage_1 = new cpr.controls.EmbeddedPage("ep1");
			embeddedPage_1.src = "hana/blankReport.jsp";
			container.addChild(embeddedPage_1, {
				"top": "290px",
				"right": "20px",
				"bottom": "20px",
				"left": "20px"
			});
		}
	});
	app.title = "rd_embPage";
	cpr.core.Platform.INSTANCE.register(app);
})();
