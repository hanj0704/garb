/*
 * App URI: 202102/tester
 * Source Location: 202102/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202102/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2021. 2. 1. 오전 10:58:25.
			 *
			 * @author HANS
			 ************************************************/
			function rgbToHex(rgbType) {
				  var rgb = rgbType.replace( /[^%,.\d]/g, "" ); 
			        // 쉼표(,)를 기준으로 분리해서, 배열에 담기. 
			        rgb = rgb.split( "," ); 
				function a(str){
					
					var q = Number(str).toString(16);
					if(q.length == 1) {
						q = "0"+q;
					}
					return q;
				}
			  return "#" + a(rgb[0]) + a(rgb[1]) +a(rgb[2]);
			}
			
			
			cpr.expression.ExpressionEngine.INSTANCE.registerFunction("abc", function(index){
				
				var ds = app.lookup("ds6");
				
				var datas = ds.getUnfilteredRowDatas();
				return datas[index].column1
			});
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				var grd = app.lookup("grd1");
			//			var ctrl = grd.detail.getControl(0);
			//			var q = ctrl.style;
			//			ctrl.userData("aa", "qqqqq");
			//			ctrl.htmlAttr("grd1-ctrl1", "zzz");
			//			ctrl.redraw();
			//			var a= document.querySelector(".opt-test");
			//			
			//			console.log(a);
			//			var q = window.getComputedStyle(a);
			//			console.log(q);
			//			console.log(q.getPropertyValue("border"));
						
			//	app.lookup("grd1").getExportData({
			//		exceptStyle : false,
			//		applyFormat : true,
			//		rowDataHandler: function(datas, rowIndex){
			//			
			//			var grd = app.lookup("grd1");
			//			var ctrl = grd.detail.getControl(0);
			//			
			//			var a= document.querySelector(".opt-test");
			//			console.log(a);
			//			var q = window.getComputedStyle(a);
			//			console.log(q);
			//		}
			//	});
			//	var grd = app.lookup("grd1");
				var b = document.getElementById("uuid-"+grd.uuid);
				
				var c = b.querySelector("[aria-label='1행 1열 column11']");
				
				
				var f = c.querySelector(".cl-default-cell");
				var d ;
				var bc ;
				if(f != null){
					d = window.getComputedStyle(f);
					bc = d.getPropertyValue("background-color");
				
				} else {
					f = c.querySelector(".cl-control");
					d = window.getComputedStyle(f);
					bc = d.getPropertyValue("background-color");
				}
				
			//	var d = window.getComputedStyle(c);
			//	var bc = d.getPropertyValue("background-color");
				console.log(rgbToHex(bc));
			}
			
			
			/*
			 * "exportData" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				var grd = app.lookup("grd1");
				
				var a = grd.getExportData({
					exceptStyle : false,
					applyFormat : true
				});
				
				console.log(a);
				
				/** @type Array */
				var q = a.rowgroups[1].data;
				console.log(q);
			
				q.forEach(function(each,idx){
					/** @type Array */
					var w = each;
					
					w.forEach(function(eachs,idxs){
						
						var r = idx+1+"행 "+(idxs+1)+"열 " + eachs.value;
						console.log(r);
						var grd = app.lookup("grd1");
						var b = document.getElementById("uuid-"+grd.uuid);
				
						var c = b.querySelector("[aria-label='"+ r+"']");
						console.log(c);
					});
				});
			}
			
			
			/*
			 * "rgb" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				console.log(rgbToHex("rgb(255,09,10)"));
				
			}
			
			
			/*
			 * "query" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				
				var grd = app.lookup("grd1");
				var b = document.getElementById("uuid-"+grd.uuid);
				
				var han = b.querySelector(".cl-grid-detail .cl-grid-row");
				console.log(han);
				/** @type Array */
				var t = han.querySelectorAll(".cl-grid-cell");
				
				t.forEach(function(each){
					var aaa=  each.querySelector(".cl-default-cell");
					var sty = null;
					if(aaa !=null) {
					sty = window.getComputedStyle(each);
					} else {
					aaa=  each.querySelector(".cl-control");
					sty = window.getComputedStyle(aaa);
					}
					console.log(sty.getPropertyValue("color"));
					console.log(sty.getPropertyValue("border-right"));
					console.log(sty.getPropertyValue("background-color"));
				});
			}
			
			
			/*
			 * "Button" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				
			//	var ea1 = app.lookup("ea1");
			//	var ea2 = app.lookup("ea2");
			//	
			//	var a = ea1.getEmbeddedAppInstance();
			//	console.log(a);
			//	console.log(typeof a);
			//	var ins = a.app.getInstances();
			//	
			//	ins[0] = ins[1];
			//	
			//	console.log(ins);
			//	app.getContainer().redraw();
			
				console.log(app.lookup("ds6").getUnfilteredRowDatas()[8].column1);
			}
			
			
			/*
			 * "Button" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn8 = e.control;
				app.lookup("grd2").filter("getIndex() < 5");
				}
			
			
			/*
			 * "sub" 버튼(btn9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn9Click(/* cpr.events.CMouseEvent */ e){
				
				/** 
				 * @type cpr.controls.Button
				 */
				var btn9 = e.control;
				
				app.lookup("sms2").send()
			}
			
			
			/*
			 * 네비게이션 바에서 item-mouseover 이벤트 발생 시 호출.
			 * 아이템에 마우스오버 했을때 발생하는 이벤트.
			 */
			function onNavigationBarItemMouseover(/* cpr.events.CItemEvent */ e){
				/** 
				 * @type cpr.controls.NavigationBar
				 */
				var navigationBar = e.control;
			//	console.log("zz");
				console.log(app.lookup("grd1").getCellValue(1, "column1"));
				
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
			}
			
			
			/*
			 * 체크 박스에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onCbx1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.CheckBox
				 */
				var cbx1 = e.control;
				e.preventDefault();
				
				cbx1.checked = !cbx1.checked;
			}
			
			
			
			
			/*
			 * "Button" 버튼(btn10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn10Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn10 = e.control;
				var mo = moment("20200801");
				console.log(mo.day());
				
				for(var i = 0;i < 30 ; i++) {
					
					mo = mo.add(1, "d");
					console.log(mo.format("YYYYMMDD"));
					console.log(mo.day());
				}
			}
			
			
			/*
			 * "Button" 버튼(btn11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn11Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn11 = e.control;
				
				var am = moment("20210219","YYYYMMDD");
			//	console.log(am.format("YYYYMMDD"));
			//	console.log(am.startOf("month").week());
				
				console.log(am.startOf("isoWeek").week());
				console.log(am.startOf("Month").format("YYYYMMDD"));
				
				var q = moment("202008","YYYYMM");
				
				console.log(q.startOf("isoweek").month());
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var button = new cpr.controls.Button();
				button.value = "aa";
				app.lookup("grp2").floatControl(button,{
					"top" : "20px",
					"right" : "20px",
					"left" : "100px",
					"bottom" : "20px"
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "column45"},
					{"column1": "column16", "column2": "column26", "column3": "column36", "column4": "column46"},
					{"column1": "column17", "column2": "column27", "column3": "column37", "column4": "column47"},
					{"column1": "column18", "column2": "column28", "column3": "column38", "column4": "column48"},
					{"column1": "column19", "column2": "column29", "column3": "column39", "column4": "column49"},
					{"column1": "column110", "column2": "column210", "column3": "column310", "column4": "column410"},
					{"column1": "column111", "column2": "column211", "column3": "column311", "column4": "column411"},
					{"column1": "column112", "column2": "column212", "column3": "column312", "column4": "column412"},
					{"column1": "column113", "column2": "column213", "column3": "column313", "column4": "column413"},
					{"column1": "column114", "column2": "column214", "column3": "column314", "column4": "column414"},
					{"column1": "column115", "column2": "column215", "column3": "column315", "column4": "column415"},
					{"column1": "column116", "column2": "column216", "column3": "column316", "column4": "column416"},
					{"column1": "column117", "column2": "column217", "column3": "column317", "column4": "column417"},
					{"column1": "column118", "column2": "column218", "column3": "column318", "column4": "column418"},
					{"column1": "column119", "column2": "column219", "column3": "column319", "column4": "column419"},
					{"column1": "column120", "column2": "column220", "column3": "column320", "column4": "column420"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41", "column5": "column51"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42", "column5": "column52"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43", "column5": "column53"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44", "column5": "column54"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "column45", "column5": "column55"},
					{"column1": "column16", "column2": "column26", "column3": "column36", "column4": "column46", "column5": "column56"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds3");
			dataSet_3.parseData({
				"columns" : [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{"name": "column6"},
					{"name": "column7"},
					{"name": "column8"},
					{"name": "column9"},
					{"name": "column10"},
					{"name": "column11"},
					{"name": "column12"},
					{"name": "column13"},
					{"name": "column14"},
					{"name": "column15"},
					{"name": "column16"},
					{"name": "column17"},
					{"name": "column18"},
					{"name": "column19"},
					{"name": "column20"},
					{"name": "column21"},
					{"name": "column22"},
					{"name": "column23"},
					{"name": "column24"},
					{"name": "column25"},
					{"name": "column26"},
					{"name": "column27"},
					{"name": "column28"},
					{"name": "column29"},
					{"name": "column30"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("ds4");
			dataSet_4.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41", "column5": "column51"},
					{"column1": "column11", "column2": "column22", "column3": "column32", "column4": "column42", "column5": "column52"},
					{"column1": "column11", "column2": "column23", "column3": "column33", "column4": "column43", "column5": "column53"},
					{"column1": "column12", "column2": "column23", "column3": "column34", "column4": "column44", "column5": "column54"},
					{"column1": "column12", "column2": "column23", "column3": "column35", "column4": "column45", "column5": "column55"},
					{"column1": "column12", "column2": "column26", "column3": "column36", "column4": "column46", "column5": "column56"},
					{"column1": "column12", "column2": "column27", "column3": "column37", "column4": "column47", "column5": "column57"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("ds5");
			dataSet_5.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{
						"name": "column4",
						"dataType": "number"
					}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "1234123"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "12343124"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "112423"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "2424"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "35353"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("ds6");
			dataSet_6.parseData({
				"filterCondition": "",
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31"},
					{"column1": "column12", "column2": "column22", "column3": "column32"},
					{"column1": "column13", "column2": "column23", "column3": "column33"},
					{"column1": "column14", "column2": "column24", "column3": "column34"},
					{"column1": "column15", "column2": "column25", "column3": "column35"},
					{"column1": "column16", "column2": "column26", "column3": "column36"},
					{"column1": "column17", "column2": "column27", "column3": "column37"},
					{"column1": "column18", "column2": "column28", "column3": "column38"},
					{"column1": "column19", "column2": "column29", "column3": "column39"},
					{"column1": "column110", "column2": "column210", "column3": "column310"},
					{"column1": "column111", "column2": "column211", "column3": "column311"},
					{"column1": "column112", "column2": "column212", "column3": "column312"},
					{"column1": "column113", "column2": "column213", "column3": "column313"},
					{"column1": "column114", "column2": "column214", "column3": "column314"},
					{"column1": "column115", "column2": "column215", "column3": "column315"},
					{"column1": "column116", "column2": "column216", "column3": "column316"},
					{"column1": "column117", "column2": "column217", "column3": "column317"},
					{"column1": "column118", "column2": "column218", "column3": "column318"},
					{"column1": "column119", "column2": "column219", "column3": "column319"},
					{"column1": "column120", "column2": "column220", "column3": "column320"},
					{"column1": "column121", "column2": "column221", "column3": "column321"},
					{"column1": "column122", "column2": "column222", "column3": "column322"}
				]
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("ds7");
			dataSet_7.parseData({
				"columns": [
					{"name": "T1_CUST_NO"},
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "T1_CUST_NO": "1000000001"},
					{"column1": "column11", "column2": "column22", "column3": "column32", "T1_CUST_NO": "1000000001"},
					{"column1": "column11", "column2": "column23", "column3": "column33", "T1_CUST_NO": "1000000001"},
					{"column1": "column11", "column2": "column24", "column3": "column34", "T1_CUST_NO": "1000000001"},
					{"column1": "column11", "column2": "column25", "column3": "column35", "T1_CUST_NO": "1000000001"},
					{"column1": "column16", "column2": "column26", "column3": "column36", "T1_CUST_NO": "1000000001"},
					{"column1": "column16", "column2": "column27", "column3": "column37", "T1_CUST_NO": "1000000001"},
					{"column1": "column16", "column2": "column28", "column3": "column38", "T1_CUST_NO": "1000000001"},
					{"column1": "column16", "column2": "column29", "column3": "column39", "T1_CUST_NO": "1000000002"},
					{"column1": "column16", "column2": "column210", "column3": "column310", "T1_CUST_NO": "1000000003"}
				]
			});
			app.register(dataSet_7);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "/hans/test.do";
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms2");
			submission_2.action = "./tester.clx";
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["cl-form-group"]);
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds7"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "T1_CUST_NO";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "T1_CUST_NO";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "T1_CUST_NO";
								cell.suppressible = true;
								cell.control = (function(){
									var output_1 = new cpr.controls.Output("opt1");
									output_1.value = "Output";
									output_1.format = "XXX-XX-XXXXX";
									output_1.bind("value").toDataColumn("T1_CUST_NO");
									return output_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						}
					]
				},
				"footer": {
					"rows": [{"height": "20px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
							}
						}
					]
				},
				"rowGroup": [{
					"groupCondition": "T1_CUST_NO",
					"gfooter": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.expr = "T1_CUST_NO";
									cell.control = (function(){
										var maskEditor_1 = new cpr.controls.MaskEditor("mse1");
										maskEditor_1.mask = "XXX-XX-XXXXX";
										return maskEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							}
						]
					}
				}]
			});
			container.addChild(grid_1, {
				"top": "65px",
				"left": "20px",
				"width": "847px",
				"height": "278px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
