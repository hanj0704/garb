/*
 * App URI: 202110/tester
 * Source Location: 202110/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202110/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2021. 10. 5. 오후 4:00:30.
			 *
			 * @author HANS
			 ************************************************/
			
			cpr.core.NotificationCenter.INSTANCE.subscribe("SELECTIONCHANGERMAN", app, function(data){
				console.log(data);
			},"two");
			
			
			/*
			 * 넘버 에디터에서 value-change 이벤트 발생 시 호출.
			 * NumberEditor의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onNbe1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.NumberEditor
				 */
				var nbe1 = e.control;
				console.log("ㅋㅋ");
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				app.lookup("dm1").build({
					"column1" : 123
				});
				
				app.lookup("nbe1").redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				var a = true;
				
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				var ds = app.lookup("ds1");
				
				ds.moveRowIndex(2, ds.getRowCount()-1);
				app.lookup("grd1").redraw();
			}
			
			
			/*
			 * 그리드에서 scroll 이벤트 발생 시 호출.
			 * 그리드 디테일 컨텐츠가 스크롤될 때 발생하는 이벤트.
			 */
			function onGrd1Scroll(/* cpr.events.CScrollEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				
				app.lookup("grU").redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				var img = app.lookup("img1");
				
				var vaItems = img.getItems();
				
				var vaFilt = vaItems.filter(function(each){
					return each.value =="value1";
				});
				
				console.log(vaFilt);
			}
			
			
			/*
			 * 이미지에서 item-click 이벤트 발생 시 호출.
			 * 이미지 영역 아이템 클릭시 발생하는 이벤트.
			 */
			function onImg1ItemClick(/* cpr.events.CItemEvent */ e){
				/** 
				 * @type cpr.controls.Image
				 */
				var img1 = e.control;
				
				var item = e.item;
				console.log(item);
				
				item.label = "aaa";
				
				console.log(item);
				
				
				app.lookup("img1").redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 mouseenter 이벤트 발생 시 호출.
			 * 마우스 포인터가 컨트롤 위에 진입할 때 발생하는 이벤트.
			 */
			function onBtn5Mouseenter(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				
				btn5.style.css("z-index","15");
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 mouseleave 이벤트 발생 시 호출.
			 * 사용자가 컨트롤 및 컨트롤의 자식 영역 바깥으로 마우스 포인터를 이동할 때 발생하는 이벤트.
			 */
			function onBtn5Mouseleave(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				btn5.style.removeStyle("z-index");
			}
			
			
			/*
			 * "numFind" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				
				var vsFind = /\d+/;
				
				var vsFinded = "MFC132";
				
				console.log(vsFinded.match(vsFind));
			}
			
			
			/*
			 * "substr -2" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn8 = e.control;
				
				var a= "abcdefghijk";
				console.log(a);
				console.log(a.substring(2));
				console.log(a.substr(-2));
				console.log(a.slice(0, -2));
				console.log(a);
			}
			
			
			/*
			 * 루트 컨테이너에서 focusin 이벤트 발생 시 호출.
			 * 컨트롤 및 컨트롤의 하위 요소가 포커스를 획득하기 직전 발생하는 이벤트.
			 */
			function onBodyFocusin(/* cpr.events.CFocusEvent */ e){
				
				console.log("FOCUSIN");
				console.log(e);
			}
			
			
			/*
			 * 루트 컨테이너에서 focusout 이벤트 발생 시 호출.
			 * 컨트롤 밑 컨트롤의 하위 요소가 포커스를 잃기 직전 발생하는 이벤트.
			 */
			function onBodyFocusout(/* cpr.events.CFocusEvent */ e){
				
				console.log("FOCUSOUT");
			}
			
			
			/*
			 * 루트 컨테이너에서 host-change 이벤트 발생 시 호출.
			 * 앱이 다른 부모 앱에 포함되거나 부모 앱으로 부터 이탈할 때 발생하는 이벤트 입니다.
			 */
			function onBodyHostChange(/* cpr.events.CEvent */ e){
				
				console.log("HOST_CHANGER");
			}
			
			
			/*
			 * "Button" 버튼(btn9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn9Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn9 = e.control;
				
				var ds = app.lookup("ds1");
				var a = ds.getRowData(0);
				var b = ds.getRowData(0);
				
				console.log(JSON.stringify(a) == JSON.stringify(b));
				console.log(JSON.stringify(null))
			}
			
			
			/*
			 * "Button" 버튼(btn10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn10Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn10 = e.control;
				btn10.setBindContext(null);
				
				console.log(btn10.getBindContext());
			}
			
			
			/*
			 * "Button" 버튼(btn11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn11Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn11 = e.control;
				
			//	app.lookup("dsPrcSumXXYYList").build({
			//    "RECIPE_NAME": "111",
			//    "WAFER_NO": "2",
			//    "POS_WAFER_T": "0",
			//    "RUN_PROC_STEP_T": "80",
			//    "PROC_STOP_T": "0",
			//    "NUM_STOPS": "0",
			//    "NUM_WARNINGS": "0",
			//    "NUM_FAULTS": "0"
			//})
				app.lookup("dsPrcSumXXYYList").build([{
			    "RECIPE_NAME": "111",
			    "WAFER_NO": "2",
			    "POS_WAFER_T": "0",
			    "RUN_PROC_STEP_T": "80",
			    "PROC_STOP_T": "0",
			    "NUM_STOPS": "0",
			    "NUM_WARNINGS": "0",
			    "NUM_FAULTS": "0"
			}])
				
				console.log(app.lookup("dsPrcSumXXYYList").getRowDataRanged());
			}
			
			
			/*
			 * "Button" 버튼(btn12)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn12Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn12 = e.control;
				
				app.lookup("ds2").build([
					
				])
			}
			
			
			
			/*
			 * 루트 컨테이너에서 mousedown 이벤트 발생 시 호출.
			 * 사용자가 컨트롤 위에 포인터를 위치한 상태로 마우스 버튼을 누를 때 발생하는 이벤트.
			 */
			function onBodyMousedown(/* cpr.events.CMouseEvent */ e){
				
				console.log(e);
				app.lookup("opt2").value = "CLICK";
			}
			
			
			/*
			 * "Button" 버튼(btn13)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn13Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn13 = e.control;
				
				
			//	app.lookup("ds1")
			}
			
			var abc = null;
			
			/*
			 * "Button" 버튼(btn14)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn14Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn14 = e.control;
				
				abc = setInterval(function(){
					console.log("하하하!");
				}, 1000);
				
			}
			
			
			/*
			 * "Button" 버튼(btn15)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn15Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn15 = e.control;
				
				clearInterval(abc);
			}
			
			
			/*
			 * "Button" 버튼(btn16)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn16Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn16 = e.control;
				
				
				
				var a = function(){}
				
				a.prototype.avc = "1";
				
				var b = cpr.controls.CheckBoxGroup.prototype;
				console.log(b);
				a.prototype = b;
				
				console.log(a);
				console.log(a.prototype);
				
				var c = new a();
				
				console.log(c);
			
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31"},
					{"column1": "column12", "column2": "column22", "column3": "column32"},
					{"column1": "column13", "column2": "column23", "column3": "column33"},
					{"column1": "column14", "column2": "column24", "column3": "column34"},
					{"column1": "column15", "column2": "column25", "column3": "column35"},
					{"column1": "column16", "column2": "column26", "column3": "column36"},
					{"column1": "column17", "column2": "column27", "column3": "column37"},
					{"column1": "column18", "column2": "column28", "column3": "column38"},
					{"column1": "column19", "column2": "column29", "column3": "column39"},
					{"column1": "column110", "column2": "column210", "column3": "column310"},
					{"column1": "column111", "column2": "column211", "column3": "column311"},
					{"column1": "column112", "column2": "column212", "column3": "column312"},
					{"column1": "column113", "column2": "column213", "column3": "column313"},
					{"column1": "column114", "column2": "column214", "column3": "column314"},
					{"column1": "column115", "column2": "column215", "column3": "column315"},
					{"column1": "column116", "column2": "column216", "column3": "column316"},
					{"column1": "column117", "column2": "column217", "column3": "column317"},
					{"column1": "column118", "column2": "column218", "column3": "column318"},
					{"column1": "column119", "column2": "column219", "column3": "column319"},
					{"column1": "column120", "column2": "column220", "column3": "column320"},
					{"column1": "column121", "column2": "column221", "column3": "column321"},
					{"column1": "column122", "column2": "column222", "column3": "column322"},
					{"column1": "column123", "column2": "column223", "column3": "column323"},
					{"column1": "column124", "column2": "column224", "column3": "column324"},
					{"column1": "column125", "column2": "column225", "column3": "column325"},
					{"column1": "column126", "column2": "column226", "column3": "column326"},
					{"column1": "column127", "column2": "column227", "column3": "column327"},
					{"column1": "column128", "column2": "column228", "column3": "column328"},
					{"column1": "column129", "column2": "column229", "column3": "column329"},
					{"column1": "column130", "column2": "column230", "column3": "column330"},
					{"column1": "column131", "column2": "column231", "column3": "column331"},
					{"column1": "column132", "column2": "column232", "column3": "column332"},
					{"column1": "column133", "column2": "column233", "column3": "column333"},
					{"column1": "column134", "column2": "column234", "column3": "column334"},
					{"column1": "column135", "column2": "column235", "column3": "column335"},
					{"column1": "column136", "column2": "column236", "column3": "column336"},
					{"column1": "column137", "column2": "column237", "column3": "column337"},
					{"column1": "column138", "column2": "column238", "column3": "column338"},
					{"column1": "column139", "column2": "column239", "column3": "column339"},
					{"column1": "column140", "column2": "column240", "column3": "column340"},
					{"column1": "column141", "column2": "column241", "column3": "column341"},
					{"column1": "column142", "column2": "column242", "column3": "column342"},
					{"column1": "column143", "column2": "column243", "column3": "column343"},
					{"column1": "column144", "column2": "column244", "column3": "column344"},
					{"column1": "column145", "column2": "column245", "column3": "column345"},
					{"column1": "column146", "column2": "column246", "column3": "column346"},
					{"column1": "column147", "column2": "column247", "column3": "column347"},
					{"column1": "column148", "column2": "column248", "column3": "column348"},
					{"column1": "column149", "column2": "column249", "column3": "column349"},
					{"column1": "column150", "column2": "column250", "column3": "column350"},
					{"column1": "column151", "column2": "column251", "column3": "column351"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsPrcSumXXYYList");
			dataSet_2.userAttr({"tableName": "PrcSum_xx_yy"});
			dataSet_2.parseData({
				"columns": [
					{"name": "RECIPE_NAME"},
					{"name": "WAFER_NO"},
					{"name": "POS_WAFER_T"},
					{"name": "RUN_PROC_STEP_T"},
					{"name": "PROC_STOP_T"},
					{"name": "NUM_STOPS"},
					{"name": "NUM_WARNINGS"},
					{"name": "NUM_FAULTS"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds2");
			dataSet_3.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21"},
					{"column1": "column12", "column2": "column22"},
					{"column1": "column13", "column2": "column23"}
				]
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{
					"name": "column1",
					"dataType": "number"
				}]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
			numberEditor_1.bind("value").toExpression("#grd1.getViewingStartRowIndex()");
			if(typeof onNbe1ValueChange == "function") {
				numberEditor_1.addEventListener("value-change", onNbe1ValueChange);
			}
			container.addChild(numberEditor_1, {
				"top": "60px",
				"left": "20px",
				"width": "172px",
				"height": "34px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "20px",
				"left": "140px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = linker.grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						}
					]
				}
			});
			if(typeof onGrd1Scroll == "function") {
				grid_1.addEventListener("scroll", onGrd1Scroll);
			}
			container.addChild(grid_1, {
				"top": "61px",
				"left": "209px",
				"width": "552px",
				"height": "301px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "74px",
				"left": "787px",
				"width": "100px",
				"height": "20px"
			});
			
			var image_1 = new cpr.controls.Image("img1");
			image_1.style.item.css({
				"stroke-opacity" : "1",
				"stroke-width" : "1",
				"stroke" : "red",
				"fill-opacity" : "0.3"
			});
			image_1.style.item.bindClass().toExpression("label == \"aaa\" ? \"zin\" : \"\"");
			(function(image_1){
				image_1.addItem(new cpr.controls.ImageAreaItem("label1", "value1", "circle", "300,121,40"));
				image_1.addItem(new cpr.controls.ImageAreaItem("label2", "value2", "circle", "270,95,40"));
				image_1.addItem(new cpr.controls.ImageAreaItem("label3", "value3", "rect", "267,54,337,121"));
				image_1.addItem(new cpr.controls.ImageAreaItem("label4", "value4", "rect", "230,94,301,160"));
			})(image_1);
			if(typeof onImg1ItemClick == "function") {
				image_1.addEventListener("item-click", onImg1ItemClick);
			}
			container.addChild(image_1, {
				"top": "384px",
				"left": "87px",
				"width": "568px",
				"height": "258px"
			});
			
			var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.tests.gridUDC("grU");
			container.addChild(userDefinedControl_1, {
				"top": "20px",
				"left": "554px",
				"width": "200px",
				"height": "30px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Button";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "384px",
				"left": "665px",
				"width": "100px",
				"height": "20px"
			});
			
			var pageIndexer_1 = new cpr.controls.PageIndexer();
			pageIndexer_1.init(1, 1, 1);
			container.addChild(pageIndexer_1, {
				"top": "662px",
				"left": "383px",
				"width": "394px",
				"height": "49px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cmb1");
			(function(comboBox_1){
				comboBox_1.addItem(new cpr.controls.Item("가정학과", "value1"));
				comboBox_1.addItem(new cpr.controls.Item("가정과학대학", "value2"));
				comboBox_1.addItem(new cpr.controls.Item("간호과학대학", "value3"));
				comboBox_1.addItem(new cpr.controls.Item("과학기술대학", "value4"));
			})(comboBox_1);
			container.addChild(comboBox_1, {
				"top": "153px",
				"left": "764px",
				"width": "206px",
				"height": "36px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.value = "Button";
			if(typeof onBtn5Mouseenter == "function") {
				button_5.addEventListener("mouseenter", onBtn5Mouseenter);
			}
			if(typeof onBtn5Mouseleave == "function") {
				button_5.addEventListener("mouseleave", onBtn5Mouseleave);
			}
			container.addChild(button_5, {
				"top": "432px",
				"left": "665px",
				"width": "290px",
				"height": "121px"
			});
			
			var button_6 = new cpr.controls.Button("btn6");
			button_6.value = "Button";
			container.addChild(button_6, {
				"top": "414px",
				"left": "654px",
				"width": "251px",
				"height": "110px"
			});
			
			var button_7 = new cpr.controls.Button("btn7");
			button_7.value = "numFind";
			if(typeof onBtn7Click == "function") {
				button_7.addEventListener("click", onBtn7Click);
			}
			container.addChild(button_7, {
				"top": "384px",
				"left": "776px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_8 = new cpr.controls.Button("btn8");
			button_8.value = "substr -2";
			if(typeof onBtn8Click == "function") {
				button_8.addEventListener("click", onBtn8Click);
			}
			container.addChild(button_8, {
				"top": "104px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_9 = new cpr.controls.Button("btn9");
			button_9.value = "Button";
			if(typeof onBtn9Click == "function") {
				button_9.addEventListener("click", onBtn9Click);
			}
			container.addChild(button_9, {
				"top": "641px",
				"left": "119px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_10 = new cpr.controls.Button("btn10");
			button_10.value = "Button";
			var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("dm1"));
			button_10.setBindContext(dataMapContext_1);
			if(typeof onBtn10Click == "function") {
				button_10.addEventListener("click", onBtn10Click);
			}
			container.addChild(button_10, {
				"top": "677px",
				"left": "110px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_11 = new cpr.controls.Button("btn11");
			button_11.value = "Button";
			var dataMapContext_2 = new cpr.bind.DataMapContext(app.lookup("dm1"));
			button_11.setBindContext(dataMapContext_2);
			if(typeof onBtn11Click == "function") {
				button_11.addEventListener("click", onBtn11Click);
			}
			container.addChild(button_11, {
				"top": "696px",
				"left": "87px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_12 = new cpr.controls.Button("btn12");
			button_12.value = "Button";
			var dataMapContext_3 = new cpr.bind.DataMapContext(app.lookup("dm1"));
			button_12.setBindContext(dataMapContext_3);
			if(typeof onBtn12Click == "function") {
				button_12.addEventListener("click", onBtn12Click);
			}
			container.addChild(button_12, {
				"top": "696px",
				"left": "186px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_13 = new cpr.controls.Button("btn13");
			button_13.value = "Button";
			if(typeof onBtn13Click == "function") {
				button_13.addEventListener("click", onBtn13Click);
			}
			container.addChild(button_13, {
				"top": "188px",
				"left": "46px",
				"width": "130px",
				"height": "47px"
			});
			
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "Output";
			if(typeof onOpt1Click == "function") {
				output_1.addEventListener("click", onOpt1Click);
			}
			container.addChild(output_1, {
				"top": "216px",
				"left": "764px",
				"width": "206px",
				"height": "51px"
			});
			
			var output_2 = new cpr.controls.Output("opt2");
			output_2.value = "Output";
			container.addChild(output_2, {
				"top": "277px",
				"left": "764px",
				"width": "206px",
				"height": "51px"
			});
			
			var output_3 = new cpr.controls.Output("opt3");
			output_3.value = "Output";
			container.addChild(output_3, {
				"top": "338px",
				"left": "798px",
				"width": "206px",
				"height": "51px"
			});
			
			var checkBox_1 = new cpr.controls.CheckBox("cbx1");
			checkBox_1.text = "Check";
			container.addChild(checkBox_1, {
				"top": "584px",
				"left": "665px",
				"width": "140px",
				"height": "31px"
			});
			
			var button_14 = new cpr.controls.Button("btn14");
			button_14.value = "Button";
			if(typeof onBtn14Click == "function") {
				button_14.addEventListener("click", onBtn14Click);
			}
			container.addChild(button_14, {
				"top": "277px",
				"left": "76px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_15 = new cpr.controls.Button("btn15");
			button_15.value = "Button";
			if(typeof onBtn15Click == "function") {
				button_15.addEventListener("click", onBtn15Click);
			}
			container.addChild(button_15, {
				"top": "307px",
				"left": "76px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_16 = new cpr.controls.Button("btn16");
			button_16.value = "Button";
			if(typeof onBtn16Click == "function") {
				button_16.addEventListener("click", onBtn16Click);
			}
			container.addChild(button_16, {
				"top": "598px",
				"left": "838px",
				"width": "79px",
				"height": "63px"
			});
			if(typeof onBodyHostChange == "function"){
				app.addEventListener("host-change", onBodyHostChange);
			}
			if(typeof onBodyFocusin == "function"){
				app.getContainer().addEventListener("focusin", onBodyFocusin);
			}
			if(typeof onBodyFocusout == "function"){
				app.getContainer().addEventListener("focusout", onBodyFocusout);
			}
			if(typeof onBodyTouchstart == "function"){
				app.getContainer().addEventListener("touchstart", onBodyTouchstart);
			}
			if(typeof onBodyClick == "function"){
				app.getContainer().addEventListener("click", onBodyClick);
			}
			if(typeof onBodyMousedown == "function"){
				app.getContainer().addEventListener("mousedown", onBodyMousedown);
			}
			// Linking
			linker.userDefinedControl_1.gridCtrl = linker.grid_1;
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
