/*
 * App URI: 202009/mobileTest
 * Source Location: 202009/mobileTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202009/mobileTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * mobileTest.js
			 * Created at 2020. 9. 3. 오후 2:07:13.
			 *
			 * @author han
			 ************************************************/
			
			var mouseStart;
			var touchStart;
			/*
			 * 그리드에서 mousedown 이벤트 발생 시 호출.
			 * 사용자가 컨트롤 위에 포인터를 위치한 상태로 마우스 버튼을 누를 때 발생하는 이벤트.
			 */
			function onGrd1Mousedown(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
			
				app.lookup("opt1").value = "MouseDown";
				
				mouseStart = e.timeStamp;
			}
			
			
			/*
			 * 그리드에서 mouseup 이벤트 발생 시 호출.
			 * 사용자가 컨트롤 위에 포인터를 위치한 상태로 마우스 버튼을 뗄 때 발생하는 이벤트.
			 */
			function onGrd1Mouseup(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				app.lookup("opt1").value ="MouseUp";
				
				var endDate = e.timeStamp;
				var differ =moment.unix(endDate).diff(moment.unix(mouseStart), "seconds");
				
				if(differ > 2000) {
					alert("2초 터치");
				}
			}
			
			
			/*
			 * 그리드에서 touchstart 이벤트 발생 시 호출.
			 * 하나 이상의 터치 포인트가 터치 표면상에 배치될 때 발생하는 이벤트.
			 */
			function onGrd1Touchstart(/* cpr.events.CTouchEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				app.lookup("opt1").value = "touchStart";
				touchStart = e.timeStamp;
			}
			
			
			/*
			 * 그리드에서 touchend 이벤트 발생 시 호출.
			 * 하나 이상의 터치 포인트가 터치 표면에서 제거될 때 발생하는 이벤트.
			 */
			function onGrd1Touchend(/* cpr.events.CTouchEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				app.lookup("opt1").value = "touchStart";
				var endDate = e.timeStamp;
				var differ =moment.unix(endDate).diff(moment.unix(touchStart), "seconds");
				
				if(differ > 2000) {
					alert("2초 터치");
				}
				
				e.preventDefault();
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
							}
						}
					]
				}
			});
			if(typeof onGrd1Mousedown == "function") {
				grid_1.addEventListener("mousedown", onGrd1Mousedown);
			}
			if(typeof onGrd1Mouseup == "function") {
				grid_1.addEventListener("mouseup", onGrd1Mouseup);
			}
			if(typeof onGrd1Touchstart == "function") {
				grid_1.addEventListener("touchstart", onGrd1Touchstart);
			}
			if(typeof onGrd1Touchend == "function") {
				grid_1.addEventListener("touchend", onGrd1Touchend);
			}
			container.addChild(grid_1, {
				"top": "20px",
				"left": "20px",
				"width": "170px",
				"height": "200px"
			});
			
			var output_1 = new cpr.controls.Output("opt1");
			container.addChild(output_1, {
				"top": "230px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
		}
	});
	app.title = "mobileTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
