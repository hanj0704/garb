/*
 * App URI: 202009/hrmCMstFrame
 * Source Location: 202009/hrmCMstFrame.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202009/hrmCMstFrame", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * cmnCGrid.js
			 * Created at 2020. 3. 9. 오후 12:49:14.
			 *
			 * @author skyha
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
			
					/*공통 서비스 호출 (공통코드, 현재일자)*/
					
					/****************공통코드****************
					-	첫번째 인자: 응답받은 공통코드를 받을 데이터셋 ID
					-	두번째 인자: 조회할 공통코드 구분(CD_CLS)
					-	세번째 인자: 조회할 코드(CD)
					-	네번째 인자: 사용여부 (Y/)
					-	다섯번째 인자: 권한코드 여부
					***************************************/	
			
					/****************현재일자****************
					-	구분자: stime
					-	배열 첫번째 인자: 응답받을 데이터를 저장할 데이터맵 명
					-	배열 두번재 인자: 응답 데이터 노드명
					-	배열 세번째 인자: 날짜 포맷
					***************************************/
			
				var voParams = [
					            ["dsGenderRcd", "CMN012", "", "Y", "Y"],
							    ["dsLnrSlrDivRcd", "CMN013", "", "Y", "Y"],
							    ["dsOnffiStatRcd", "APS001", "", "Y", "Y"],
							    ["dsNatRcd", "CMN019", "", "Y", "Y"],
							    {"stime":["dmTime", "strToday", "%Y%m%d"]}
							   ];
			
				util.Submit.send(app, "subOnload_tran", voParams, function(pbSuccess){
					if(pbSuccess){
						
					}
				});
			}
			
			
			/**
			 * 메시지 목록데이터를 조회한다.
			 * @param psStatus - 조회 상태(저장 후 조회인 경우에는 'save' 구분값 넘김)
			 */
			function doList(psStatus){
						
				//조회 서브미션 호출
				util.Submit.send(app, "subList", null, function(pbSuccess){
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
							// 디테일 데이터 초기화
							app.lookup("grpHrmStaffInfo").redraw();
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
							// 디테일 데이터 초기화
							app.lookup("grpHrmStaffInfo").redraw();
						}
					}
						
				});
			}
			
			
			function doSave() {
				
				// 프리폼의 변경사항 유/무를 반환
				if (!util.FreeForm.isModified(app, "grpHrmStaffInfo", "MSG")) return false;
				
				// 그리드 유효성 검증
				if(!util.validate(app, "grpHrmStaffInfo")) return false;
				
				util.Submit.send(app, "subSave", null, function(pbSuccess){
					if(pbSuccess){
						doList("save");
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onCombtnsearch1Search(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comBtnSearch
				 */
				var combtnsearch1 = e.control;
				
				// 폼영역 데이터 변경사항 체크
				if (util.Grid.isModified(app, "grpHrmStaffInfo", "CRM")) {
					return false;
				}
				
				// 조회조건 유효성 체크
				if(app.lookup("Ipbsch").getText() == null){
					
					alert("사번을 입력해주시기 바랍니다.");
					
					return false;
				}
				if(!util.validate(app, "grpSearch")) return false;
				
				doList();
				
				
			}
			
			 
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 * 저장 클릭 이벤트
			 */
			function onCombutton2Save(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.comButton
				 */
				var combutton2 = e.control;
				
				doSave();
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 delete 이벤트 발생 시 호출.
			 * 삭제 클릭 이벤트
			 */
			function onCombutton2Delete(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.comButton
				 */
				var combutton2 = e.control;
				doSave();
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 */
			function onUdcHrmPStaffSrhSearch(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.udcHrmPStaffSrh
				 */
				var udcHrmPStaffSrh = e.control;
				
				doList();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmnTmpReg");
			dataSet_1.parseData({
				"info": "STUD_NO",
				"columns": [
					{
						"name": "PARTY_ID",
						"dataType": "string"
					},
					{
						"name": "STUD_NO",
						"dataType": "string"
					},
					{
						"name": "REP_NM",
						"dataType": "string"
					},
					{
						"name": "ENG_NM",
						"dataType": "string"
					},
					{
						"name": "CHA_NM",
						"dataType": "string"
					},
					{
						"name": "GENDER_RCD",
						"dataType": "string"
					},
					{
						"name": "SSN",
						"dataType": "string"
					},
					{
						"name": "STUD_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "DEPT_CD",
						"dataType": "string"
					},
					{
						"name": "DAY_NIGHT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{
						"name": "ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "ADDR1",
						"dataType": "string"
					},
					{
						"name": "ADDR2",
						"dataType": "string"
					},
					{
						"name": "CLP_NO",
						"dataType": "string"
					},
					{
						"name": "AEN",
						"dataType": "string"
					},
					{
						"name": "EMAIL",
						"dataType": "string"
					},
					{
						"name": "BANK_RCD",
						"dataType": "string"
					},
					{
						"name": "ACCT_NO",
						"dataType": "string"
					},
					{
						"name": "OWNER_NM",
						"dataType": "string"
					},
					{
						"name": "FILE_SERIAL_NO",
						"dataType": "decimal"
					}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsGenderRcd");
			dataSet_2.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsOnffiStatRcd");
			dataSet_3.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsNatRcd");
			dataSet_4.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsStaffInfo");
			dataSet_5.parseData({});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsLnrSlrDivRcd");
			dataSet_6.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmTime");
			dataMap_1.parseData({
				"columns" : [{"name": "strToday"}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmParam");
			dataMap_2.parseData({
				"columns" : [{"name": "strStaffNo"}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmStaffInfo");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "PARTY_ID",
						"dataType": "string",
						"info": ""
					},
					{
						"name": "STAFF_NO",
						"dataType": "string"
					},
					{"name": "SSN"},
					{
						"name": "STAFF_NM",
						"dataType": "string",
						"info": ""
					},
					{
						"name": "STAFF_ENG_NM",
						"dataType": "string",
						"info": ""
					},
					{
						"name": "BRTDY",
						"dataType": "string"
					},
					{
						"name": "LNR_SLR_DIV_RCD",
						"dataType": "string"
					},
					{"name": "LNR_SLR_DIV_NM"},
					{
						"name": "GENDER_RCD",
						"dataType": "string",
						"info": ""
					},
					{"name": "GENDER_NM"},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{"name": "NAT_NM"},
					{
						"name": "ONOFFI_STAT_RCD",
						"dataType": "string"
					},
					{"name": "ONOFFI_STAT_NM"},
					{
						"name": "WKGRD_RCD",
						"dataType": "string"
					},
					{"name": "WKGRD_NM"},
					{
						"name": "DEPT_CD",
						"dataType": "string"
					},
					{"name": "DEPT_NM"},
					{
						"name": "CIR_ST_DT",
						"dataType": "string"
					},
					{
						"name": "ENTCO_DT",
						"dataType": "string"
					},
					{
						"name": "RETI_DT",
						"dataType": "string"
					},
					{
						"name": "FINAL_SCL",
						"dataType": "string"
					},
					{
						"name": "ACCR_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "EMAIL",
						"dataType": "string"
					},
					{
						"name": "ADDR",
						"dataType": "string"
					},
					{
						"name": "CLP_NO",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/MstFrame/onLoad.do";
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/MstFrame/list.do";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/MstFrame/save.do";
			submission_3.addRequestData(dataMap_3);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1320px)", "eXFrame");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["67px", "1fr"]);
			formLayout_1.setRowAutoSizing(0, true);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpHeader");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 0;
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader("appheader");
				container.addChild(userDefinedControl_1, {
					"width": "500px",
					"height": "30px"
				});
				var group_2 = new cpr.controls.Container("grpSearch");
				group_2.style.setClasses(["search-box"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "5px";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "5px";
				formLayout_2.leftMargin = "5px";
				formLayout_2.horizontalSpacing = "5px";
				formLayout_2.verticalSpacing = "5px";
				formLayout_2.setColumns(["1fr", "60px"]);
				formLayout_2.setRows(["25px"]);
				formLayout_2.setRowAutoSizing(0, true);
				group_2.setLayout(formLayout_2);
				(function(container){
					var group_3 = new cpr.controls.Container("grp4");
					// Layout
					var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
					group_3.setLayout(flowLayout_1);
					(function(container){
						var group_4 = new cpr.controls.Container("grp5");
						// Layout
						var formLayout_3 = new cpr.controls.layouts.FormLayout();
						formLayout_3.topMargin = "0px";
						formLayout_3.rightMargin = "0px";
						formLayout_3.bottomMargin = "0px";
						formLayout_3.leftMargin = "0px";
						formLayout_3.horizontalSpacing = "5px";
						formLayout_3.verticalSpacing = "5px";
						formLayout_3.setColumns(["100px", "1fr"]);
						formLayout_3.setRows(["1fr"]);
						group_4.setLayout(formLayout_3);
						(function(container){
							var output_1 = new cpr.controls.Output();
							output_1.value = "사번";
							output_1.style.setClasses(["require"]);
							container.addChild(output_1, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var userDefinedControl_2 = new udc.com.udcHrmPStaffSrh("Ipbsch");
							userDefinedControl_2.bind("oStaffNo").toDataMap(app.lookup("dmParam"), "strStaffNo");
							if(typeof onUdcHrmPStaffSrhSearch == "function") {
								userDefinedControl_2.addEventListener("search", onUdcHrmPStaffSrhSearch);
							}
							container.addChild(userDefinedControl_2, {
								"colIndex": 1,
								"rowIndex": 0
							});
						})(group_4);
						container.addChild(group_4, {
							"width": "300px",
							"height": "25px"
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var userDefinedControl_3 = new udc.com.comBtnSearch("combtnsearch1");
					if(typeof onCombtnsearch1Search == "function") {
						userDefinedControl_3.addEventListener("search", onCombtnsearch1Search);
					}
					container.addChild(userDefinedControl_3, {
						"colIndex": 1,
						"rowIndex": 0,
						"verticalAlign": "bottom"
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "1320px",
					"height": "37px"
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 0
			});
			
			var group_5 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_4 = new cpr.controls.layouts.FormLayout();
			formLayout_4.setColumns(["1fr", "550px"]);
			formLayout_4.setRows(["1fr"]);
			group_5.setLayout(formLayout_4);
			(function(container){
				var group_6 = new cpr.controls.Container("grp");
				var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("dmStaffInfo"));
				group_6.setBindContext(dataMapContext_1);
				// Layout
				var formLayout_5 = new cpr.controls.layouts.FormLayout();
				formLayout_5.setColumns(["1fr", "260px"]);
				formLayout_5.setRows(["25px", "1fr"]);
				group_6.setLayout(formLayout_5);
				(function(container){
					var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle("comtitle1");
					container.addChild(userDefinedControl_4, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 2,
						"rowSpan": 1
					});
					var group_7 = linker.group_7 = new cpr.controls.Container("grpHrmStaffInfo");
					group_7.fieldLabel = "사용자 기본정보";
					group_7.readOnly = true;
					group_7.style.setClasses(["form-box"]);
					var dataMapContext_2 = new cpr.bind.DataMapContext(app.lookup("dmStaffInfo"));
					group_7.setBindContext(dataMapContext_2);
					// Layout
					var formLayout_6 = new cpr.controls.layouts.FormLayout();
					formLayout_6.topMargin = "5px";
					formLayout_6.rightMargin = "5px";
					formLayout_6.bottomMargin = "5px";
					formLayout_6.leftMargin = "5px";
					formLayout_6.setColumns(["100px", "1fr", "1px", "100px", "1fr"]);
					formLayout_6.setRows(["25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "1fr"]);
					group_7.setLayout(formLayout_6);
					(function(container){
						var output_2 = new cpr.controls.Output();
						output_2.value = "사번";
						output_2.style.setClasses(["require"]);
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var output_3 = new cpr.controls.Output();
						output_3.value = "구성원ID";
						output_3.style.setClasses(["require"]);
						container.addChild(output_3, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_4 = new cpr.controls.Output();
						output_4.value = "주민번호";
						container.addChild(output_4, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var output_5 = new cpr.controls.Output();
						output_5.value = "부서";
						container.addChild(output_5, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var inputBox_1 = new cpr.controls.InputBox("ipb3");
						inputBox_1.fieldLabel = "학번";
						inputBox_1.bind("value").toDataColumn("STAFF_NO");
						container.addChild(inputBox_1, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var inputBox_2 = new cpr.controls.InputBox("ipb4");
						inputBox_2.fieldLabel = "성명";
						inputBox_2.bind("value").toDataColumn("STAFF_NM");
						container.addChild(inputBox_2, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var inputBox_3 = new cpr.controls.InputBox("ipb6");
						inputBox_3.fieldLabel = "주민번호";
						inputBox_3.userAttr({"columnType": "ssn"});
						inputBox_3.bind("value").toDataColumn("SSN");
						container.addChild(inputBox_3, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var inputBox_4 = new cpr.controls.InputBox("ipb7");
						inputBox_4.fieldLabel = "부서";
						inputBox_4.bind("value").toDataColumn("DEPT_NM");
						container.addChild(inputBox_4, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var output_6 = new cpr.controls.Output();
						output_6.value = "영문명";
						container.addChild(output_6, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var output_7 = new cpr.controls.Output();
						output_7.value = "성별";
						container.addChild(output_7, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var output_8 = new cpr.controls.Output();
						output_8.value = "재직상태";
						container.addChild(output_8, {
							"colIndex": 3,
							"rowIndex": 3
						});
						var output_9 = new cpr.controls.Output();
						output_9.value = "음력양력구분";
						container.addChild(output_9, {
							"colIndex": 3,
							"rowIndex": 4
						});
						var output_10 = new cpr.controls.Output();
						output_10.value = "성명";
						output_10.style.setClasses(["require"]);
						container.addChild(output_10, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_11 = new cpr.controls.Output();
						output_11.value = "국가";
						container.addChild(output_11, {
							"colIndex": 0,
							"rowIndex": 4
						});
						var output_12 = new cpr.controls.Output();
						output_12.value = "주소";
						container.addChild(output_12, {
							"colIndex": 0,
							"rowIndex": 6
						});
						var output_13 = new cpr.controls.Output();
						output_13.value = "휴대전화번호";
						container.addChild(output_13, {
							"colIndex": 0,
							"rowIndex": 5
						});
						var output_14 = new cpr.controls.Output();
						output_14.value = "이메일";
						container.addChild(output_14, {
							"colIndex": 3,
							"rowIndex": 5
						});
						var inputBox_5 = new cpr.controls.InputBox("ipb9");
						inputBox_5.fieldLabel = "주소1";
						inputBox_5.bind("value").toDataColumn("ADDR");
						container.addChild(inputBox_5, {
							"colIndex": 1,
							"rowIndex": 6,
							"colSpan": 4,
							"rowSpan": 1
						});
						var comboBox_1 = new cpr.controls.ComboBox("cmb1");
						comboBox_1.fieldLabel = "국가";
						comboBox_1.bind("value").toDataColumn("NAT_RCD");
						(function(comboBox_1){
							comboBox_1.setItemSet(app.lookup("dsNatRcd"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_1);
						container.addChild(comboBox_1, {
							"colIndex": 1,
							"rowIndex": 4
						});
						var comboBox_2 = new cpr.controls.ComboBox("cmb2");
						comboBox_2.fieldLabel = "주야구분";
						comboBox_2.bind("value").toDataColumn("LNR_SLR_DIV_RCD");
						(function(comboBox_2){
							comboBox_2.setItemSet(app.lookup("dsLnrSlrDivRcd"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_2);
						container.addChild(comboBox_2, {
							"colIndex": 4,
							"rowIndex": 4
						});
						var comboBox_3 = new cpr.controls.ComboBox("cmb3");
						comboBox_3.fieldLabel = "학생구분";
						comboBox_3.bind("value").toDataColumn("ONOFFI_STAT_RCD");
						(function(comboBox_3){
							comboBox_3.setItemSet(app.lookup("dsOnffiStatRcd"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_3);
						container.addChild(comboBox_3, {
							"colIndex": 4,
							"rowIndex": 3
						});
						var comboBox_4 = new cpr.controls.ComboBox("cmb5");
						comboBox_4.fieldLabel = "성별";
						comboBox_4.bind("value").toDataColumn("GENDER_RCD");
						(function(comboBox_4){
							comboBox_4.setItemSet(app.lookup("dsGenderRcd"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_4);
						container.addChild(comboBox_4, {
							"colIndex": 4,
							"rowIndex": 2
						});
						var inputBox_6 = new cpr.controls.InputBox("ipb8");
						inputBox_6.fieldLabel = "구성원ID";
						inputBox_6.bind("value").toDataColumn("PARTY_ID");
						container.addChild(inputBox_6, {
							"colIndex": 4,
							"rowIndex": 0
						});
						var inputBox_7 = new cpr.controls.InputBox("ipb10");
						inputBox_7.fieldLabel = "영문명";
						inputBox_7.bind("value").toDataColumn("STAFF_ENG_NM");
						container.addChild(inputBox_7, {
							"colIndex": 4,
							"rowIndex": 1
						});
						var inputBox_8 = new cpr.controls.InputBox("ipb14");
						inputBox_8.fieldLabel = "휴대전화";
						inputBox_8.userAttr({"columnType": "phone"});
						inputBox_8.bind("value").toDataColumn("CLP_NO");
						container.addChild(inputBox_8, {
							"colIndex": 1,
							"rowIndex": 5
						});
						var inputBox_9 = new cpr.controls.InputBox("ipb15");
						inputBox_9.fieldLabel = "이메일";
						inputBox_9.userAttr({"columnType": "email"});
						inputBox_9.bind("value").toDataColumn("EMAIL");
						container.addChild(inputBox_9, {
							"colIndex": 4,
							"rowIndex": 5
						});
					})(group_7);
					container.addChild(group_7, {
						"colIndex": 0,
						"rowIndex": 1,
						"colSpan": 1,
						"rowSpan": 1
					});
				})(group_6);
				container.addChild(group_6, {
					"colIndex": 0,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 1
				});
				var group_8 = new cpr.controls.Container("grp3");
				var dataMapContext_3 = new cpr.bind.DataMapContext(app.lookup("dmStaffInfo"));
				group_8.setBindContext(dataMapContext_3);
				// Layout
				var formLayout_7 = new cpr.controls.layouts.FormLayout();
				formLayout_7.setColumns(["1fr", "260px"]);
				formLayout_7.setRows(["25px", "1fr"]);
				group_8.setLayout(formLayout_7);
				(function(container){
					var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comButton("combutton2");
					if(typeof onCombutton2Save == "function") {
						userDefinedControl_5.addEventListener("save", onCombutton2Save);
					}
					if(typeof onCombutton2Delete == "function") {
						userDefinedControl_5.addEventListener("delete", onCombutton2Delete);
					}
					container.addChild(userDefinedControl_5, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comFormTitle("comformtitle1");
					container.addChild(userDefinedControl_6, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_8);
				container.addChild(group_8, {
					"colIndex": 1,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 1
				});
			})(group_5);
			container.addChild(group_5, {
				"colIndex": 0,
				"rowIndex": 1,
				"colSpan": 1,
				"rowSpan": 1
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "템플릿(그리드+폼)";
	cpr.core.Platform.INSTANCE.register(app);
})();
