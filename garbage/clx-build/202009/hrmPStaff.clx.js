/*
 * App URI: 202009/hrmPStaff
 * Source Location: 202009/hrmPStaff.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202009/hrmPStaff", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * cmnPParty.js
			 * Created at 2019. 1. 17.
			 *
			 * @author ksh
			 ************************************************/
			var util = createCommonUtil();
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				
				/*************** 공통코드 조회 START ***************/
				// 초기 파라메터 셋팅
				var param = [["dsGenderRcd", "CMN012", "", ""],["dsLnrSlrDivRcd", "CMN013", "", ""],["dsNatRcd", "CMN019", "", ""],["dsOnffiStatRcd", "APS001", "", ""]];
				// 공통코드 조회
				util.Submit.send(app, "subOnloadCode_tran", param, function(pbSuccess){
					if(pbSuccess){
						
						/*************** 사용자 구분 코드 조회 START ***************/
						// 조회 서브미션 호출
						var voParams = [{"mapper": "cmn-user01"
										 ,"qry": ["selectCmnUserDivCdList:dsPartyDiv"]
						                 ,"outds": "dsPartyDiv"}];
						                 
						util.Submit.send(app, "subListDiv_tran", voParams, function(pbSuccess){
							if(pbSuccess) {
					
								//초기 파라메터 셋팅
								var initValue = app.getHostProperty("initValue");
								var host = initValue.strHostDiv;
								if(host) {
									if("GUEST" == host) {
										app.lookup("cmbPartyDiv").insertItemAfter(new cpr.controls.Item("구성원-미지정", "NONE"), app.lookup("cmbPartyDiv").getItemByValue("GUEST"));
										app.lookup("cmbPartyDiv").setFilter("value == '' || value == 'GUEST' || value == 'NONE'");
										app.lookup("grdStaff").columnVisible(7, false);
										app.lookup("grdStaff").columnVisible(8, false);
									} else {
										app.lookup("grdStaff").columnVisible(5, false);
										app.lookup("grdStaff").columnVisible(6, false);
									}
								}
			
								// 필수값 : 구성원 아이디 검색 조건 input에 값 넣어줌.
								if(initValue.strPartyId) {
									if(/^[0-9]*$/.test(initValue.strPartyId)){
										app.lookup("ipbPartyId").value = initValue.strPartyId;
									}else{
										app.lookup("ipbNm").value = initValue.strPartyId;
									}
								} else {
									app.lookup("cmbPartyDiv").focus();
								}
							
								// 사용자 구분 값 입력했을 경우
								if(initValue.strPartyDiv) {
									util.SelectCtl.selectItem(app, "cmbPartyDiv", initValue.strPartyDiv);
								} else {
									util.SelectCtl.selectItem(app, "cmbPartyDiv", 0);
								}
								
								// 사용자명 입력했을 경우
								if(initValue.strNm) {
									app.lookup("ipbNm").value = initValue.strNm;
								}
					
								if(!ValueUtil.isNull(app.lookup("ipbPartyId").value)) {
									//app.lookup("btnSearch").click();
									util.ComUdcBtn.dispatchEvent(app, "btnSearch", "click");
								}
							}
						});
						/*************** 사용자 구분 코드 조회 END ***************/
					}
				});
				/*************** 공통코드 조회 END ***************/
			}
			
			
			function doList(psStatus){
				var voParams = [{"mapper": "hrm-01"
								 ,"qry": ["selHrmMstList:dsStaff"]
				                 ,"outds": "dsStaff"
				                 ,"param": "dmParam"}];
				                 
				// 미지정 선택 시
				if(app.lookup("cmbPartyDiv").isSelectedByValue("NONE") || app.lookup("cmbPartyDiv").isSelectedByValue("")) {
					voParams = [{"mapper": "hrm-01"
								 ,"qry": ["selHrmMstList:dsStaff"]
				                 ,"outds": "dsStaff"
				                 ,"param": "dmParam"}];
				}
				        
				//조회 서브미션 호출      
				util.Submit.send(app, "subListStaff_tran", voParams, function(pbSuccess){
					if(pbSuccess) {
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005", null, true);
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}
					}
				});
			}
			
			/*
			 * 그리드에서 row-dblclick 이벤트 발생 시 호출.
			 * detail이 row를 더블클릭 한 경우 발생하는 이벤트.
			 */
			function onGrdCodeRowDblclick(/* cpr.events.CGridEvent */ e){
				doCloseOk();
			}
			
			/**
			 * 데이터를 부모창에 내려준다.(선택닫기 이벤트시 호출)
			 */
			function doCloseOk(){
				//선택 데이터 유무 체크
				var vaSelectedRowIdxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdStaff");
				if(vaSelectedRowIdxs.length < 1){
					//선택된 데이터가 없습니다.
					util.Msg.alert("INF-M008");
					return false;
				}
				
				//선택데이터 returnValue로 반환
				var voResult = app.lookup("grdStaff").getRow(vaSelectedRowIdxs[0]).getRowData();
				app.close(voResult);
			}
			
			/*
			 * "선택닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSelectClick(/* cpr.events.CMouseEvent */ e){
				doCloseOk();
			}
			
			/*
			 * "화면닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCloseClick(/* cpr.events.CMouseEvent */ e){
				app.close();
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				//Enter키 입력시. 데이터 조회
				if(e.keyCode == cpr.events.KeyCode.ENTER){
					//util.Header.dispatchEvent(app, "btnSearch", "click");
					onCombtnsearch1Search();
				}
			}
			
			
			
			
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회버튼 클릭시 이벤트
			 */
			function onCombtnsearch1Search(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.comBtnSearch
				 */
				var combtnsearch1 = e.control;
				if(!util.validate(app, "grpSearch")) return false;
				doList();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsPartyDiv");
			dataSet_1.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsGenderRcd");
			dataSet_2.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsLnrSlrDivRcd");
			dataSet_3.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsNatRcd");
			dataSet_4.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsOnffiStatRcd");
			dataSet_5.parseData({
				"columns" : [
					{"name": "CD"},
					{"name": "CD_NM"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsStaff");
			dataSet_6.parseData({
				"columns" : [
					{"name": "PARTY_ID"},
					{"name": "STAFF_NM"},
					{"name": "STAFF_NO"},
					{"name": "SSN"},
					{
						"name": "STAFF_ENG_NM",
						"info": ""
					},
					{"name": "BIRTHDAY"},
					{"name": "LNR_SLR_DIV_RCD"},
					{"name": "GENDER_RCD"},
					{"name": "NAT_RCD"},
					{"name": "ONOFFI_STAT_RCD"},
					{"name": "WKGRD_RCD"},
					{"name": "DEPT_CD"},
					{"name": "DEPT_NM"},
					{"name": "CIR_ST_DT"},
					{"name": "ENTCO_DT"},
					{"name": "RETI_DT"},
					{"name": "FINAL_SCL"},
					{"name": "ACCR_DIV_RCD"},
					{"name": "EMAIL"},
					{"name": "ADDR"},
					{"name": "CLP_NO"}
				]
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "strUserDivCd"},
					{"name": "strStaffNo"},
					{"name": "strStaffNm"}
				]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1320px)", "smuis");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["97px", "1fr"]);
			formLayout_1.setRowAutoSizing(0, true);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.scrollable = false;
			verticalLayout_1.spacing = 0;
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var userDefinedControl_1 = new udc.com.appHeader();
				if(typeof onBtnSearchClick == "function") {
					userDefinedControl_1.addEventListener("search", onBtnSearchClick);
				}
				if(typeof onBtnNewClick == "function") {
					userDefinedControl_1.addEventListener("insert", onBtnNewClick);
				}
				container.addChild(userDefinedControl_1, {
					"autoSize": "none",
					"width": "790px",
					"height": "30px"
				});
				var group_2 = new cpr.controls.Container("grpSearch");
				group_2.style.setClasses(["search-box"]);
				// Layout
				var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
				group_2.setLayout(flowLayout_1);
				(function(container){
					var group_3 = new cpr.controls.Container("grp5");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.setColumns(["100px", "1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_3.setLayout(formLayout_2);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "사원구분";
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var comboBox_1 = new cpr.controls.ComboBox("cmbPartyDiv");
						comboBox_1.fieldLabel = "구성원구분";
						comboBox_1.userAttr({"xorRequired": ""});
						comboBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strUserDivCd");
						(function(comboBox_1){
							comboBox_1.addItem(new cpr.controls.Item("전체", ""));
							comboBox_1.setItemSet(app.lookup("dsPartyDiv"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_1);
						container.addChild(comboBox_1, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_3);
					container.addChild(group_3, {
						"width": "300px",
						"height": "25px"
					});
					var group_4 = new cpr.controls.Container("grp6");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.setColumns(["100px", "1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var output_2 = new cpr.controls.Output();
						output_2.value = "구성원ID";
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_1 = new cpr.controls.InputBox("ipbPartyId");
						inputBox_1.fieldLabel = "구성원ID";
						inputBox_1.userAttr({"autoKeydownSearch": "Y"});
						inputBox_1.bind("value").toDataMap(app.lookup("dmParam"), "strStaffNo");
						container.addChild(inputBox_1, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"width": "300px",
						"height": "25px"
					});
					var group_5 = new cpr.controls.Container("grp7");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.setColumns(["100px", "1fr"]);
					formLayout_4.setRows(["1fr"]);
					group_5.setLayout(formLayout_4);
					(function(container){
						var output_3 = new cpr.controls.Output();
						output_3.value = "성명";
						container.addChild(output_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_2 = new cpr.controls.InputBox("ipbNm");
						inputBox_2.fieldLabel = "성명";
						inputBox_2.value = "";
						inputBox_2.userAttr({"autoKeydownSearch": "Y"});
						inputBox_2.bind("value").toDataMap(app.lookup("dmParam"), "strStaffNm");
						container.addChild(inputBox_2, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_5);
					container.addChild(group_5, {
						"width": "300px",
						"height": "25px"
					});
					var userDefinedControl_2 = new udc.com.comBtnSearch("combtnsearch1");
					if(typeof onCombtnsearch1Search == "function") {
						userDefinedControl_2.addEventListener("search", onCombtnsearch1Search);
					}
					container.addChild(userDefinedControl_2, {
						"width": "60px",
						"height": "25px"
					});
				})(group_2);
				if(typeof onGrpSearchKeydown == "function") {
					group_2.addEventListener("keydown", onGrpSearchKeydown);
				}
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "790px",
					"height": "62px"
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 0
			});
			
			var group_6 = new cpr.controls.Container("grp2");
			// Layout
			var formLayout_5 = new cpr.controls.layouts.FormLayout();
			formLayout_5.topMargin = "0px";
			formLayout_5.rightMargin = "0px";
			formLayout_5.bottomMargin = "0px";
			formLayout_5.leftMargin = "0px";
			formLayout_5.setColumns(["1fr"]);
			formLayout_5.setRows(["1fr", "30px"]);
			group_6.setLayout(formLayout_5);
			(function(container){
				var group_7 = new cpr.controls.Container("grp3");
				// Layout
				var formLayout_6 = new cpr.controls.layouts.FormLayout();
				formLayout_6.topMargin = "5px";
				formLayout_6.rightMargin = "0px";
				formLayout_6.bottomMargin = "5px";
				formLayout_6.leftMargin = "0px";
				formLayout_6.setColumns(["70px", "1fr", "70px", "5px"]);
				formLayout_6.setRows(["1fr"]);
				group_7.setLayout(formLayout_6);
				(function(container){
					var button_1 = new cpr.controls.Button("btnClose");
					button_1.visible = false;
					button_1.value = "화면닫기";
					button_1.style.setClasses(["btn-pop-close"]);
					if(typeof onBtnCloseClick == "function") {
						button_1.addEventListener("click", onBtnCloseClick);
					}
					container.addChild(button_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var button_2 = new cpr.controls.Button("btnSelect");
					button_2.value = "선택닫기";
					button_2.style.setClasses(["btn-pop-close"]);
					if(typeof onBtnSelectClick == "function") {
						button_2.addEventListener("click", onBtnSelectClick);
					}
					container.addChild(button_2, {
						"colIndex": 2,
						"rowIndex": 0
					});
				})(group_7);
				container.addChild(group_7, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var group_8 = new cpr.controls.Container("grpData");
				// Layout
				var formLayout_7 = new cpr.controls.layouts.FormLayout();
				formLayout_7.setColumns(["1fr"]);
				formLayout_7.setRows(["20px", "1fr"]);
				group_8.setLayout(formLayout_7);
				(function(container){
					var grid_1 = new cpr.controls.Grid("grdStaff");
					grid_1.fieldLabel = "구성원목록";
					grid_1.readOnly = true;
					grid_1.init({
						"dataSet": app.lookup("dsStaff"),
						"columnMovable": true,
						"resizableColumns": "all",
						"columns": [
							{"width": "50px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "DEPT_NM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "부서명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "WKGRD_RCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "직급";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "ONOFFI_STAT_RCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "재직상태";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "STAFF_NM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "사원명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "STAFF_NO";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "사원번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.targetColumnName = "BIRTHDAY";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "생년월일";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "DEPT_NM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "WKGRD_RCD";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "ONOFFI_STAT_RCD";
										cell.control = (function(){
											var comboBox_2 = new cpr.controls.ComboBox("cmb1");
											(function(comboBox_2){
												comboBox_2.setItemSet(app.lookup("dsOnffiStatRcd"), {
													"label": "CD_NM",
													"value": "CD"
												});
											})(comboBox_2);
											comboBox_2.bind("value").toDataColumn("ONOFFI_STAT_RCD");
											return comboBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "STAFF_NM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "STAFF_NO";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "BIRTHDAY";
									}
								}
							]
						}
					});
					if(typeof onGrdCodeRowDblclick == "function") {
						grid_1.addEventListener("row-dblclick", onGrdCodeRowDblclick);
					}
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var group_9 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_8 = new cpr.controls.layouts.FormLayout();
					formLayout_8.setColumns(["1fr"]);
					formLayout_8.setRows(["20px"]);
					group_9.setLayout(formLayout_8);
					(function(container){
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						container.addChild(userDefinedControl_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_9);
					container.addChild(group_9, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_8);
				container.addChild(group_8, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_6);
			container.addChild(group_6, {
				"colIndex": 0,
				"rowIndex": 1
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "사원검색팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
