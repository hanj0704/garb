/*
 * App URI: 202009/kepcoTest
 * Source Location: 202009/kepcoTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202009/kepcoTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns" : [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{"name": "column6"},
					{"name": "column7"},
					{"name": "column8"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{
						"name": "column1",
						"dataType": "number"
					},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "1", "column2": "column21", "column3": "column21"},
					{"column1": "2", "column2": "column22", "column3": "column22"},
					{"column1": "3", "column2": "column23", "column3": "column23"},
					{"column1": "4", "column2": "column24", "column3": "column24"},
					{"column1": "5", "column2": "column25", "column3": "column25"},
					{"column1": "6", "column2": "column26", "column3": "column36"},
					{"column1": "7", "column2": "column27", "column3": "column37"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds3");
			dataSet_3.parseData({
				"columns": [
					{"name": "child1"},
					{"name": "child2"},
					{"name": "child3"},
					{"name": "child4"},
					{"name": "child5"},
					{"name": "child6"},
					{"name": "child7"}
				],
				"rows": [
					{"child1": "child11", "child2": "child21", "child3": "child31", "child4": "child41", "child5": "child51", "child6": "child61", "child7": "child71"},
					{"child1": "child12", "child2": "child22", "child3": "child32", "child4": "child42", "child5": "child52", "child6": "child62", "child7": "child72"},
					{"child1": "child13", "child2": "child23", "child3": "child33", "child4": "child43", "child5": "child53", "child6": "child63", "child7": "child73"},
					{"child1": "child14", "child2": "child24", "child3": "child34", "child4": "child44", "child5": "child54", "child6": "child64", "child7": "child74"},
					{"child1": "child15", "child2": "child25", "child3": "child35", "child4": "child45", "child5": "child55", "child6": "child65", "child7": "child75"}
				]
			});
			app.register(dataSet_3);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "http://localhost:8080/cisweb/getList.do";
			submission_1.mediaType = "application/json";
			app.register(submission_1);
			
			var matrixSubmission_1 = new cpr.protocols.MatrixSubmission("msm1");
			matrixSubmission_1.async = true;
			matrixSubmission_1.withCredentials = false;
			matrixSubmission_1.method = "post";
			matrixSubmission_1.action = "/cisweb/getMatList.do";
			matrixSubmission_1.setProtocolDataModel(new cpr.protocols.matrix.MatrixDataModel({
				"request": {
					"format": "object",
					"data": {
						"data" : {
							"format": "object",
							"data": {
								"ds3" : {
									"format": "array",
									"dataControl": dataSet_3,
									"payload": "all",
									"data": {
										"child1": {"format": "simple", "path": "@child1"},
										"child2": {"format": "simple", "path": "@child2"},
										"child3": {"format": "simple", "path": "@child3"},
										"child4": {"format": "simple", "path": "@child4"},
										"child5": {"format": "simple", "path": "@child5"},
										"child6": {"format": "simple", "path": "@child6"},
										"child7": {"format": "simple", "path": "@child7"}
									}
								}
							}
						}
					}
				},
				"response": {
					"format": "object",
					"data": {}
				}
			}));
			if(typeof onMsm1BeforeSubmit == "function") {
				matrixSubmission_1.addEventListener("before-submit", onMsm1BeforeSubmit);
			}
			app.register(matrixSubmission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.HansTest();
			container.addChild(userDefinedControl_1, {
				"top": "56px",
				"left": "360px",
				"width": "250px",
				"height": "30px"
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "Button";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var tree_1 = new cpr.controls.Tree("tre1");
			(function(tree_1){
			})(tree_1);
			container.addChild(tree_1, {
				"top": "96px",
				"left": "188px",
				"width": "342px",
				"height": "258px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "";
			output_1.style.css({
				"background-repeat" : "no-repeat",
				"background-image" : "url('theme/hanhwa/images/accordion_disabled_up.png')",
				"background-position" : "center"
			});
			container.addChild(output_1, {
				"top": "392px",
				"left": "147px",
				"width": "31px",
				"height": "41px"
			});
		}
	});
	app.title = "kepcoTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
