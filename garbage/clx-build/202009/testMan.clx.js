/*
 * App URI: 202009/testMan
 * Source Location: 202009/testMan.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202009/testMan", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * testMan.js
			 * Created at 2020. 10. 15. 오전 10:08:09.
			 *
			 * @author HANS
			 ************************************************/
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				console.log(button.getActualRect());
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
			
			//	var vcTreGnbNavItem = app.lookup("tre1");
			//	
			//		vcTreGnbNavItem.style.setClasses(["gnb-nav-item"]);
			//		vcTreGnbNavItem.style.item.bindClass().toExpression("\"cl-item-level-\" + (depth + 1)");
			//		
			//	app.floatControl(app.lookup("grpGnb"),{
			//		top : app.lookup("btn1").getActualRect().bottom + "px",
			//		left : "0px",
			//		right : "0px",
			//		bottom : "0px"
			//	});
			}
			function floatMegaMenu() {
				var vcGrpCnt = app.getContainer();
				var vcGrpHd = app.lookup("btn1");
				var vcGrpGnb = app.lookup("grpGnb");
				var vcGrpGnbWrap = app.lookup("grpGnbWrap");
				var vcGrpGnbNavWrap = app.lookup("grpGnbNavWrap");
				
				createSubMenuItems();
				
				app.floatControl(vcGrpGnb, {
					top : vcGrpHd.getActualRect().bottom + "px",
					left : "0px",
					right : "0px",
					height : "600px"
				});
				
				vcGrpGnb.redraw();
			}
			function createSubMenuItems() {
				var vcGrpGnbNavWrap = app.lookup("grpGnbNavWrap");
				
			//	vcGrpGnbNavWrap.removeAllChildren(true);
				
				var vcDsMn = app.lookup("ds2");
				
				for(var idx = 0; idx < 4; idx++){
					
					var vcTreGnbNavItem = new cpr.controls.Tree();
					
					vcTreGnbNavItem.setItemSet(vcDsMn, {
						label : "label",
						value : "value",
						parentValue : "parent"
					});
					
			
					vcTreGnbNavItem.indent = 0;
					vcTreGnbNavItem.expandAllItems();
					
					vcTreGnbNavItem.style.setClasses(["gnb-nav-item"]);
					vcTreGnbNavItem.style.item.bindClass().toExpression("\"cl-item-level-\" + (depth + 1)");
					
					
					vcGrpGnbNavWrap.addChild(vcTreGnbNavItem, {
						width : 150 + "px",
						height : "100%"
					});
				}
				
				var tres = new cpr.controls.Tree();
				tres.setItemSet(app.lookup("ds3"), {
						label : "label",
						value : "value",
						parentValue : "parent"
				});
				tres.expandAllItems();
					
					tres.style.setClasses(["gnb-nav-item"]);
					tres.style.item.bindClass().toExpression("\"cl-item-level-\" + (depth + 1)");
					vcGrpGnbNavWrap.addChild(tres, {
						width : 150 + "px",
						height : "99%"
					});
			}
			/*
			 * "Button" 버튼(btn1)에서 mouseenter 이벤트 발생 시 호출.
			 * 마우스 포인터가 컨트롤 위에 진입할 때 발생하는 이벤트.
			 */
			function onBtn1Mouseenter(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				floatMegaMenu();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "column1",
						"dataType": "number"
					},
					{
						"name": "column2",
						"dataType": "number"
					},
					{
						"name": "column3",
						"dataType": "number"
					},
					{
						"name": "column4",
						"dataType": "number"
					},
					{
						"name": "column5",
						"dataType": "number"
					},
					{
						"name": "column6",
						"dataType": "number"
					}
				],
				"rows": [
					{"column1": "1", "column2": "1", "column3": "1", "column4": "1", "column5": "1", "column6": "1"},
					{"column1": "2", "column2": "2", "column3": "2", "column4": "2", "column5": "2", "column6": "2"},
					{"column1": "3", "column2": "3", "column3": "3", "column4": "3", "column5": "3", "column6": "3"},
					{"column1": "4", "column2": "4", "column3": "4", "column4": "4", "column5": "4", "column6": "4"},
					{"column1": "5", "column2": "5", "column3": "5", "column4": "5", "column5": "5", "column6": "5"},
					{"column1": "6", "column2": "6", "column3": "6", "column4": "6", "column5": "6", "column6": "6"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{
						"name": "value",
						"dataType": "string"
					},
					{"name": "parent"}
				],
				"rows": [
					{"label": "label1", "value": "value1", "parent": ""},
					{"label": "label2", "value": "value2", "parent": ""},
					{"label": "label3", "value": "value3", "parent": ""},
					{"label": "label4", "value": "value4", "parent": ""},
					{"label": "label5", "value": "value5", "parent": ""},
					{"label": "label6", "value": "value6", "parent": ""}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds3");
			dataSet_3.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "label1", "value": "value1", "parent": ""},
					{"label": "label2", "value": "value2", "parent": ""},
					{"label": "label3", "value": "value3", "parent": ""},
					{"label": "label4", "value": "value4", "parent": ""},
					{"label": "label5", "value": "value5", "parent": ""},
					{"label": "label6", "value": "value6", "parent": ""},
					{"label": "label7", "value": "value7", "parent": ""},
					{"label": "label8", "value": "value8", "parent": ""},
					{"label": "label9", "value": "value9", "parent": ""},
					{"label": "label10", "value": "value10", "parent": ""},
					{"label": "label11", "value": "value11", "parent": ""},
					{"label": "label12", "value": "value12", "parent": ""},
					{"label": "label13", "value": "value13", "parent": ""}
				]
			});
			app.register(dataSet_3);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Mouseenter == "function") {
				button_1.addEventListener("mouseenter", onBtn1Mouseenter);
			}
			container.addChild(button_1, {
				"width": "80px",
				"height": "69px"
			});
			
			var group_1 = new cpr.controls.Container("grpGnb");
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_2.spacing = 0;
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("grpGnbWrap");
				group_2.style.setClasses(["gnb-wrap"]);
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "0px";
				formLayout_1.bottomMargin = "0px";
				formLayout_1.leftMargin = "247px";
				formLayout_1.horizontalSpacing = "0px";
				formLayout_1.verticalSpacing = "0px";
				formLayout_1.setColumns(["100px"]);
				formLayout_1.setColumnAutoSizing(0, true);
				formLayout_1.setRows(["400px"]);
				formLayout_1.setRowAutoSizing(0, true);
				group_2.setLayout(formLayout_1);
				(function(container){
					var group_3 = new cpr.controls.Container("grpGnbNavWrap");
					// Layout
					var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
					flowLayout_1.scrollable = false;
					flowLayout_1.horizontalSpacing = 0;
					flowLayout_1.verticalSpacing = 0;
					flowLayout_1.lineWrap = false;
					group_3.setLayout(flowLayout_1);
					(function(container){
						var tree_1 = new cpr.controls.Tree("tre1");
						(function(tree_1){
							tree_1.setItemSet(app.lookup("ds2"), {
								"label": "label",
								"value": "value",
								"parentValue": "parent"
							});
						})(tree_1);
						container.addChild(tree_1, {
							"width": "190px",
							"height": "100%"
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "400px",
					"height": "400px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "none",
				"width": "1024px",
				"height": "400px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "testMan";
	cpr.core.Platform.INSTANCE.register(app);
})();
