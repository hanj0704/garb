/*
 * App URI: 202104/treeTest
 * Source Location: 202104/treeTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202104/treeTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * treeTest.js
			 * Created at 2021. 4. 29. 오후 3:48:34.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
			//	app.lookup("tre1").delete
			//	app.lookup("tre1").addIte
			//	app.lookup("tre1").deleteItem(1);
			app.lookup("tre1").insertItemAfter(new cpr.controls.TreeItem("aa", "bb", ""), app.lookup("tre1").getItem(0));
			//	app.lookup("tre1").addItem(new cpr.controls.TreeItem("aa", "bb", ""));
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				var a = app.lookup("ds1").getRowDataRanged();
				console.log(a);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "label1", "value": "1", "parent": ""},
					{"label": "label2", "value": "2", "parent": ""},
					{"label": "label3", "value": "3", "parent": ""},
					{"label": "label4", "value": "4", "parent": ""},
					{"label": "label5", "value": "56", "parent": ""}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var tree_1 = new cpr.controls.Tree("tre1");
			tree_1.draggableItem = true;
			tree_1.allowDrop = true;
			(function(tree_1){
				tree_1.setItemSet(app.lookup("ds1"), {
					"label": "label",
					"value": "value",
					"parentValue": "parent"
				});
			})(tree_1);
			container.addChild(tree_1, {
				"top": "69px",
				"left": "20px",
				"width": "270px",
				"height": "249px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "147px",
				"height": "39px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "label";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "label";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "value";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "value";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "parent";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "parent";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "label";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "value";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "parent";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "69px",
				"left": "300px",
				"width": "436px",
				"height": "249px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "20px",
				"left": "188px",
				"width": "147px",
				"height": "39px"
			});
		}
	});
	app.title = "treeTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
