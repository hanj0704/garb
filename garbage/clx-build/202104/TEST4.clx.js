/*
 * App URI: 202104/TEST4
 * Source Location: 202104/TEST4.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202104/TEST4", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * TEST4.js
			 * Created at 2021. 4. 29. 오후 5:15:03.
			 *
			 * @author ryu54
			 ************************************************/
			
			/**
			 * 
			 * @param {cpr.controls.Container} container
			 */
			function executeFloatingHeader(container) {
				var voAppIns = container.getAppInstance();
				
				container.userAttr("floating-header-configure", "true");
				
				var voRtAppIns = voAppIns.getRootAppInstance();
				
				cpr.core.DeferredUpdateManager.INSTANCE.asyncExec(function(){
					var voActlRct = container.getActualRect();
					
					var vcPlaceholder = new cpr.controls.Output();
					
					voAppIns.getContainer().addChild(vcPlaceholder, {
						height : "200px"
					});
					
					voRtAppIns.floatControl(container, {
						left : "0px",
						right : "0px",
						height : "200px",
						top : "0px"
					});
				});
			}
			
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				executeFloatingHeader(app.lookup("grp"));
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp");
			group_1.style.css({
				"background-color" : "red"
			});
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "플로팅될 영역";
				output_1.style.css({
					"color" : "white"
				});
				container.addChild(output_1, {
					"autoSize": "none",
					"width": "100px",
					"height": "100%"
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "400px",
				"height": "200px"
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "Button";
			container.addChild(button_1, {
				"width": "100px",
				"height": "200px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "Button";
			container.addChild(button_2, {
				"width": "100px",
				"height": "200px"
			});
			
			var button_3 = new cpr.controls.Button();
			button_3.value = "Button";
			container.addChild(button_3, {
				"width": "100px",
				"height": "200px"
			});
			
			var button_4 = new cpr.controls.Button();
			button_4.value = "Button";
			container.addChild(button_4, {
				"width": "100px",
				"height": "200px"
			});
			
			var button_5 = new cpr.controls.Button();
			button_5.value = "Button";
			container.addChild(button_5, {
				"autoSize": "none",
				"width": "1024px",
				"height": "200px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "TEST4";
	cpr.core.Platform.INSTANCE.register(app);
})();
