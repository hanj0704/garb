/*
 * App URI: 201912/user
 * Source Location: 201912/user.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("201912/user", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			///************************************************
			// * user.js
			// * Created at 2019. 11. 11. 오전 11:01:37.
			// *
			// * @author Jay
			// ************************************************/
			//
			//// 공통 모듈 선언
			//var util = createCommonUtil();
			//
			////날짜 체크에서 실패 시 이전값으로 돌리기위해 바꾸기 전 저장해 놓는 변수
			//var msStDt = "";
			//var msDueDt = "";
			//
			///**
			// * 시작일자, 종료일자 입력 시 비교체크로직을 수행한다.
			// * @param {String} psEventDivNm
			// */
			//function validateDate(psEventDivNm) {
			//	var vsStDt = app.lookup("dtStDt").value;
			//	var vsEndDt = app.lookup("dtEndDt").value;
			//
			//	if (psEventDivNm == "ST_DT") { //시작일자인 경우
			//		if (ValueUtil.fixNull(vsEndDt) != "" && !(vsStDt <= vsEndDt)) {
			//			alert("시작일자를 종료일자 이전으로 선택하여 주십시오.");
			//			app.lookup("dtStDt").value = msStDt;
			//		} else {
			//			msStDt = vsStDt;
			//		}
			//	} else if (psEventDivNm == "END_DT") { // 종료일자인 경우
			//		if (ValueUtil.fixNull(vsStDt) != "" && !(vsEndDt >= vsStDt)) {
			//			alert("종료일자가 시작일자보다 작을 수 없습니다.");
			//			app.lookup("dtEndDt").value = msDueDt;
			//		} else {
			//			msDueDt = vsEndDt;
			//		}
			//	}
			//}
			//
			///*
			// * Body에서 load 이벤트 발생 시 호출.
			// * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			// */
			//function onBodyLoad( /* cpr.events.CEvent */ e) {
			//	app.lookup("pgIdx").currentPageIndex = 1;
			//	doList();
			//}
			//
			//
			///**
			// * 리스트 조회
			// * @param {String} psStatus
			// */
			//function doList(psStatus) {
			//	/* 페이징 처리 */
			//	var pgIdx = app.lookup("pgIdx");
			//	pgIdx.currentPageIndex = parseInt(util.DataMap.getValue(app, "dmParam", "pageNo"));
			//	
			//	util.Submit.send(app, "subList", function(psSuccess){
			//		if(psSuccess) {
			//			
			//			var vsSuccess = util.DataMap.getValue(app, "dmResult", "success");
			//			var vsMessage = util.DataMap.getValue(app, "dmResult", "message");
			//			
			//			if (vsSuccess === "Y") {
			//				app.lookup("grpContent").redraw();
			//				
			//				// 메세지 분기처리
			//				if (psStatus === "save") {
			//					//갱신된 데이터가 조회되었습니다.
			//					util.Msg.notify(app, "INF-M005");
			//				} else {
			//					//조회되었습니다.
			//					util.Msg.notify(app, "INF-M001");
			//				}
			//				
			//				// 페이징 처리
			//				var vnTotal = util.DataSet.getValue(app, "dsUserList", 0, "totRowCnt");
			//				var vnPageRow = util.DataMap.getValue(app, "dmParam", "pageRow");
			//				
			//			    pgIdx.totalRowCount = parseInt(vnTotal);
			//				pgIdx.pageRowCount = parseInt(vnPageRow);
			//				
			//			}
			//			
			//		};
			//	});
			//}
			//
			///*
			// * "조회" 버튼에서 click 이벤트 발생 시 호출.
			// * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			// */
			//function onButtonClick( /* cpr.events.CMouseEvent */ e) {
			//	/** 
			//	 * @type cpr.controls.Button
			//	 */
			//	var button = e.control;
			//	
			//	// 검색버튼으로 조회시 페이지 1로 세팅
			//	util.DataMap.setValue(app, "dmParam", "pageNo", 1);
			//	
			//	doList();
			//}
			//
			//
			//
			///*
			// * 페이지 인덱서에서 selection-change 이벤트 발생 시 호출.
			// * Page index를 선택하여 선택된 페이지가 변경된 후에 발생하는 이벤트.
			// */
			//function onPgIdxSelectionChange( /* cpr.events.CSelectionEvent */ e) {
			//	/** 
			//	 * @type cpr.controls.PageIndexer
			//	 */
			//	var pgIdx = e.control;
			//	var vnNewSelection = e.newSelection;
			//	
			//	util.DataMap.setValue(app, "dmParam", "pageNo", vnNewSelection);
			//	
			//	doList(); // 조회
			//};
			//
			//
			///*
			// * "생성" 버튼(btnInsert)에서 click 이벤트 발생 시 호출.
			// * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			// */
			//function onBtnInsertClick(/* cpr.events.CMouseEvent */ e){
			//	/** 
			//	 * @type cpr.controls.Button
			//	 */
			//	var btnInsert = e.control;
			//	var initValue = {"openDiv": "I"};
			//	
			//	var vsPopId, vsWidth, vsHeight;
			//	vsPopId = "app/admin/user_pop";
			//	vsWidth = 800;
			//	vsHeight = 350;
			//	
			//	util.Dialog.open(app, vsPopId, vsWidth, vsHeight, function(e){
			//		var dialog = e.control;
			//		var returnValue = dialog.returnValue;
			//		if(returnValue != null && returnValue.closeDiv == "ok") {
			//			doList("save");
			//		}
			//	}, initValue);
			//}
			//
			//
			///*
			// * 그리드에서 dblclick 이벤트 발생 시 호출.
			// * 사용자가 컨트롤을 더블 클릭할 때 발생하는 이벤트.
			// */
			//function onGrdUserMgmtDblclick(/* cpr.events.CMouseEvent */ e){
			//	/** 
			//	 * @type cpr.controls.Grid
			//	 */
			//	var grdUserMgmt = e.control;
			//	var vnSelIndex = grdUserMgmt.getSelectedRowIndex();
			//	var vsUserId = util.DataSet.getValue(app, "dsUserList", vnSelIndex, "userId");
			//	
			//	var vsPopId, vsWidth, vsHeight;
			//	vsPopId = "app/admin/user_pop";
			//	vsWidth = 800;
			//	vsHeight = 350;
			//	
			//	var initValue = {"openDiv": "A", "userId" : vsUserId};
			//	
			//	util.Dialog.open(app, vsPopId, vsWidth, vsHeight, function(e){
			//		var dialog = e.control;
			//		var returnValue = dialog.returnValue;
			//		if(returnValue != null && returnValue.closeDiv == "ok") {
			//			doList("save");
			//		}
			//	}, initValue);
			//}
			//
			//
			//
			///*
			// * "삭제" 버튼(btnDelete)에서 click 이벤트 발생 시 호출.
			// * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			// */
			//function onBtnDeleteClick(/* cpr.events.CMouseEvent */ e){
			//	/** 
			//	 * @type cpr.controls.Button
			//	 */
			//	var btnDelete = e.control;
			//	
			//	var vaSelIdxs  = util.Grid.getCheckOrSelectedRowIndex(app, "grdUserMgmt");
			//	
			//	if (vaSelIdxs.length == 0) {
			//		util.Msg.alert("삭제할 행을 선택해주십시오");
			//		return false;
			//	}
			//	
			//	//삭제 하시겠습니까?
			//	if(util.Msg.confirm("CRM-M002")){
			//		vaSelIdxs.forEach(function(each){
			//			util.Grid.setRowState(app, "grdUserMgmt", cpr.data.tabledata.RowState.DELETED, each);
			//		});
			//		
			//		doDelete();
			//	};
			//}
			//
			///**
			// * 선택된 행 삭제
			// */
			//function doDelete() {
			//	util.Submit.send(app, "subDelete", function(psSuccess){
			//		if(psSuccess) {
			//			
			//			var vsSuccess = util.DataMap.getValue(app, "dmResult", "success");
			//			var vsMessage = util.DataMap.getValue(app, "dmResult", "message");
			//			
			//			util.Msg.alert(vsMessage);
			//			
			//			if (vsSuccess === "Y") {
			//				doList("save");
			//			}
			//			
			//		};
			//	});
			//}
			// End - User Script
			
			// Header
			app.declareAppProperty("navi", null);
			app.declareAppProperty("gridDataSize", null);
			app.declareAppProperty("pageRowCount", 20);
			var dataSet_1 = new cpr.data.DataSet("dsUserList");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "userId",
						"info": "사용자_ID"
					},
					{
						"name": "userNm",
						"info": "사용자_명"
					},
					{
						"name": "userTypeCd",
						"info": "사용자_유형"
					},
					{
						"name": "passwd",
						"info": "비밀번호"
					},
					{
						"name": "deptId",
						"info": "부서_ID"
					},
					{
						"name": "positionNm",
						"info": "직위_이름"
					},
					{
						"name": "titleNm",
						"info": "직책_이름"
					},
					{
						"name": "email",
						"info": "이메일"
					},
					{
						"name": "officePhone",
						"info": "사무실전화"
					},
					{
						"name": "mobilePhone",
						"info": "휴대전화"
					},
					{
						"name": "lockYn",
						"info": "잠김여부"
					},
					{
						"name": "lockCd",
						"info": "잠김사유"
					},
					{
						"name": "initPage",
						"info": "초기_페이지"
					},
					{
						"name": "loginFailCnt",
						"info": "비밀번호_실패_카운트"
					},
					{
						"name": "companyCd",
						"info": "소속_회사_코드"
					},
					{
						"name": "notiFlag",
						"info": "통보종류"
					},
					{
						"name": "lastLoginDt",
						"info": "마지막로그인시각"
					},
					{
						"name": "pwUpdateDt",
						"info": "비밀번호_변경일"
					},
					{
						"name": "companyNm",
						"dataType": "string",
						"info": "소속회사 명"
					},
					{
						"name": "deptNm",
						"dataType": "string",
						"info": "부서명"
					},
					{"name": "totRowCnt"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "searchType"},
					{"name": "searchText"},
					{
						"name": "pageNo",
						"defaultValue": "1"
					},
					{
						"name": "pageRow",
						"defaultValue": "10"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("pageInfo");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "totRowCnt",
						"dataType": "number",
						"defaultValue": "0"
					},
					{
						"name": "pageIndexerCount",
						"dataType": "number",
						"defaultValue": "10"
					},
					{
						"name": "pageRow",
						"dataType": "number",
						"defaultValue": "10"
					},
					{
						"name": "pageNo",
						"dataType": "number",
						"defaultValue": "1"
					},
					{
						"name": "paging",
						"defaultValue": "Y"
					},
					{"name": "pageResultKey"}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResult");
			dataMap_3.parseData({
				"columns" : [
					{"name": "success"},
					{"name": "message"}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/spa/admin/user/list.do";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDelete");
			submission_2.action = "/spa/admin/delete/user.do";
			submission_2.addRequestData(dataSet_1);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 800px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 799px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["30px", "60px", "1fr"]);
			formLayout_1.setRowAutoSizing(1, true);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("grpSearch");
				group_2.userAttr({
					"mobile-column-count": "1",
					"tablet-column-count": "2"
				});
				group_2.style.setClasses(["cl-search-box"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "15px";
				formLayout_2.rightMargin = "20px";
				formLayout_2.bottomMargin = "15px";
				formLayout_2.leftMargin = "20px";
				formLayout_2.horizontalSpacing = "15px";
				formLayout_2.setColumns(["3fr", "70px"]);
				formLayout_2.setRows(["30px"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var group_3 = new cpr.controls.Container();
					group_3.userAttr({
						"mobile-min-height": "28",
						"tablet-min-height": "28"
					});
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.setColumns(["110px", "150px", "1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_3.setLayout(formLayout_3);
					(function(container){
						var output_1 = new cpr.controls.Output();
						output_1.value = "검색어";
						output_1.userAttr({
							"mobile-min-height": "28",
							"tablet-min-height": "28"
						});
						output_1.style.setClasses(["label"]);
						container.addChild(output_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var comboBox_1 = new cpr.controls.ComboBox("cmbSearch");
						comboBox_1.preventInput = true;
						comboBox_1.bind("value").toDataMap(app.lookup("dmParam"), "searchType");
						(function(comboBox_1){
							comboBox_1.addItem(new cpr.controls.Item("-- 선택 --", ""));
							comboBox_1.addItem(new cpr.controls.Item("부서명", "deptNm"));
							comboBox_1.addItem(new cpr.controls.Item("사번", "userId"));
							comboBox_1.addItem(new cpr.controls.Item("사용자명", "userNm"));
							comboBox_1.addItem(new cpr.controls.Item("직위", "positionNm"));
							comboBox_1.addItem(new cpr.controls.Item("직책", "titleNm"));
						})(comboBox_1);
						if(typeof checkRequiredControls == "function") {
							comboBox_1.addEventListener("selection-change", checkRequiredControls);
						}
						container.addChild(comboBox_1, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var inputBox_1 = new cpr.controls.InputBox("ipbKeyword");
						inputBox_1.bind("value").toDataMap(app.lookup("dmParam"), "searchText");
						container.addChild(inputBox_1, {
							"colIndex": 2,
							"rowIndex": 0
						});
					})(group_3);
					container.addChild(group_3, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 1
					});
					var group_4 = new cpr.controls.Container();
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.setColumns(["70px"]);
					formLayout_4.setRows(["1fr"]);
					group_4.setLayout(formLayout_4);
					(function(container){
						var button_1 = new cpr.controls.Button("btnSearch");
						button_1.value = "조회";
						button_1.style.setClasses(["btn-search"]);
						if(typeof onButtonClick == "function") {
							button_1.addEventListener("click", onButtonClick);
						}
						container.addChild(button_1, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_4);
					container.addChild(group_4, {
						"colIndex": 1,
						"rowIndex": 0,
						"colSpan": 1,
						"rowSpan": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var group_5 = new cpr.controls.Container("grpContent");
				group_5.style.setClasses(["cl-content-box"]);
				// Layout
				var formLayout_5 = new cpr.controls.layouts.FormLayout();
				formLayout_5.topMargin = "15px";
				formLayout_5.rightMargin = "20px";
				formLayout_5.bottomMargin = "15px";
				formLayout_5.leftMargin = "20px";
				formLayout_5.setColumns(["1fr"]);
				formLayout_5.setRows(["30px", "1fr", "40px"]);
				group_5.setLayout(formLayout_5);
				(function(container){
					var group_6 = new cpr.controls.Container();
					// Layout
					var formLayout_6 = new cpr.controls.layouts.FormLayout();
					formLayout_6.topMargin = "1fr";
					formLayout_6.bottomMargin = "1fr";
					formLayout_6.horizontalSpacing = "10px";
					formLayout_6.setColumns(["1fr", "30px", "30px"]);
					formLayout_6.setRows(["30px"]);
					group_6.setLayout(formLayout_6);
					(function(container){
						var output_2 = new cpr.controls.Output();
						output_2.value = "사용자 관리";
						output_2.style.setClasses(["sub-title"]);
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var button_2 = new cpr.controls.Button("btnInsert");
						button_2.value = "";
						button_2.style.setClasses(["btn-icon-reg"]);
						if(typeof onBtnInsertClick == "function") {
							button_2.addEventListener("click", onBtnInsertClick);
						}
						container.addChild(button_2, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var button_3 = new cpr.controls.Button("btnDelete");
						button_3.value = "";
						button_3.style.setClasses(["btn-icon-delete"]);
						if(typeof onBtnDeleteClick == "function") {
							button_3.addEventListener("click", onBtnDeleteClick);
						}
						container.addChild(button_3, {
							"colIndex": 2,
							"rowIndex": 0
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var grid_1 = new cpr.controls.Grid("grdUserMgmt");
					grid_1.fieldLabel = "사용자관리";
					grid_1.readOnly = true;
					grid_1.userAttr({"bindDataFormId": "grpBInfo"});
					grid_1.init({
						"dataSet": app.lookup("dsUserList"),
						"autoFit": "2, 3, 4, 5, 6, 7, 8, 9, 11",
						"columns": [
							{"width": "50px"},
							{"width": "50px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "80px"},
							{"width": "80px"},
							{"width": "120px"},
							{"width": "120px"},
							{"width": "150px"},
							{"width": "70px"},
							{"width": "150px"}
						],
						"header": {
							"rows": [{"height": "35px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.text = "No";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.text = "부서명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.text = "사번";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.text = "성명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.text = "직위";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.text = "직책";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.text = "사무실 전화";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.text = "이메일";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.text = "잠김여부";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.text = "마지막로그인";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.text = "휴대전화";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "35px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "deptNm";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "userId";
										cell.style.setClasses(["title"]);
										cell.control = (function(){
											var output_3 = new cpr.controls.Output("opt20");
											output_3.value = "Output";
											output_3.style.setClasses(["title"]);
											output_3.bind("value").toDataColumn("userId");
											return output_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "userNm";
										cell.style.setClasses(["tbodyDefault"]);
										cell.control = (function(){
											var output_4 = new cpr.controls.Output("opt21");
											output_4.value = "Output";
											output_4.userAttr({"userInfo": "userId"});
											output_4.bind("value").toDataColumn("userNm");
											return output_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "positionNm";
										cell.style.setClasses(["title"]);
										cell.control = (function(){
											var output_5 = new cpr.controls.Output("opt29");
											output_5.style.css({
												"text-align" : "center"
											});
											output_5.bind("value").toDataColumn("positionNm");
											return output_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6, "rowSpan": 1, "colSpan": 1},
									"configurator": function(cell){
										cell.columnName = "titleNm";
										cell.style.setClasses(["tbodyDefault"]);
										cell.control = (function(){
											var output_6 = new cpr.controls.Output();
											output_6.style.css({
												"text-align" : "center"
											});
											output_6.bind("value").toDataColumn("titleNm");
											return output_6;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "officePhone";
										cell.style.setClasses(["tbodyDefault"]);
										cell.control = (function(){
											var output_7 = new cpr.controls.Output("opt24");
											output_7.value = "Output";
											output_7.bind("value").toDataColumn("officePhone");
											return output_7;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "email";
										cell.style.setClasses(["tbodyDefault"]);
										cell.control = (function(){
											var output_8 = new cpr.controls.Output("opt23");
											output_8.value = "Output";
											output_8.bind("value").toDataColumn("email");
											return output_8;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10, "rowSpan": 1, "colSpan": 1},
									"configurator": function(cell){
										cell.columnName = "lockYn";
										cell.style.setClasses(["tbodyDefault"]);
										cell.control = (function(){
											var output_9 = new cpr.controls.Output("opt25");
											output_9.style.css({
												"text-align" : "center"
											});
											output_9.bind("value").toDataColumn("lockYn");
											return output_9;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.columnName = "lastLoginDt";
										cell.style.setClasses(["tbodyDefault"]);
										cell.control = (function(){
											var output_10 = new cpr.controls.Output();
											output_10.style.css({
												"text-align" : "center"
											});
											output_10.bind("value").toDataColumn("lastLoginDt");
											return output_10;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "mobilePhone";
										cell.style.setClasses(["tbodyDefault"]);
										cell.control = (function(){
											var output_11 = new cpr.controls.Output();
											output_11.bind("value").toDataColumn("mobilePhone");
											return output_11;
										})();
									}
								}
							]
						}
					});
					if(typeof onGrdUserMgmtDblclick == "function") {
						grid_1.addEventListener("dblclick", onGrdUserMgmtDblclick);
					}
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var pageIndexer_1 = new cpr.controls.PageIndexer("pgIdx");
					pageIndexer_1.pageRowCount = 10;
					pageIndexer_1.viewPageCount = 10;
					pageIndexer_1.init(0, 1, 1);
					if(typeof onPgIdxSelectionChange == "function") {
						pageIndexer_1.addEventListener("selection-change", onPgIdxSelectionChange);
					}
					container.addChild(pageIndexer_1, {
						"colIndex": 0,
						"rowIndex": 2
					});
				})(group_5);
				container.addChild(group_5, {
					"colIndex": 0,
					"rowIndex": 2
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "20px",
				"right": "20px",
				"bottom": "20px",
				"left": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "사용자 관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
