/*
 * App URI: 202003/main
 * Source Location: 202003/main.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202003/main", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Untitled.js
			 * Created at 2020. 3. 4. 오후 2:06:47.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var buttons= new cpr.controls.Button("btt");
				
				app.getContainer().addChild(buttons, {width: "218.5px", height: "343.5px", left: "547px", top: "414.5px"});
				
				var droptarget = new cpr.controls.DropTarget(buttons, {
					isImportant : function(source){
						return source.dataType == "text";
					},
					onDragEnter : function(context){
						context.target.control.style.css({
							"border" :"solid 2px orange"
						});
					},
					onDragLeave: function(context) {
						context.target.control.style.removeStyle("border");
					},
					onDragMove : function(context){
						
					},
					onDrop : function(context){
						context.target.control.style.css({
							"border" :"solid 2px orange"
						});
					}
				});
				
				app.openDialog("202003/popup", {width : 400, height : 400}, function(dialog){
					dialog.ready(function(dialogApp){
						// 필요한 경우, 다이얼로그의 앱이 초기화 된 후, 앱 속성을 전달하십시오.
					});
				}).then(function(returnValue){
					;
				});
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				console.log(app.lookup("btt").hasOwnProperty("DropTarget"));
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 800px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 799px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "30px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "76px",
				"left": "20px",
				"width": "100px",
				"height": "30px"
			});
		}
	});
	app.title = "main";
	cpr.core.Platform.INSTANCE.register(app);
})();
