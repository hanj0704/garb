/*
 * App URI: 202003/tester
 * Source Location: 202003/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202003/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2020. 3. 2. 오후 4:31:38.
			 *
			 * @author HANS
			 ************************************************/
			
			var objs = {};
			var filtered;
			var vcGrp = null;
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
			//	app.lookup("sms4").send();
			
				
			}
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSms4SubmitSuccess(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms4 = e.control;
				var dsList = app.lookup("dsList");
					for(var i  = 0 ; i < dsList.getRowCount() ; i++) {
					var button = new cpr.controls.Button();
					var random = Math.random();
					if(random < 0.5) {
						
					button.value = dsList.getValue(i, "value");
					}else {
					button.bind("value").toExpression("' '");
					button.style.css({"background" :"tomato"})
					}
					
					app.getContainer().addChild(button, {
						"with" : "100px",
						"height" : "20px",
						"autoSize" : "none"
					});
				}
				
			 filtered = app.getContainer().getAllRecursiveChildren().filter(function(each){
					if(each.getBindInfo("value") ===undefined) {
						return each;
					}
				});
			
				filtered.forEach(function(each,idx){
					objs[idx] = each.value;
				});
			}
			
			
			/*
			 * 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				var size = Object.keys(objs).length-1;
				filtered.forEach(function(each,idx){
					each.value = objs[size-idx];
				});	
				
				app.getContainer().redraw();
			}
			
			
			
			
			/*
			 * "빌드버튼" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				app.lookup("sms1").send();
			}
			
			
			/*
			 * "빌드버튼" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				console.log(app.lookup("mse1").value);
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				vcGrp = new cpr.controls.Container("grp1");
				var form = new cpr.controls.layouts.FormLayout();
				form.setRows(["1fr","1fr"]);
				form.setColumns(["1fr","1fr"]);
				vcGrp.setLayout(form);
				
				app.getContainer().floatControl(vcGrp, {
					"width" : "300px",
					"height" : "300px",
					"left" : "300px",
					"top" : "300px"
				});
				
				vcGrp.addChild(app.lookup("opt1"), {
					"rowIndex" : 0,
					"colIndex" : 0
				});
			}
			
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				vcGrp = new cpr.controls.Container("grp1");
				var form = new cpr.controls.layouts.FormLayout();
				form.setRows(["1fr","1fr","1fr"]);
				form.setColumns(["1fr","1fr","1fr"]);
				vcGrp.setLayout(form);
				
				app.getContainer().floatControl(vcGrp, {
					"width" : "300px",
					"height" : "300px",
					"left" : "300px",
					"top" : "300px"
				});
				app.lookup("grp1").addChild(app.lookup("opt1"), {
					"rowIndex" : 1,
					"colIndex" : 1
				});
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
			
				app.lookup("grd1").filter("column2 *= '동'");	
			}
			
			
			/*
			 * 그리드에서 mouseup 이벤트 발생 시 호출.
			 * 사용자가 컨트롤 위에 포인터를 위치한 상태로 마우스 버튼을 뗄 때 발생하는 이벤트.
			 */
			function onGrd1Mouseup(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				console.log("MOUSEUP");
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				
				app.openDialog("Untitled", {width : 400, height : 300}, function(dialog){
					dialog.ready(function(dialogApp){
						// 필요한 경우, 다이얼로그의 앱이 초기화 된 후, 앱 속성을 전달하십시오.
						
						cpr.core.App.load("201909/ep", function(loadedApp){
							dialog.app = loadedApp;
							dialog.redraw();
						});
						
					});
				}).then(function(returnValue){
					;
				});
			}
			
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onIpb2ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb2 = e.control;
				
				console.log("변경됨");
			}
			
			
			/*
			 * "Button" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				
				app.lookup("ds1").setValue(0, "column1", "가가가");
				app.lookup("grd1").redraw();
			}
			
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onIpb3ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb3 = e.control;
				console.log("ㅁㅁ");
				
				app.lookup("ds1").setValue(0, "column1", "가가가");
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"alterColumnLayout": "server",
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "column11", "column2": "홍길동"},
					{"column1": "column12", "column2": "김길동"},
					{"column1": "column13", "column2": "왕길도"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsList");
			dataSet_2.parseData({
				"columns" : [
					{
						"name": "key",
						"dataType": "number"
					},
					{"name": "value"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds2");
			dataSet_3.parseData({
				"columns": [{"name": "label"}],
				"rows": [
					{"label": "1"},
					{"label": "1"},
					{"label": "1"},
					{"label": "1"},
					{"label": "1"},
					{"label": "1"},
					{"label": "1"},
					{"label": "1"}
				]
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{"name": "column1"}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "/cisweb/build.do";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms2");
			submission_2.action = "/cisweb/download.do";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.responseType = "filedownload";
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("sms3");
			submission_3.action = "/cisweb/test.do";
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("sms4");
			submission_4.action = "datas/MOCK_DATA.json";
			submission_4.addResponseData(dataSet_2, false);
			if(typeof onSms4SubmitSuccess == "function") {
				submission_4.addEventListener("submit-success", onSms4SubmitSuccess);
			}
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.bind("value").toExpression("123");
			if(typeof onBtn1Click2 == "function") {
				button_1.addEventListener("click", onBtn1Click2);
			}
			container.addChild(button_1, {
				"top": "2px",
				"left": "2px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "빌드버튼";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "32px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtn3Click2 == "function") {
				button_3.addEventListener("click", onBtn3Click2);
			}
			container.addChild(button_3, {
				"top": "93px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Button";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "123px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "Output";
			container.addChild(output_1, {
				"top": "191px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.value = "Button";
			if(typeof onBtn5Click == "function") {
				button_5.addEventListener("click", onBtn5Click);
			}
			container.addChild(button_5, {
				"top": "153px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columnMovable": true,
				"resizableColumns": "all",
				"columns": [
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
								cell.control = (function(){
									var inputBox_1 = new cpr.controls.InputBox("ipb3");
									if(typeof onIpb3ValueChange == "function") {
										inputBox_1.addEventListener("value-change", onIpb3ValueChange);
									}
									inputBox_1.bind("value").toDataColumn("column1");
									return inputBox_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						}
					]
				}
			});
			if(typeof onGrd1Mouseup == "function") {
				grid_1.addEventListener("mouseup", onGrd1Mouseup);
			}
			container.addChild(grid_1, {
				"top": "21px",
				"left": "130px",
				"width": "469px",
				"height": "212px"
			});
			
			var button_6 = new cpr.controls.Button("btn6");
			button_6.value = "Button";
			if(typeof onBtn6Click == "function") {
				button_6.addEventListener("click", onBtn6Click);
			}
			container.addChild(button_6, {
				"top": "251px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("ipb1");
			container.addChild(inputBox_2, {
				"top": "221px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var menu_1 = new cpr.controls.Menu();
			(function(menu_1){
			})(menu_1);
			container.addChild(menu_1, {
				"top": "240px",
				"left": "133px",
				"width": "377px",
				"height": "150px"
			});
			
			var button_7 = new cpr.controls.Button("btn7");
			button_7.value = "Button";
			if(typeof onBtn7Click == "function") {
				button_7.addEventListener("click", onBtn7Click);
			}
			container.addChild(button_7, {
				"top": "281px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_2 = new cpr.controls.Grid("grd2");
			grid_2.init({
				"dataSet": app.lookup("ds2"),
				"columns": [{"width": "100px"}],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [{
						"constraint": {"rowIndex": 0, "colIndex": 0},
						"configurator": function(cell){
							cell.targetColumnName = "label";
							cell.filterable = false;
							cell.sortable = false;
							cell.text = "label";
						}
					}]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [{
						"constraint": {"rowIndex": 0, "colIndex": 0},
						"configurator": function(cell){
							cell.columnName = "label";
							cell.suppressible = true;
							cell.control = (function(){
								var button_8 = new cpr.controls.Button("btn8");
								button_8.value = "Button";
								button_8.bind("value").toDataColumn("label");
								return button_8;
							})();
						}
					}]
				}
			});
			container.addChild(grid_2, {
				"top": "240px",
				"left": "520px",
				"width": "400px",
				"height": "200px"
			});
			
			var checkBoxGroup_1 = new cpr.controls.CheckBoxGroup("cbg1");
			checkBoxGroup_1.colCount = 1;
			(function(checkBoxGroup_1){
				checkBoxGroup_1.addItem(new cpr.controls.Item("label1", "value1"));
				checkBoxGroup_1.addItem(new cpr.controls.Item("label2", "value2"));
				checkBoxGroup_1.addItem(new cpr.controls.Item("label3", "value3"));
				checkBoxGroup_1.addItem(new cpr.controls.Item("label4", "value4"));
				checkBoxGroup_1.addItem(new cpr.controls.Item("label5", "value5"));
			})(checkBoxGroup_1);
			container.addChild(checkBoxGroup_1, {
				"top": "463px",
				"left": "164px",
				"width": "106px",
				"height": "212px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
