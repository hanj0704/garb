/*
 * App URI: 202003/popup
 * Source Location: 202003/popup.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202003/popup", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Untitled2.js
			 * Created at 2020. 3. 4. 오후 3:11:59.
			 *
			 * @author HANS
			 ************************************************/
			var feedback;
			function _createDragSourceFeedback(voRect){
			
			var feedbacks = new cpr.controls.Output();
				feedbacks.style.css({
					"opacity" : "0.8",
					"width": voRect.width + "px",
					"height": voRect.height +"px",
					"border": "solid 1px red",
					"text-align" : "center",
					"color" : "black",
					"border-radius": "10px",
					"background": "white",
					"box-shadow": "0px 2px 10px #ddd",
					"cursor": "move"
				});
				return feedbacks;
			}
			function createDrag(control){
				
				var voRootApp = app.getRootAppInstance();
				var dragSource = new cpr.controls.DragSource(control,  {
				options:{
				  dataType : "text",
				  threadhold: 10 // 10px만큼 이동해야 드래그시작으로 인식
				},
				onDragStart : function(context){
				  context.cursor = "grabbing";
				  var actualRect = control.getActualRect();
				  feedback = _createDragSourceFeedback(actualRect);
				  control.style.css("opacity"," 0.5");
				  var newActualRect = actualRect.getTranslatedByDimension(context.dragDelta);
				  voRootApp.floatControl(feedback, cpr.controls.layouts.XYLayout.createConstraintWithRect(newActualRect));
				  context.source = null;
				  
				},
				onDragMove : function(context){
				  context.cursor = "grabbing";
				  var actualRect = context.source.control.getActualRect();
				  var newRect = actualRect.getTranslatedByDimension(context.dragDelta);
				  voRootApp.floatControl(feedback,cpr.controls.layouts.XYLayout.createConstraintWithRect(newRect));
				},
				onDragEnd : function(context){
				  context.cursor = "";
				  feedback.dispose();
				  feedback = null;
				  control.style.removeStyle("opacity");
				}
			});
			}
			
			function createDrop (control) {
				var droptarget = new cpr.controls.DropTarget(control, {
					isImportant : function(source){
						return source.dataType == "text";
					},
					onDragEnter : function(context){
						context.target.control.style.css({
							"border" :"solid 2px orange"
						});
					},
					onDragLeave: function(context) {
						context.target.control.style.removeStyle("border");
					},
					onDragMove : function(context){
						
					},
					onDrop : function(context){
						context.target.control.style.css({
							"border" :"solid 2px orange"
						});
					}
				});
			}
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				createDrag(app.lookup("btn1"));
				createDrop(app.lookup("btn2"));
				
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 800px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 799px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			container.addChild(button_1, {
				"top": "20px",
				"left": "36px",
				"width": "100px",
				"height": "30px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			container.addChild(button_2, {
				"top": "81px",
				"left": "36px",
				"width": "100px",
				"height": "30px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "popup";
	cpr.core.Platform.INSTANCE.register(app);
})();
