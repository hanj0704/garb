/*
 * App URI: 202007/ImpCAlert
 * Source Location: 202007/ImpCAlert.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202007/ImpCAlert", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * ImpCAlert.js
			 * Created at 2020. 3. 23. 오후 2:07:34.
			 *
			 * @author ryu
			 ************************************************/
			
			
			var moOriginalConstraint = new cpr.utils.ObjectMap();
			
			
			/**
			 * 현재 컨스트레인트를 저장합니다.
			 */
			function backup() {
				var voHostAppIns = app.getHostAppInstance();
				var voDialogMngr = voHostAppIns.dialogManager;
				
				var vsActiveDialogNm = voDialogMngr.getActiveDialogName();
				
				moOriginalConstraint.put("constraint", voDialogMngr.getConstraintByName(vsActiveDialogNm));
			}
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				
			}
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				var voHostAppIns = app.getHostAppInstance();
				
				if (voHostAppIns){
					/** @type {{strCd:"process"|"confirm"|"warning"|"info"|"danger"|"error",strTitle:String,strMsg:String}} */
					var voInitValue = app.getHostProperty("initValue");
					
					if (_.keys(voInitValue).length > 0){
						var vcDsAlert = app.lookup("dsAlert");
						var vcDmReq = app.lookup("dmReq");
						
						vcDmReq.setValue("strCd", voInitValue["strCd"]);
						vcDmReq.setValue("strMsg", voInitValue["strMsg"]);
						
						var voFindedRow = vcDsAlert.findFirstRow("alertCd == '" + vcDmReq.getValue("strCd") + "'");
						if (voFindedRow != null){
							var vsTitle = voFindedRow.getValue("alertCdNm");
							
							/** @type cpr.controls.Dialog */
							var vcDialog = app.getHost();
							
							if (ValueUtil.isNull(voInitValue.strTitle)){
								vcDialog.headerTitle = vsTitle + " 메세지";
							} else {
								vcDialog.headerTitle = voInitValue.strTitle;
							}
						}
					}
					
					app.getContainer().redraw();
				}
				
				backup();
			}
			
			
			/*
			 * "확인" 버튼(btnSubmit)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSubmitClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSubmit = e.control;
				
				app.close(true);
			}
			
			
			/*
			 * "취소" 버튼(btnCancel)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCancelClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnCancel = e.control;
				
				app.close(false);
			}
			
			
			/*
			 * "상세보기 ▼" 버튼(btnShowDtl)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnShowDtlClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnShowDtl = e.control;
				
				var vcGrpCont = app.getContainer();
				var voGrpContLayout = vcGrpCont.getLayout();
				
				var vbExpanded = voGrpContLayout.isRowVisible(1);
				
				btnShowDtl.value = vbExpanded == true ? "상세보기 ▼" : "상세보기 ▲";
				voGrpContLayout.setRowVisible(1, !vbExpanded);
			
				cpr.core.DeferredUpdateManager.INSTANCE.asyncExec(function() {
					var voHostAppIns = app.getHost().getAppInstance();
					var voDialogMngr = voHostAppIns.dialogManager;
			
					var vsDialogNm= voDialogMngr.getActiveDialogName();
			
					if (voGrpContLayout.isRowVisible(1) == false){ // 접기 상태일 때
						voDialogMngr.updateConstraintByName(vsDialogNm, moOriginalConstraint.get("constraint"));
						return;
					}
					
					var vcGrpErrorBox = app.lookup("grpErrorBox");
					var voActualRect = vcGrpErrorBox.getActualRect();
			
					var voDialogConstraint = voDialogMngr.getConstraintByName(vsDialogNm);
					
					var voNewConstraint = {
						"top" : voDialogConstraint["top"] - (voDialogConstraint["height"] / 2),
						"left" : voDialogConstraint["left"],
						"height" : voDialogConstraint["height"] + vcGrpErrorBox.getActualRect().height,
						"width" : voDialogConstraint["width"]
					}
					
					voDialogMngr.replaceConstraintByName(vsDialogNm, voNewConstraint);
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsAlert");
			dataSet_1.parseData({
				"columns": [
					{"name": "alertCd"},
					{"name": "alertCdNm"}
				],
				"rows": [
					{"alertCd": "process", "alertCdNm": "처리"},
					{"alertCd": "confirm", "alertCdNm": "확인"},
					{"alertCd": "warning", "alertCdNm": "경고"},
					{"alertCd": "info", "alertCdNm": "정보 전달"},
					{"alertCd": "danger", "alertCdNm": "오류"},
					{"alertCd": "error", "alertCdNm": "에러"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmReq");
			dataMap_1.parseData({
				"columns" : [
					{"name": "strCd"},
					{"name": "strMsg"}
				]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1660px)", "default");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1659px)", "tablet");
			app.supportMedia("all and (max-width: 1023px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.horizontalSeparatorColor = "#7f7f7f";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["1fr", "10px"]);
			formLayout_1.setRowAutoSizing(1, true);
			formLayout_1.setRowVisible(1, false);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpAlertBox");
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.scrollable = false;
			formLayout_2.topMargin = "0px";
			formLayout_2.rightMargin = "25px";
			formLayout_2.bottomMargin = "18px";
			formLayout_2.leftMargin = "25px";
			formLayout_2.setColumns(["1fr"]);
			formLayout_2.setRows(["1fr", "30px"]);
			formLayout_2.setRowMinHeight(0, 50);
			group_1.setLayout(formLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("grp2");
				// Layout
				var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
				flowLayout_1.scrollable = false;
				flowLayout_1.horizontalAlign = "center";
				flowLayout_1.verticalAlign = "middle";
				group_2.setLayout(flowLayout_1);
				(function(container){
					var button_1 = new cpr.controls.Button("btnSubmit");
					button_1.value = "확인";
					button_1.style.setClasses(["btn-popup"]);
					if(typeof onBtnSubmitClick == "function") {
						button_1.addEventListener("click", onBtnSubmitClick);
					}
					container.addChild(button_1, {
						"width": "70px",
						"height": "30px"
					});
					var button_2 = new cpr.controls.Button("btnCancel");
					button_2.value = "취소";
					button_2.style.setClasses(["btn-popup"]);
					button_2.bind("visible").toExpression([
						"switch(#dmReq.getValue(\"strCd\")){",
						"\tcase \"process\", case \"confirm\" : true",
						"\tdefault : false",
						"}"
					].join("\n"));
					if(typeof onBtnCancelClick == "function") {
						button_2.addEventListener("click", onBtnCancelClick);
					}
					container.addChild(button_2, {
						"width": "70px",
						"height": "30px"
					});
					var button_3 = new cpr.controls.Button("btnShowDtl");
					button_3.value = "상세보기 ▼";
					button_3.style.setClasses(["btn-popup"]);
					button_3.bind("visible").toExpression([
						"switch(#dmReq.getValue(\"strCd\")){",
						"\tcase \"error\" : true",
						"\tdefault : false",
						"}"
					].join("\n"));
					if(typeof onBtnShowDtlClick == "function") {
						button_3.addEventListener("click", onBtnShowDtlClick);
					}
					container.addChild(button_3, {
						"width": "90px",
						"height": "30px"
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var group_3 = new cpr.controls.Container("grp4");
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.setColumns(["50px", "1fr"]);
				formLayout_3.setRows(["1fr"]);
				group_3.setLayout(formLayout_3);
				(function(container){
					var image_1 = new cpr.controls.Image("imgAlert");
					image_1.bind("src").toExpression([
						"switch(#dmReq.getValue(\"strCd\")){",
						"\tcase \"process\" : \"theme/common/images/icon/icon-help-circle.svg\",",
						"\tcase \"confirm\" : \"theme/common/images/icon/icon-check-circle.svg\",",
						"\tcase \"warning\" : \"theme/common/images/icon/icon-alert-triangle.svg\",",
						"\tcase \"info\" : \"theme/common/images/icon/icon-alert-circle.svg\",",
						"\tcase \"danger\" : \"theme/common/images/icon/icon-x-circle.svg\",",
						"\tcase \"error\" : \"theme/common/images/icon/icon-x-circle.svg\"",
						"\tdefault : \"\"",
						"}"
					].join("\n"));
					(function(image_1){
					})(image_1);
					container.addChild(image_1, {
						"colIndex": 0,
						"rowIndex": 0,
						"verticalAlign": "center",
						"height": 50
					});
					var output_1 = new cpr.controls.Output("optMsg");
					output_1.style.setClasses(["text-center"]);
					output_1.bind("value").toDataMap(app.lookup("dmReq"), "strMsg");
					container.addChild(output_1, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 0
			});
			
			var group_4 = new cpr.controls.Container("grpErrorBox");
			group_4.style.setClasses(["message-error-box"]);
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 10;
			verticalLayout_1.leftMargin = 10;
			verticalLayout_1.rightMargin = 10;
			verticalLayout_1.topMargin = 5;
			verticalLayout_1.bottomMargin = 5;
			group_4.setLayout(verticalLayout_1);
			(function(container){
			})(group_4);
			container.addChild(group_4, {
				"colIndex": 0,
				"rowIndex": 1
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = " ";
	cpr.core.Platform.INSTANCE.register(app);
})();
