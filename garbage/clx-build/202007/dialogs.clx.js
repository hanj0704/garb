/*
 * App URI: 202007/dialogs
 * Source Location: 202007/dialogs.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202007/dialogs", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * dialogs.js
			 * Created at 2020. 7. 23. 오후 4:41:01.
			 *
			 * @author han
			 ************************************************/
			
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
			//	var voInit = app.getHostProperty("initValue");
			//	app.lookup("opt1").value = voInit["opts"];
			//	
				cpr.core.DeferredUpdateManager.INSTANCE.asyncExec(function(){
					
			//		console.log(app.lookup("opt1").getActualRect());
					console.log(app.getContainer().getActualRect());
					console.log(app.lookup("btn1").getActualRect());
					console.log(app.lookup("ea1").getEmbeddedAppInstance().getContainer().getActualRect());
					console.log(app.lookup("ea1").getEmbeddedAppInstance().getContainer().getOffsetRect());
					console.log(app.lookup("ea1").getEmbeddedAppInstance().getContainer().getContentPaneRect());
					console.log(app.getContainer().getContentPaneRect());
			//		console.log(app.getHostAppInstance().dialogManager.getDialogName(app.getHostProperty("initValue")["dias"]));
					console.log(app.getHostAppInstance().dialogManager.getDialogNames());
				});
				
			//console.log(KDA);
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"width": "100px",
				"height": "141px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			cpr.core.App.load("202005/DragMoveTest", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"autoSize": "both",
				"width": "320px",
				"height": "400px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "dialogs";
	cpr.core.Platform.INSTANCE.register(app);
})();
