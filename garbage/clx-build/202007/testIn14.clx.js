/*
 * App URI: 202007/testIn14
 * Source Location: 202007/testIn14.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202007/testIn14", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * testIn14.js
			 * Created at 2020. 7. 14. 오후 2:14:14.
			 *
			 * @author han
			 ************************************************/
			
			cpr.core.Platform.INSTANCE.onerror = function(error){
				console.log(error);	
			}
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var mdi = app.lookup("mdi1");
				mdi.addItemWithApp("202007/mdiTest", true,function(item, _app){
					item.content.initValue = {
						"name": "HANJIN",
						"age" : "26"
					};
			//		var apis = _app.createNewInstance();
			//		apis.run().lookup("btn1").value = "zzzz";
			//		apis.setAppProperty("initParameter", {
			//		"name": "HANJIN",
			//			"age" : "26"
			//		});
			//		apis.lookup("btn1").value = "ㅋㅋㅋ";
					
					
				});
				
			//	app.lookup("msm1").removeAllEventListeners();
			
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				console.log(app.lookup("sch1").type);
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				var cust = createKit(app);
				
				app.lookup("grd1").clearSelection();
				cust.clearAllChildren(app, app.lookup("grp1"), false);
			
				app.lookup("grp1").redraw();
			//	app.lookup("cmb1").redraw();
			//	app.lookup("cmb2").redraw();
				
			}
			
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				setA(app.lookup("dm1"));
				
				
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				var dm = getA();
				
				dm.setValue("column2","쿄쿄쿄쿄쿄");
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				cpr.core.App.load("202007/testIn15", function(loadedApp){
					loadedApp.createNewInstance().run();
					app.close();
				});
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
			
				app.lookup("sms1").send();	
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21"},
					{"column1": "column12", "column2": "column22"},
					{"column1": "column13", "column2": "column23"},
					{"column1": "column14", "column2": "column24"}
				]
			});
			(function(dataSet){
				var dataView_1 = new cpr.data.DataView("dv1", dataSet);
				dataView_1.parseData({});
				app.register(dataView_1);
			})(dataSet_1);
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds3");
			dataSet_3.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{"name": "column6"},
					{"name": "column7"},
					{"name": "column8"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "value1", "column5": "column51", "column6": "column61", "column7": "column71", "column8": "value1"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "value2", "column5": "column52", "column6": "column62", "column7": "column72", "column8": "value2"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "value3", "column5": "column53", "column6": "column63", "column7": "column73", "column8": "value3"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "value4", "column5": "column54", "column6": "column64", "column7": "column74", "column8": "value4"}
				]
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "column1",
						"defaultValue": "q"
					},
					{
						"name": "column2",
						"defaultValue": "q"
					},
					{
						"name": "column3",
						"defaultValue": "q"
					}
				]
			});
			app.register(dataMap_1);
			
			var submission_1 = new cpr.protocols.Submission("sms1");
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click2 == "function") {
				button_1.addEventListener("click", onBtn1Click2);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var mDIFolder_1 = new cpr.controls.MDIFolder("mdi1");
			container.addChild(mDIFolder_1, {
				"top": "20px",
				"left": "130px",
				"width": "799px",
				"height": "316px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click2 == "function") {
				button_2.addEventListener("click", onBtn2Click2);
			}
			container.addChild(button_2, {
				"top": "50px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
		}
	});
	app.title = "testIn14";
	cpr.core.Platform.INSTANCE.register(app);
})();
