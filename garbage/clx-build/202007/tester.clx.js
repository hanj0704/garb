/*
 * App URI: 202007/tester
 * Source Location: 202007/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202007/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2020. 7. 6. 오후 2:18:13.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var grd = app.lookup("grd1");
				
				var ds1 = app.lookup("ds1");
				var a = grd.columnCount-1;
				
			//	for(var i = a ; i >=0 ; i--) {
			//		
			//		var colName = grd.detail.getColumn(i).columnName;
			//			console.log(colName);
			//		console.log(colName.indexOf("test"));
			//		
			//		if(colName.indexOf("test") >= 0) {
			//			ds1.deleteColumn(colName);
			//			grd.deleteColumn(i);
			//		}
			//	}
				grd.detail.getColumnByName("bbb").forEach(function(each){
					console.log(each.cellProp.constraint.cellIndex);
				});
			
				grd.redraw();
				
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				var ds = app.lookup("ds1");
				
			//	ds.getColumn("aaa").
				
				var grd = app.lookup("grd1");
				
				grd.revertData();
				grd.redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				var a = "총";
				var b = "원";
			//	app.lookup("opt1").displayExp =   "column4"["+a+"column4"+text+\""+b+"]\"";
			}
			
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				var ds = app.lookup("ds1");
				var grd = app.lookup("grd1");
				
				var cl2 = ds.getColumn("bbb");
				
				for(var i = 0 ; i < 7 ; i++) {
					
					cl2.setValue(i, i);
					
				}
				
				ds.commit();
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				
				var ds = app.lookup("ds1")
				ds.revert();
				
				app.lookup("grd1").revertData();
				
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				
			//	console.log(app.lookup("ds3").getColumnNames());
			
				var newDs = new cpr.data.DataSet("AA");
				newDs.parseData({
							"columns" : [
								{"name": "aaa"},
								{
									"name": "bbb",
									"dataType": "expression",
									"displayOnly": true
								},
								{"name": "column9"},
								{
									"name": "column4",
									"dataType": "expression",
									"displayOnly": true
								},
								{"name": "column5"},
								{
									"name": "dddd",
									"dataType": "expression",
									"displayOnly": true
								},
								{"name": "column6"}
							]
						})
						;
						
						console.log(newDs.getColumnNames());
			}
			
			
			/*
			 * "Button" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				
				
				var grd = app.lookup("grd1");
				
			//	grd.columnVisible(4, false);
				var ds = app.lookup("ds1");
				
			//	var a = ds.getHeader("test2").
			
			
			//	app.dialogManager.openDialog(appId, dialogName, dialogConstraint, handler);
				
				
			}
			
			
			/*
			 * 파일 업로드에서 sendbutton-click 이벤트 발생 시 호출.
			 * 파일을 전송하는 button을 클릭 시 발생하는 이벤트. 서브미션을 통해 전송 버튼에 대한 구현이 필요합니다.
			 */
			function onFud1SendbuttonClick(/* cpr.events.CEvent */ e){
				/** 
				 * @type cpr.controls.FileUpload
				 */
				var fud1 = e.control;
				
				var sms = app.lookup("sms1");
				fud1.getFiles().forEach(function(each){
					sms.addFileParameter(each.name,each);
				});
				
				sms.send();
			}
			
			
			/*
			 * "Button" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn8 = e.control;
				
				var grd = app.lookup("grd1");
				
				var ex = grd.getExportData();
				
				ex.rowgroups.forEach(function(each){
					if(each.region =="detail") {
			//			console.log(each.style.length);
			//			console.log(each.data.length);
			//			console.log(each.style);
			//			each.style[1].style["background-color"] = "red"
			//			console.log(each.data);	
					
						console.log(each.data[1][1]);
			//			console.log(each);
					}
				});
			}
			
			
			/*
			 * "Button" 버튼(btn9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn9Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn9 = e.control;
				
				var dsTree = app.lookup("dsTree");
				
			//	dsTree.insertRowData(0, false, {
			//		"label" : "0", 
			//		"value" : "0",
			//		"parent" :""
			//	});
			//	
			//	app.lookup("tre1").redraw();
			
				var tre = app.lookup("tre1");
				
				var items = tre.getItemByValue(6);
				
				var a = [];	
				a.push(items.parentItem.row);
				a.push(items.parentItem.row);
				a.push(items.parentItem.row);
				console.log(a);
				console.log(items.parentItem.row);
				
				console.log(a.indexOf(items.parentItem.row.getRowData()));
				
				var b = [];
				
				b.push({"name":1});
				
				console.log(b.indexOf({"name":1}));
				
				app.lookup("ds4").insertRowData(0,false,items.parentItem.row.getRowData());
				
				app.lookup("grd2").redraw();
			}
				
			
			/*
			 * "Button" 버튼(btn10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn10Click(/* cpr.events.CMouseEvent */ e){
				
				/** 
				 * @type cpr.controls.Button
				 */
				var btn10 = e.control;
				
				
			//	app.lookup("grd1").revertData();
				
				var a = app.lookup("ds4").getRowDataRanged();
				
				app.lookup("ds5").build(a);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{
						"name": "test1",
						"dataType": "number",
						"info": ""
					},
					{"name": "column2"},
					{"name": "test2"},
					{"name": "column3"},
					{"name": "test3"},
					{"name": "column4"},
					{"name": "test4"},
					{"name": "column5"},
					{"name": "test5"},
					{"name": "column6"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41", "column5": "11column51", "column6": "column61", "test1": "1", "test2": "1", "test3": "1", "test4": "1", "test5": "1"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42", "column5": "column52", "column6": "column62", "test1": "2", "test2": "2", "test3": "2", "test4": "2", "test5": "2"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43", "column5": "column53", "column6": "column63", "test1": "3", "test2": "3", "test3": "3", "test4": "3", "test5": "3"},
					{"column1": "column14", "column2": "column24", "column3": "4", "column4": "column44", "column5": "column54", "column6": "column64", "test1": "4", "test2": "4", "test3": "4", "test4": "4", "test5": "4"},
					{"column1": "column15", "column2": "column25", "column3": "5", "column4": "column45", "column5": "column55", "column6": "column65", "test1": "5", "test2": "5", "test3": "5", "test4": "5", "test5": "5"},
					{"column1": "column16", "column2": "column26", "column3": "6", "column4": "column46", "column5": "column56", "column6": "column66", "test1": "6", "test2": "6", "test3": "6", "test4": "6", "test5": "6"},
					{"column1": "column17", "column2": "column27", "column3": "7column37", "column4": "7column47", "column5": "column57", "column6": "column67", "test1": "7", "test2": "7", "test3": "7", "test4": "7", "test5": "7"}
				]
			});
			(function(dataSet){
				var dataView_1 = new cpr.data.DataView("dv1", dataSet);
				dataView_1.parseData({"filterCondition": "test1 >5"});
				app.register(dataView_1);
			})(dataSet_1);
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns" : [
					{"name": "column1"},
					{
						"name": "column2",
						"dataType": "number"
					},
					{"name": "column3"},
					{
						"name": "column4",
						"dataType": "number"
					}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds3");
			dataSet_3.parseData({
				"columns" : [
					{"name": "aaa"},
					{
						"name": "bbb",
						"dataType": "expression",
						"displayOnly": true
					},
					{"name": "column9"},
					{
						"name": "column4",
						"dataType": "expression",
						"displayOnly": true
					},
					{"name": "column5"},
					{
						"name": "dddd",
						"dataType": "expression",
						"displayOnly": true
					},
					{"name": "column6"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("ds4");
			dataSet_4.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "label1", "value": "value1", "parent": "parent1"},
					{"label": "label2", "value": "value2", "parent": "parent2"},
					{"label": "label3", "value": "value3", "parent": "parent3"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsTree");
			dataSet_5.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "label1", "value": "1", "parent": ""},
					{"label": "label2", "value": "2", "parent": ""},
					{"label": "label3", "value": "3", "parent": ""},
					{"label": "label4", "value": "4", "parent": "1"},
					{"label": "label5", "value": "5", "parent": "1"},
					{"label": "label6", "value": "6", "parent": "1"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("ds5");
			dataSet_6.parseData({
				"columns" : [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				]
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "column1",
						"dataType": "number",
						"defaultValue": "1"
					},
					{
						"name": "column2",
						"dataType": "number",
						"defaultValue": "2"
					},
					{
						"name": "column3",
						"defaultValue": "e"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "cisweb/upload.do";
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
