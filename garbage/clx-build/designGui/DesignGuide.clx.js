/*
 * App URI: designGui/DesignGuide
 * Source Location: designGui/DesignGuide.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("designGui/DesignGuide", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * DesignGuide.js
			 * Created at 2020. 3. 23. 오후 3:03:46.
			 *
			 * @author ryu
			 ************************************************/
			
			
			/*
			 * "행추가" 버튼(btnAdd)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnAddClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnAdd = e.control;
				
				var vcGrid = app.lookup("grd1");
				
				vcGrid.insertRow(vcGrid.rowCount, false);
			}
			
			
			/*
			 * "행삭제" 버튼(btnDelete)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDeleteClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnDelete = e.control;
				
				var vcGrid = app.lookup("grd1");
				
				vcGrid.deleteRow(vcGrid.getCheckRowIndices());
			}
			
			
			/*
			 * 체크 박스에서 value-change 이벤트 발생 시 호출.
			 * CheckBox의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCbx5ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.CheckBox
				 */
				var cbx5 = e.control;
				
				app.lookup("grd1").redraw();
			}
			
			
			/*
			 * "OPEN" 버튼(btnDialog)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDialogClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnDialog = e.control;
				
				app.getRootAppInstance().openDialog("app/imp/ImpCGrid", {width : 600, height : 450}, function(dialog){
					dialog.ready(function(dialogApp){
						// 필요한 경우, 다이얼로그의 앱이 초기화 된 후, 앱 속성을 전달하십시오.
					});
				}).then(function(returnValue){
					;
				});
			}
			
			
			/*
			 * "처리 메세지" 버튼(btnAlert)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnAlertClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnAlert = e.control;
				
				var vsAlertCd = btnAlert.userAttr("alert-code");
				var vsAlertMsg = btnAlert.userAttr("alert-msg");
				
				app.getRootAppInstance().openDialog("app/imp/ImpCAlert", {width : 320, height : 210, resizable : false, headerMovable : false}, function(dialog){
					dialog.ready(function(dialogApp){
						// 필요한 경우, 다이얼로그의 앱이 초기화 된 후, 앱 속성을 전달하십시오.
						dialog.initValue = {
							"strCd" : vsAlertCd,
							"strMsg" : vsAlertMsg
						}
					});
					dialog.addEventListener("close", function(e) {
						/** @type Boolean */
						var vbReturnValue = e.control.returnValue;
						app.lookup("optAlert").value = vbReturnValue != null && vbReturnValue != "" ? vbReturnValue.toString() : "";
					});
				});
			}
			
			
			var util = createNewHintKit();
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				var vcHintCheckBox = new cpr.controls.Container();
				var vLayout = new cpr.controls.layouts.VerticalLayout();
				
				vcHintCheckBox.setLayout(vLayout);
				vcHintCheckBox.style.css({
					"background-color" : "#ffffff",
					"opacity" : 0.9
				});
				
				var vcClassCheck = new cpr.controls.CheckBox();
				vcClassCheck.text = "클래스 정보확인"
				vcClassCheck.addEventListener("value-change", function(e){
					util.configClassInfoHints(app, e.newValue);
				});
				var vcConstraintCheck = new cpr.controls.CheckBox();
				vcConstraintCheck.text = "Layouts";
				vcConstraintCheck.addEventListener("value-change", function(e){
					util.configConstriantInfoHints(app, e.newValue);
				});
				var vcGridCheck = new cpr.controls.CheckBox();
				vcGridCheck.text = "그리드 정보확인";
				vcGridCheck.addEventListener("value-change", function(e){
					util.configGridInfoHints(app, e.newValue);
				});
				
				var vcFormDivisionCheck = new cpr.controls.CheckBox();
				vcFormDivisionCheck.text = "Layouts";
				vcFormDivisionCheck.addEventListener("value-change", function(e){
					util.showFormDivision(app, e.newValue);
				});
				
				vcHintCheckBox.addChild(vcClassCheck, {
					"width" : "100px",
					"height" : "30px",
					"autoSize" : "none"
				});	
				vcHintCheckBox.addChild(vcConstraintCheck, {
					"width" : "100px",
					"height" : "30px",
					"autoSize" : "none"
				});	
				vcHintCheckBox.addChild(vcGridCheck, {
					"width" : "100px",
					"height" : "30px",
					"autoSize" : "none"
				});	
				vcHintCheckBox.addChild(vcFormDivisionCheck, {
					"width" : "100px",
					"height" : "30px",
					"autoSize" : "none"
				});	
				
				app.floatControl(vcHintCheckBox,{
					"top" : "calc(50% - 50px)",
					"right" : "20px",
					"width" : "150px"
			//		"height" : "150px"
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{"name": "column6"},
					{"name": "column7"},
					{"name": "column8"},
					{"name": "column9"},
					{"name": "column10"}
				],
				"rows": [
					{"column1": "Tree Grid Data", "column2": "1", "column3": "Data 01", "column4": "가", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "1"},
					{"column1": "Tree Grid Data", "column2": "12", "column3": "Data 01", "column4": "가나", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "2"},
					{"column1": "Tree Grid Data", "column2": "123", "column3": "Data 01", "column4": "가나다", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "1"},
					{"column1": "Tree Grid Data", "column2": "1234", "column3": "Data 01", "column4": "가나다라", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "2"},
					{"column1": "Tree Grid Data", "column2": "12345", "column3": "Data 01", "column4": "가나다라마", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "3"},
					{"column1": "Tree Grid Data", "column2": "123456", "column3": "Data 01", "column4": "가나다라마바", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "3"},
					{"column1": "Tree Grid Data", "column2": "1234567", "column3": "Data 01", "column4": "가나다라마바사", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "2"},
					{"column1": "Tree Grid Data", "column2": "12345678", "column3": "Data 01", "column4": "가나다라마바사아", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "3"},
					{"column1": "Tree Grid Data", "column2": "123456789", "column3": "Data 01", "column4": "가나다라마바사아자", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "3"},
					{"column1": "Tree Grid Data", "column2": "12345", "column3": "Data 01", "column4": "가나다라마바사아자차", "column5": "", "column6": "", "column7": "Button", "column8": "홍길동", "column9": "20191101", "column10": "3"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1660px)", "default");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1659px)", "tablet");
			app.supportMedia("all and (max-width: 1023px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.userAttr({"useConstraintHintMode": "true"});
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.leftMargin = 20;
			verticalLayout_1.rightMargin = 20;
			verticalLayout_1.topMargin = 20;
			verticalLayout_1.bottomMargin = 20;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "DESIGN GUIDE";
			output_1.style.setClasses(["program-title", "current", "h4"]);
			container.addChild(output_1, {
				"width": "100px",
				"height": "30px"
			});
			
			var output_2 = new cpr.controls.Output("opt2");
			output_2.value = "INPUT GROUPS";
			output_2.style.setClasses(["sub-title-1"]);
			container.addChild(output_2, {
				"width": "100px",
				"height": "20px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			group_1.userAttr({"useConstraintHintMode": "true"});
			group_1.style.setClasses(["cl-form-group"]);
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["100px", "1fr", "1fr", "1fr"]);
			formLayout_1.setUseColumnShade(0, true);
			formLayout_1.setRows(["30px", "30px", "30px", "30px", "30px", "30px", "30px", "50px"]);
			formLayout_1.setUseRowShade(0, true);
			formLayout_1.setUseRowShade(1, true);
			formLayout_1.setUseRowShade(3, true);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_3 = new cpr.controls.Output("opt15");
				output_3.value = "DEFAULT";
				container.addChild(output_3, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_4 = new cpr.controls.Output("opt16");
				output_4.value = "REQUIRED(class=required)";
				container.addChild(output_4, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_5 = new cpr.controls.Output("opt17");
				output_5.value = "DISABLED";
				container.addChild(output_5, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_6 = new cpr.controls.Output("opt3");
				output_6.value = "인풋박스";
				container.addChild(output_6, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				inputBox_1.value = "Edit";
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var inputBox_2 = new cpr.controls.InputBox("ipb2");
				inputBox_2.value = "Edit";
				inputBox_2.userAttr({"useClassHintMode": "true"});
				inputBox_2.style.setClasses(["required"]);
				container.addChild(inputBox_2, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var inputBox_3 = new cpr.controls.InputBox("ipb3");
				inputBox_3.enabled = false;
				inputBox_3.value = "Edit";
				container.addChild(inputBox_3, {
					"colIndex": 3,
					"rowIndex": 1
				});
				var output_7 = new cpr.controls.Output("opt4");
				output_7.value = "파일인풋";
				container.addChild(output_7, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var fileInput_1 = new cpr.controls.FileInput("fi1");
				container.addChild(fileInput_1, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var fileInput_2 = new cpr.controls.FileInput("fi2");
				fileInput_2.style.setClasses(["required"]);
				container.addChild(fileInput_2, {
					"colIndex": 2,
					"rowIndex": 2
				});
				var fileInput_3 = new cpr.controls.FileInput("fi3");
				fileInput_3.enabled = false;
				container.addChild(fileInput_3, {
					"colIndex": 3,
					"rowIndex": 2
				});
				var output_8 = new cpr.controls.Output("opt6");
				output_8.value = "마스크에디터";
				container.addChild(output_8, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var maskEditor_1 = new cpr.controls.MaskEditor("mse1");
				maskEditor_1.mask = "000-0000-0000";
				container.addChild(maskEditor_1, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var maskEditor_2 = new cpr.controls.MaskEditor("mse2");
				maskEditor_2.mask = "000-0000-0000";
				maskEditor_2.style.setClasses(["required"]);
				container.addChild(maskEditor_2, {
					"colIndex": 2,
					"rowIndex": 3
				});
				var maskEditor_3 = new cpr.controls.MaskEditor("mse3");
				maskEditor_3.enabled = false;
				maskEditor_3.mask = "000-0000-0000";
				container.addChild(maskEditor_3, {
					"colIndex": 3,
					"rowIndex": 3
				});
				var output_9 = new cpr.controls.Output("opt5");
				output_9.value = "넘버에디터";
				container.addChild(output_9, {
					"colIndex": 0,
					"rowIndex": 4
				});
				var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
				numberEditor_1.value = "10000";
				container.addChild(numberEditor_1, {
					"colIndex": 1,
					"rowIndex": 4
				});
				var numberEditor_2 = new cpr.controls.NumberEditor("nbe2");
				numberEditor_2.value = "10000";
				numberEditor_2.style.setClasses(["required"]);
				container.addChild(numberEditor_2, {
					"colIndex": 2,
					"rowIndex": 4
				});
				var numberEditor_3 = new cpr.controls.NumberEditor("nbe3");
				numberEditor_3.enabled = false;
				numberEditor_3.value = "10000";
				container.addChild(numberEditor_3, {
					"colIndex": 3,
					"rowIndex": 4
				});
				var output_10 = new cpr.controls.Output("opt7");
				output_10.value = "데이트인풋";
				container.addChild(output_10, {
					"colIndex": 0,
					"rowIndex": 5
				});
				var dateInput_1 = new cpr.controls.DateInput("dti1");
				dateInput_1.value = "20200101";
				container.addChild(dateInput_1, {
					"colIndex": 1,
					"rowIndex": 5
				});
				var dateInput_2 = new cpr.controls.DateInput("dti2");
				dateInput_2.value = "20200101";
				dateInput_2.style.setClasses(["required"]);
				container.addChild(dateInput_2, {
					"colIndex": 2,
					"rowIndex": 5
				});
				var dateInput_3 = new cpr.controls.DateInput("dti3");
				dateInput_3.enabled = false;
				dateInput_3.value = "20200101";
				container.addChild(dateInput_3, {
					"colIndex": 3,
					"rowIndex": 5
				});
				var output_11 = new cpr.controls.Output("opt8");
				output_11.value = "서치인풋";
				container.addChild(output_11, {
					"colIndex": 0,
					"rowIndex": 6
				});
				var searchInput_1 = new cpr.controls.SearchInput();
				searchInput_1.value = "Edit";
				container.addChild(searchInput_1, {
					"colIndex": 1,
					"rowIndex": 6
				});
				var searchInput_2 = new cpr.controls.SearchInput();
				searchInput_2.value = "Edit";
				searchInput_2.style.setClasses(["required"]);
				container.addChild(searchInput_2, {
					"colIndex": 2,
					"rowIndex": 6
				});
				var searchInput_3 = new cpr.controls.SearchInput();
				searchInput_3.enabled = false;
				searchInput_3.value = "Edit";
				container.addChild(searchInput_3, {
					"colIndex": 3,
					"rowIndex": 6
				});
				var output_12 = new cpr.controls.Output("opt9");
				output_12.value = "텍스트에리어";
				container.addChild(output_12, {
					"colIndex": 0,
					"rowIndex": 7
				});
				var textArea_1 = new cpr.controls.TextArea("txa1");
				container.addChild(textArea_1, {
					"colIndex": 1,
					"rowIndex": 7
				});
				var textArea_2 = new cpr.controls.TextArea("txa2");
				textArea_2.style.setClasses(["required"]);
				container.addChild(textArea_2, {
					"colIndex": 2,
					"rowIndex": 7
				});
				var textArea_3 = new cpr.controls.TextArea("txa3");
				textArea_3.enabled = false;
				container.addChild(textArea_3, {
					"colIndex": 3,
					"rowIndex": 7
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "400px",
				"height": "342px"
			});
			
			var output_13 = new cpr.controls.Output("opt10");
			output_13.value = "SELECTION GROUP";
			output_13.style.setClasses(["sub-title-1"]);
			container.addChild(output_13, {
				"autoSize": "none",
				"width": "1620px",
				"height": "20px"
			});
			
			var group_2 = new cpr.controls.Container("grp2");
			group_2.style.setClasses(["cl-form-group"]);
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.topMargin = "5px";
			formLayout_2.rightMargin = "5px";
			formLayout_2.bottomMargin = "5px";
			formLayout_2.leftMargin = "5px";
			formLayout_2.horizontalSpacing = "10px";
			formLayout_2.verticalSpacing = "10px";
			formLayout_2.horizontalSeparatorWidth = 1;
			formLayout_2.verticalSeparatorWidth = 1;
			formLayout_2.setColumns(["100px", "1fr", "1fr", "1fr"]);
			formLayout_2.setUseColumnShade(0, true);
			formLayout_2.setRows(["30px", "30px", "30px", "55px", "55px"]);
			formLayout_2.setUseRowShade(0, true);
			group_2.setLayout(formLayout_2);
			(function(container){
				var output_14 = new cpr.controls.Output("opt18");
				output_14.value = "DEFAULT";
				container.addChild(output_14, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_15 = new cpr.controls.Output("opt19");
				output_15.value = "REQUIRED(class=required)";
				container.addChild(output_15, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_16 = new cpr.controls.Output("opt20");
				output_16.value = "DISABLED";
				container.addChild(output_16, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_17 = new cpr.controls.Output("opt11");
				output_17.value = "콤보박스";
				container.addChild(output_17, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var comboBox_1 = new cpr.controls.ComboBox("cmb1");
				(function(comboBox_1){
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var comboBox_2 = new cpr.controls.ComboBox("cmb2");
				comboBox_2.userAttr({"useClassHintMode": "true"});
				comboBox_2.style.setClasses(["required"]);
				(function(comboBox_2){
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var comboBox_3 = new cpr.controls.ComboBox("cmb3");
				comboBox_3.enabled = false;
				(function(comboBox_3){
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"colIndex": 3,
					"rowIndex": 1
				});
				var output_18 = new cpr.controls.Output("opt12");
				output_18.value = "체크박스";
				container.addChild(output_18, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var checkBox_1 = new cpr.controls.CheckBox("cbx1");
				checkBox_1.text = "Check";
				container.addChild(checkBox_1, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var checkBox_2 = new cpr.controls.CheckBox("cbx2");
				checkBox_2.text = "Check";
				checkBox_2.style.setClasses(["required"]);
				container.addChild(checkBox_2, {
					"colIndex": 2,
					"rowIndex": 2
				});
				var group_3 = new cpr.controls.Container("grp3");
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.setColumns(["1fr", "1fr"]);
				formLayout_3.setRows(["1fr"]);
				group_3.setLayout(formLayout_3);
				(function(container){
					var checkBox_3 = new cpr.controls.CheckBox("cbx3");
					checkBox_3.enabled = false;
					checkBox_3.text = "Check";
					container.addChild(checkBox_3, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var checkBox_4 = new cpr.controls.CheckBox("cbx4");
					checkBox_4.enabled = false;
					checkBox_4.value = "true";
					checkBox_4.text = "Check";
					container.addChild(checkBox_4, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 3,
					"rowIndex": 2
				});
				var output_19 = new cpr.controls.Output("opt13");
				output_19.value = "체크박스그룹";
				container.addChild(output_19, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var checkBoxGroup_1 = new cpr.controls.CheckBoxGroup("cbg1");
				checkBoxGroup_1.values = ["value2"];
				checkBoxGroup_1.colCount = 3;
				(function(checkBoxGroup_1){
					checkBoxGroup_1.addItem(new cpr.controls.Item("label1", "value1"));
					checkBoxGroup_1.addItem(new cpr.controls.Item("label2", "value2"));
					checkBoxGroup_1.addItem(new cpr.controls.Item("label3", "value3"));
					checkBoxGroup_1.addItem(new cpr.controls.Item("label4", "value4"));
					checkBoxGroup_1.addItem(new cpr.controls.Item("label5", "value5"));
				})(checkBoxGroup_1);
				container.addChild(checkBoxGroup_1, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var checkBoxGroup_2 = new cpr.controls.CheckBoxGroup("cbg2");
				checkBoxGroup_2.colCount = 3;
				checkBoxGroup_2.userAttr({"useClassHintMode": "true"});
				checkBoxGroup_2.style.setClasses(["required"]);
				(function(checkBoxGroup_2){
					checkBoxGroup_2.addItem(new cpr.controls.Item("label1", "value1"));
					checkBoxGroup_2.addItem(new cpr.controls.Item("label2", "value2"));
					checkBoxGroup_2.addItem(new cpr.controls.Item("label3", "value3"));
					checkBoxGroup_2.addItem(new cpr.controls.Item("label4", "value4"));
					checkBoxGroup_2.addItem(new cpr.controls.Item("label5", "value5"));
				})(checkBoxGroup_2);
				container.addChild(checkBoxGroup_2, {
					"colIndex": 2,
					"rowIndex": 3
				});
				var checkBoxGroup_3 = new cpr.controls.CheckBoxGroup("cbg3");
				checkBoxGroup_3.values = ["value2"];
				checkBoxGroup_3.enabled = false;
				checkBoxGroup_3.colCount = 3;
				(function(checkBoxGroup_3){
					checkBoxGroup_3.addItem(new cpr.controls.Item("label1", "value1"));
					checkBoxGroup_3.addItem(new cpr.controls.Item("label2", "value2"));
					checkBoxGroup_3.addItem(new cpr.controls.Item("label3", "value3"));
					checkBoxGroup_3.addItem(new cpr.controls.Item("label4", "value4"));
					checkBoxGroup_3.addItem(new cpr.controls.Item("label5", "value5"));
				})(checkBoxGroup_3);
				container.addChild(checkBoxGroup_3, {
					"colIndex": 3,
					"rowIndex": 3
				});
				var output_20 = new cpr.controls.Output("opt14");
				output_20.value = "라디오버튼";
				container.addChild(output_20, {
					"colIndex": 0,
					"rowIndex": 4
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdb1");
				radioButton_1.value = "value2";
				radioButton_1.colCount = 3;
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("label1", "value1"));
					radioButton_1.addItem(new cpr.controls.Item("label2", "value2"));
					radioButton_1.addItem(new cpr.controls.Item("label3", "value3"));
					radioButton_1.addItem(new cpr.controls.Item("label4", "value4"));
					radioButton_1.addItem(new cpr.controls.Item("label5", "value5"));
				})(radioButton_1);
				container.addChild(radioButton_1, {
					"colIndex": 1,
					"rowIndex": 4
				});
				var radioButton_2 = new cpr.controls.RadioButton("rdb2");
				radioButton_2.value = "value2";
				radioButton_2.colCount = 3;
				radioButton_2.style.setClasses(["required"]);
				(function(radioButton_2){
					radioButton_2.addItem(new cpr.controls.Item("label1", "value1"));
					radioButton_2.addItem(new cpr.controls.Item("label2", "value2"));
					radioButton_2.addItem(new cpr.controls.Item("label3", "value3"));
					radioButton_2.addItem(new cpr.controls.Item("label4", "value4"));
					radioButton_2.addItem(new cpr.controls.Item("label5", "value5"));
				})(radioButton_2);
				container.addChild(radioButton_2, {
					"colIndex": 2,
					"rowIndex": 4
				});
				var radioButton_3 = new cpr.controls.RadioButton("rdb3");
				radioButton_3.enabled = false;
				radioButton_3.value = "value2";
				radioButton_3.colCount = 3;
				(function(radioButton_3){
					radioButton_3.addItem(new cpr.controls.Item("label1", "value1"));
					radioButton_3.addItem(new cpr.controls.Item("label2", "value2"));
					radioButton_3.addItem(new cpr.controls.Item("label3", "value3"));
					radioButton_3.addItem(new cpr.controls.Item("label4", "value4"));
					radioButton_3.addItem(new cpr.controls.Item("label5", "value5"));
				})(radioButton_3);
				container.addChild(radioButton_3, {
					"colIndex": 3,
					"rowIndex": 4
				});
			})(group_2);
			container.addChild(group_2, {
				"width": "400px",
				"height": "252px"
			});
			
			var output_21 = new cpr.controls.Output("opt21");
			output_21.value = "GRID";
			output_21.style.setClasses(["sub-title-1"]);
			container.addChild(output_21, {
				"autoSize": "none",
				"width": "1620px",
				"height": "20px"
			});
			
			var output_22 = new cpr.controls.Output("opt23");
			output_22.value = "* 좌측 헤더는 Detail 셀에 아웃풋을 배치하고 class를 grid-header 로 적용하여 사용할 수 있습니다.";
			output_22.style.setClasses(["text-danger"]);
			container.addChild(output_22, {
				"autoSize": "height",
				"width": "100px",
				"height": "25px"
			});
			
			var group_4 = new cpr.controls.Container("grp4");
			// Layout
			var formLayout_4 = new cpr.controls.layouts.FormLayout();
			formLayout_4.setColumns(["1fr", "130px", "80px", "80px"]);
			formLayout_4.setRows(["1fr"]);
			group_4.setLayout(formLayout_4);
			(function(container){
				var button_1 = new cpr.controls.Button("btnAdd");
				button_1.value = "행추가";
				button_1.style.setClasses(["btn-white"]);
				if(typeof onBtnAddClick == "function") {
					button_1.addEventListener("click", onBtnAddClick);
				}
				container.addChild(button_1, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var button_2 = new cpr.controls.Button("btnDelete");
				button_2.value = "행삭제";
				button_2.style.setClasses(["btn-white"]);
				if(typeof onBtnDeleteClick == "function") {
					button_2.addEventListener("click", onBtnDeleteClick);
				}
				container.addChild(button_2, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var checkBox_5 = new cpr.controls.CheckBox("cbx5");
				checkBox_5.text = "Grid Disabled";
				if(typeof onCbx5ValueChange == "function") {
					checkBox_5.addEventListener("value-change", onCbx5ValueChange);
				}
				container.addChild(checkBox_5, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_4);
			container.addChild(group_4, {
				"width": "400px",
				"height": "30px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.userAttr({"useGridHintMode": "true"});
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columnMovable": true,
				"autoFit": "2, 3, 4, 5, 6, 7, 8, 9, 10",
				"resizableColumns": "all",
				"collapsible": true,
				"columns": [
					{"width": "35px"},
					{"width": "50px"},
					{"width": "200px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "150px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "110px"}
				],
				"header": {
					"rows": [{"height": "35px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.columnType = "checkbox";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "순번";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "Tree Grid";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "Number";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "정형 Data";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "column4";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "비정형 Data";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.targetColumnName = "column5";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "Combo";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.targetColumnName = "column6";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "Edit";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.targetColumnName = "column7";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "Button";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.targetColumnName = "column8";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "등록자";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 10},
							"configurator": function(cell){
								cell.targetColumnName = "column9";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "등록일";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "35px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "checkbox";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column1";
								cell.control = (function(){
									var treeCell_1 = new cpr.controls.gridpart.renderer.TreeCell();
									treeCell_1.bind("level").toDataColumn("column10");
									treeCell_1.bind("value").toDataColumn("column1");
									return treeCell_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column2";
								cell.control = (function(){
									var numberEditor_4 = new cpr.controls.NumberEditor("nbe4");
									numberEditor_4.bind("value").toDataColumn("column2");
									return numberEditor_4;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "column3";
								cell.control = (function(){
									var inputBox_4 = new cpr.controls.InputBox("ipb4");
									inputBox_4.style.setClasses(["text-center"]);
									inputBox_4.bind("value").toDataColumn("column3");
									return inputBox_4;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "column4";
								cell.control = (function(){
									var inputBox_5 = new cpr.controls.InputBox("ipb5");
									inputBox_5.bind("value").toDataColumn("column4");
									return inputBox_5;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "column5";
								cell.control = (function(){
									var comboBox_4 = new cpr.controls.ComboBox("cmb4");
									(function(comboBox_4){
									})(comboBox_4);
									comboBox_4.bind("value").toDataColumn("column5");
									return comboBox_4;
								})();
								cell.controlConstraint = {
									"topSpacing": 3,
									"rightSpacing": 3,
									"bottomSpacing": 3,
									"leftSpacing": 3
								};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "column6";
								cell.control = (function(){
									var inputBox_6 = new cpr.controls.InputBox("ipb6");
									inputBox_6.bind("value").toDataColumn("column6");
									return inputBox_6;
								})();
								cell.controlConstraint = {
									"topSpacing": 3,
									"rightSpacing": 3,
									"bottomSpacing": 3,
									"leftSpacing": 3
								};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.columnName = "column7";
								cell.control = (function(){
									var button_3 = new cpr.controls.Button("btn1");
									button_3.style.setClasses(["btn-gray"]);
									button_3.bind("value").toDataColumn("column7");
									return button_3;
								})();
								cell.controlConstraint = {
									"topSpacing": 3,
									"rightSpacing": 3,
									"bottomSpacing": 3,
									"leftSpacing": 3
								};
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.columnName = "column8";
								cell.control = (function(){
									var output_23 = new cpr.controls.Output("opt22");
									output_23.style.setClasses(["text-center"]);
									output_23.bind("value").toDataColumn("column8");
									return output_23;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 10},
							"configurator": function(cell){
								cell.columnName = "column9";
								cell.control = (function(){
									var dateInput_4 = new cpr.controls.DateInput("dti4");
									dateInput_4.bind("value").toDataColumn("column9");
									return dateInput_4;
								})();
							}
						}
					]
				}
			});
			grid_1.bind("enabled").toExpression("#cbx5.checked ? false : true");
			container.addChild(grid_1, {
				"width": "400px",
				"height": "250px"
			});
			
			var group_5 = new cpr.controls.Container("grp8");
			group_5.userAttr({
				"useClassHintMode": "true",
				"useConstraintHintMode": "true"
			});
			group_5.style.setClasses(["cl-form-group", "required"]);
			// Layout
			var formLayout_5 = new cpr.controls.layouts.FormLayout();
			formLayout_5.topMargin = "5px";
			formLayout_5.rightMargin = "5px";
			formLayout_5.bottomMargin = "5px";
			formLayout_5.leftMargin = "5px";
			formLayout_5.horizontalSpacing = "10px";
			formLayout_5.verticalSpacing = "10px";
			formLayout_5.horizontalSeparatorWidth = 1;
			formLayout_5.verticalSeparatorWidth = 1;
			formLayout_5.setColumns(["120px", "1fr"]);
			formLayout_5.setUseColumnShade(0, true);
			formLayout_5.setRows(["90px", "30px"]);
			formLayout_5.setRowAutoSizing(0, true);
			group_5.setLayout(formLayout_5);
			(function(container){
				var output_24 = new cpr.controls.Output("opt46");
				output_24.value = "[필수안내사항]";
				output_24.style.setClasses(["align-top", "fw-bold", "h5", "text-base"]);
				container.addChild(output_24, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_25 = new cpr.controls.Output("opt47");
				output_25.value = "[주의사항]";
				output_25.style.setClasses(["align-top", "fw-bold", "h5", "text-base"]);
				container.addChild(output_25, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_26 = new cpr.controls.Output("opt49");
				output_26.value = "\u2022 필터설정시Data 의저장은소모성물품목록에표시되어있는Data 만저장됩니다.";
				container.addChild(output_26, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var group_6 = new cpr.controls.Container("grp9");
				// Layout
				var formLayout_6 = new cpr.controls.layouts.FormLayout();
				formLayout_6.setColumns(["1fr"]);
				formLayout_6.setRows(["30px", "30px", "30px"]);
				group_6.setLayout(formLayout_6);
				(function(container){
					var output_27 = new cpr.controls.Output("opt50");
					output_27.value = "\u2022 작업요청서는 매일 00 : 00 ~ 15 : 00 까지만 등록 가능합니다.";
					container.addChild(output_27, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_28 = new cpr.controls.Output("opt51");
					output_28.value = "\u2022 오늘과 내일의 작업은 작업요청서에 등록할 수 없습니다.";
					container.addChild(output_28, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var output_29 = new cpr.controls.Output("opt52");
					output_29.value = "\u2022 작업은 시행 2일전까지 등록하여야하며 작업승인서 내용을 반드시확인하신 후 작업을 시행하시기바랍니다.";
					container.addChild(output_29, {
						"colIndex": 0,
						"rowIndex": 2
					});
				})(group_6);
				container.addChild(group_6, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_5);
			container.addChild(group_5, {
				"autoSize": "height",
				"width": "400px",
				"height": "142px"
			});
			
			var output_30 = new cpr.controls.Output("opt24");
			output_30.value = "00 건이 정상적으로 조회되었습니다.";
			output_30.style.setClasses(["unit-info"]);
			container.addChild(output_30, {
				"width": "100px",
				"height": "30px"
			});
			
			var output_31 = new cpr.controls.Output("opt25");
			output_31.value = "BUTTON";
			output_31.style.setClasses(["sub-title-1"]);
			container.addChild(output_31, {
				"autoSize": "none",
				"width": "1620px",
				"height": "20px"
			});
			
			var group_7 = new cpr.controls.Container("grp5");
			group_7.style.setClasses(["cl-form-group"]);
			// Layout
			var formLayout_7 = new cpr.controls.layouts.FormLayout();
			formLayout_7.topMargin = "5px";
			formLayout_7.rightMargin = "5px";
			formLayout_7.bottomMargin = "5px";
			formLayout_7.leftMargin = "5px";
			formLayout_7.horizontalSpacing = "10px";
			formLayout_7.verticalSpacing = "10px";
			formLayout_7.horizontalSeparatorWidth = 1;
			formLayout_7.verticalSeparatorWidth = 1;
			formLayout_7.setColumns(["100px", "100px", "1fr"]);
			formLayout_7.setUseColumnShade(0, true);
			formLayout_7.setRows(["30px", "30px", "30px", "30px", "30px", "30px", "30px", "30px", "30px"]);
			group_7.setLayout(formLayout_7);
			(function(container){
				var output_32 = new cpr.controls.Output("opt31");
				output_32.value = "버튼";
				container.addChild(output_32, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var button_4 = new cpr.controls.Button("btn7");
				button_4.value = "Button";
				button_4.userAttr({"useClassHintMode": "true"});
				container.addChild(button_4, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_33 = new cpr.controls.Output("opt26");
				output_33.value = "조회 버튼";
				container.addChild(output_33, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var button_5 = new cpr.controls.Button("btn2");
				button_5.value = "조회";
				button_5.userAttr({"useClassHintMode": "true"});
				button_5.style.setClasses(["btn-search"]);
				container.addChild(button_5, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var output_34 = new cpr.controls.Output("opt27");
				output_34.value = "초기화 버튼";
				container.addChild(output_34, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var button_6 = new cpr.controls.Button("btn3");
				button_6.value = "";
				button_6.userAttr({"useClassHintMode": "true"});
				button_6.style.setClasses(["btn-reset"]);
				container.addChild(button_6, {
					"colIndex": 1,
					"rowIndex": 2,
					"horizontalAlign": "left",
					"width": 30
				});
				var output_35 = new cpr.controls.Output("opt28");
				output_35.value = "CRUD 버튼";
				container.addChild(output_35, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var button_7 = new cpr.controls.Button("btn5");
				button_7.value = "저장";
				button_7.userAttr({"useClassHintMode": "true"});
				button_7.style.setClasses(["btn-dark"]);
				container.addChild(button_7, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var output_36 = new cpr.controls.Output("opt29");
				output_36.value = "업무 버튼";
				container.addChild(output_36, {
					"colIndex": 0,
					"rowIndex": 4
				});
				var button_8 = new cpr.controls.Button("btn4");
				button_8.value = "커스텀";
				button_8.userAttr({"useClassHintMode": "false"});
				button_8.style.setClasses(["btn-secondary"]);
				container.addChild(button_8, {
					"colIndex": 1,
					"rowIndex": 4
				});
				var output_37 = new cpr.controls.Output("opt30");
				output_37.value = "Popup 버튼";
				container.addChild(output_37, {
					"colIndex": 0,
					"rowIndex": 5
				});
				var button_9 = new cpr.controls.Button("btn6");
				button_9.value = "확인";
				button_9.userAttr({"useClassHintMode": "true"});
				button_9.style.setClasses(["btn-popup"]);
				container.addChild(button_9, {
					"colIndex": 1,
					"rowIndex": 5
				});
				var output_38 = new cpr.controls.Output("opt32");
				output_38.value = "공통 버튼";
				container.addChild(output_38, {
					"colIndex": 0,
					"rowIndex": 6
				});
				var button_10 = new cpr.controls.Button("btn8");
				button_10.value = "행추가";
				button_10.userAttr({"useClassHintMode": "true"});
				button_10.style.setClasses(["btn-white"]);
				container.addChild(button_10, {
					"colIndex": 1,
					"rowIndex": 6
				});
				var output_39 = new cpr.controls.Output("opt33");
				output_39.value = "내부 버튼";
				container.addChild(output_39, {
					"colIndex": 0,
					"rowIndex": 7
				});
				var button_11 = new cpr.controls.Button("btn9");
				button_11.value = "파일첨부";
				button_11.userAttr({"useClassHintMode": "true"});
				button_11.style.setClasses(["btn-gray"]);
				container.addChild(button_11, {
					"colIndex": 1,
					"rowIndex": 7
				});
				var output_40 = new cpr.controls.Output("opt35");
				output_40.value = "내부 버튼";
				container.addChild(output_40, {
					"colIndex": 0,
					"rowIndex": 8
				});
				var button_12 = new cpr.controls.Button("btn10");
				button_12.value = "◀";
				button_12.userAttr({"useClassHintMode": "true"});
				button_12.style.setClasses(["btn-etc"]);
				container.addChild(button_12, {
					"colIndex": 1,
					"rowIndex": 8,
					"horizontalAlign": "left",
					"width": 30
				});
				var output_41 = new cpr.controls.Output("opt36");
				output_41.value = "기본 버튼";
				container.addChild(output_41, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_42 = new cpr.controls.Output("opt37");
				output_42.value = "데이터 조회 버튼";
				container.addChild(output_42, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var output_43 = new cpr.controls.Output("opt38");
				output_43.value = "조회 항목 초기화 버튼";
				container.addChild(output_43, {
					"colIndex": 2,
					"rowIndex": 2
				});
				var output_44 = new cpr.controls.Output("opt39");
				output_44.value = "특정 CRUD는 .btn-insert, .btn-save, .btn-delete, btn-print 적용 가능(스타일은 동일)";
				output_44.style.setClasses(["text-danger", "fw-medium"]);
				container.addChild(output_44, {
					"colIndex": 2,
					"rowIndex": 3
				});
				var output_45 = new cpr.controls.Output("opt40");
				output_45.value = "화면 전체에 해당하는 업무와 관련된 버튼";
				container.addChild(output_45, {
					"colIndex": 2,
					"rowIndex": 4
				});
				var output_46 = new cpr.controls.Output("opt41");
				output_46.value = "다이얼로그(팝업)에서 쓰이는 버튼";
				container.addChild(output_46, {
					"colIndex": 2,
					"rowIndex": 5
				});
				var output_47 = new cpr.controls.Output("opt42");
				output_47.value = "그리드 또는 모듈의 공통/커스텀 버튼";
				container.addChild(output_47, {
					"colIndex": 2,
					"rowIndex": 6
				});
				var output_48 = new cpr.controls.Output("opt43");
				output_48.value = "그리드 또는 프리폼 내부에 사용되는 버튼 스타일";
				container.addChild(output_48, {
					"colIndex": 2,
					"rowIndex": 7
				});
				var output_49 = new cpr.controls.Output("opt44");
				output_49.value = "기타 업무 버튼";
				container.addChild(output_49, {
					"colIndex": 2,
					"rowIndex": 8
				});
			})(group_7);
			container.addChild(group_7, {
				"autoSize": "height",
				"width": "222px",
				"height": "362px"
			});
			
			var output_50 = new cpr.controls.Output("opt34");
			output_50.value = "DIALOG";
			output_50.style.setClasses(["sub-title-1"]);
			container.addChild(output_50, {
				"autoSize": "none",
				"width": "1620px",
				"height": "20px"
			});
			
			var group_8 = new cpr.controls.Container("grp6");
			// Layout
			var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
			flowLayout_1.scrollable = false;
			group_8.setLayout(flowLayout_1);
			(function(container){
				var button_13 = new cpr.controls.Button("btnDialog");
				button_13.value = "팝업 열기";
				if(typeof onBtnDialogClick == "function") {
					button_13.addEventListener("click", onBtnDialogClick);
				}
				container.addChild(button_13, {
					"autoSize": "none",
					"width": "100px",
					"height": "30px"
				});
			})(group_8);
			container.addChild(group_8, {
				"width": "400px",
				"height": "30px"
			});
			
			var output_51 = new cpr.controls.Output("opt45");
			output_51.value = "MESSAGE(ALERT)";
			output_51.style.setClasses(["sub-title-1"]);
			container.addChild(output_51, {
				"autoSize": "none",
				"width": "1164px",
				"height": "20px"
			});
			
			var output_52 = new cpr.controls.Output("optAlert");
			output_52.value = "메세지 리턴 값(boolean)이 여기에 표시됩니다. 메시지를 열어 확인 또는 취소를 눌러 확인해보세요.";
			output_52.style.setClasses(["text-blue"]);
			container.addChild(output_52, {
				"autoSize": "none",
				"width": "100px",
				"height": "20px"
			});
			
			var group_9 = new cpr.controls.Container("grp7");
			// Layout
			var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
			flowLayout_2.scrollable = false;
			group_9.setLayout(flowLayout_2);
			(function(container){
				var button_14 = new cpr.controls.Button("btnAlert");
				button_14.value = "처리 메세지";
				button_14.userAttr({
					"alert-code": "process",
					"alert-msg": "선택한Data를삭제하시겠습니까?"
				});
				if(typeof onBtnAlertClick == "function") {
					button_14.addEventListener("click", onBtnAlertClick);
				}
				container.addChild(button_14, {
					"autoSize": "none",
					"width": "100px",
					"height": "30px"
				});
				var button_15 = new cpr.controls.Button("btnAlert2");
				button_15.value = "확인 메세지";
				button_15.userAttr({
					"alert-code": "confirm",
					"alert-msg": "처리되었습니다. 확인하시겠습니까?"
				});
				if(typeof onBtnAlertClick == "function") {
					button_15.addEventListener("click", onBtnAlertClick);
				}
				container.addChild(button_15, {
					"autoSize": "none",
					"width": "100px",
					"height": "30px"
				});
				var button_16 = new cpr.controls.Button("btnAlert3");
				button_16.value = "경고 메세지";
				button_16.userAttr({
					"alert-code": "warning",
					"alert-msg": "항목을 선택 후 조회해주세요."
				});
				if(typeof onBtnAlertClick == "function") {
					button_16.addEventListener("click", onBtnAlertClick);
				}
				container.addChild(button_16, {
					"autoSize": "none",
					"width": "100px",
					"height": "30px"
				});
				var button_17 = new cpr.controls.Button("btnAlert4");
				button_17.value = "정보 전달 메세지";
				button_17.userAttr({
					"alert-code": "info",
					"alert-msg": "해당 Data가 없습니다."
				});
				if(typeof onBtnAlertClick == "function") {
					button_17.addEventListener("click", onBtnAlertClick);
				}
				container.addChild(button_17, {
					"autoSize": "none",
					"width": "135px",
					"height": "30px"
				});
				var button_18 = new cpr.controls.Button("btnAlert5");
				button_18.value = "오류 메세지";
				button_18.userAttr({
					"alert-code": "danger",
					"alert-msg": "년월 변경 중 오류가 발생했습니다."
				});
				if(typeof onBtnAlertClick == "function") {
					button_18.addEventListener("click", onBtnAlertClick);
				}
				container.addChild(button_18, {
					"autoSize": "none",
					"width": "100px",
					"height": "30px"
				});
				var button_19 = new cpr.controls.Button("btnAlert6");
				button_19.value = "에러 메세지";
				button_19.userAttr({
					"alert-code": "error",
					"alert-msg": "에러코드: E-07090501"
				});
				if(typeof onBtnAlertClick == "function") {
					button_19.addEventListener("click", onBtnAlertClick);
				}
				container.addChild(button_19, {
					"autoSize": "none",
					"width": "100px",
					"height": "30px"
				});
			})(group_9);
			container.addChild(group_9, {
				"autoSize": "none",
				"width": "1164px",
				"height": "30px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "디자인 가이드";
	cpr.core.Platform.INSTANCE.register(app);
})();
