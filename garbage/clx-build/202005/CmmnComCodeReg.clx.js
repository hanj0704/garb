/*
 * App URI: 202005/CmmnComCodeReg
 * Source Location: 202005/CmmnComCodeReg.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202005/CmmnComCodeReg", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/*
			
			* FormID(명) : CmmnComCodeReg ( 공통코드 관리 )
			
			* 작성자     : BJ
			
			* 작성일     : 2019/10/25
			
			* 변경로그   : 전환
			
			*/
			
			// 01. 전처리 공통 함수 선언  --------------------------------------------------
			var util = createCommonUtil();
			util.showLoadMask(app);
			// 02. 폼 변수 정의 ------------------------------------------------------------
			var fboolSaveChk = true;		// 저장 체크 할지 유무 판단.
			
			// 03. 폼 로드 -----------------------------------------------------------------
			function CmmnComCodeReg_OnLoadCompleted(obj)
			{
				CommCodeLcdScdLoad();    // 대분류,중분류 콤보로딩
			}
			
			// 대분류 콤보로딩
			function CommCodeLcdScdLoad()
			{
				util.Submit.send(app, "subLOAD", null, function(pbSuccess){
					if(pbSuccess){
						util.SelectCtl.selectItem(app, "cb3", 2);	//조회구분 디폴트값 : 중분류
						util.SelectCtl.selectItem(app, "cb2", 0);
					}
				});
			}
			
			// 대분류를 선택시 중분류를 얻어온다.
			function cb2_OnChanged(/* cpr.events.CSelectionEvent */ e)
			{
				//대분류'전체'선택시 중분류 초기화
				var vsLcd = e.control.value;
				if(ValueUtil.isNull(vsLcd)){
					app.lookup("DS_MIDDLE").clear();
					util.SelectCtl.selectItem(app, "cb1", 0);
					return false;
				}
				
				//대분류코드값
				app.lookup("dmLcdParam").setValue("lcd", vsLcd);
				
				//중분류 로딩
				util.Submit.send(app, "subLOAD2", null, function(pbSuccess){
					if(pbSuccess){
						util.SelectCtl.selectItem(app, "cb1", 0);
					}
				});
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 * 
			 * selection-change
			 */
			function onCb3SelectionChange(/* cpr.events.CSelectionEvent */ e){
				var vsDiv = e.control.value;
				if(vsDiv != "2"){
					util.Control.setEnable(app, false, "cb1");
				}else{
					util.Control.setEnable(app, true, "cb1");
				}
				app.lookup("cb2").value = "";
				app.lookup("cb1").value = "";
				util.Control.redraw(app, "cb2");
				util.Control.redraw(app, "cb1");
			}
			
			// 04. 조회 함수 선언  ---------------------------------------------------------
			// 조회 실행
			function menuFind(psStatus)
			{
				if(psStatus != "save"){
					//1. 데이터 변경사항 체크
					if (util.Grid.isModified(app, ["gdMain", "gdDtl"], "CRM")) {
						return false;
					}
				}
				
				app.lookup("DS_CMMN010DTL").clear();
				app.lookup("DS_CMMN010").clear();
				
				//2. 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return false;
			
				//3. 데이터 조회
				util.Submit.send(app, "subFIND", null, function(pbSuccess){
					if(pbSuccess) {
						var DS_CMMN010 = app.lookup("DS_CMMN010");
						if(DS_CMMN010.getRowCount() < 1){
							//조회된 내역이 없습니다.
							util.Msg.notify(app, "INF-M004");
						}else if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005", null, true);
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}
						
						util.Control.setEnable(app, true, "grp3");
					}
				});	
			}
			
			/*
			 * 그리드에서 before-selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택되기 전에 발생하는 이벤트.
			 * 
			 * before-selection-change
			 */
			function onGdMainBeforeSelectionChange(/* cpr.events.CSelectionEvent */ e){
				//데이터 변경사항 체크
				if (util.Grid.isModified(app, "gdDtl", "CRM")) {
					e.preventDefault();
				}
			}
			
			// 상세조회 실행
			function onGdMainSelectionChange(/* cpr.events.CSelectionEvent */ e){
				
				var DS_CMMN010 = app.lookup("DS_CMMN010");
				var rowIndex = app.lookup("gdMain").getSelectedRowIndex();
				//신규행일경우 상세조회X
				var vsState = DS_CMMN010.getRowState(rowIndex);
				if(vsState == cpr.data.tabledata.RowState.INSERTED){
					return false;
				}
				
				//데이터 변경사항 체크
				if (util.Grid.isModified(app, "gdMain", "CRM")) {
					app.lookup("gdMain").selectRows(e.oldSelection, false);
					return false;
				}
			
				app.lookup("DS_CMMN010").revert();
				
				app.lookup("DS_CMMN010DTL").clear();
				
				var strLcd = DS_CMMN010.getValue(rowIndex, "SCD"); 
				var strCommCd = DS_CMMN010.getValue(rowIndex, "COMM_CD"); 
				app.lookup("dmParamDtl").setValue("lcd", strLcd);
				app.lookup("dmParamDtl").setValue("commCd", strCommCd);
				
				util.Submit.send(app, "subFIND2", null, function(pbSuccess){
					if(pbSuccess) {
						util.Control.setEnable(app, true, "grp3");
					}
				});	
			}
			
			/*
			 * 그리드에서 update 이벤트 발생 시 호출.
			 * Grid의 행 데이터가 수정되었을 때 이벤트.
			 */
			function onGdMainUpdate(/* cpr.events.CGridEvent */ e){
				var DS_CMMN010 = app.lookup("DS_CMMN010");
				var rowIndex = app.lookup("gdMain").getSelectedRowIndex();
				var vsState = DS_CMMN010.getRowState(rowIndex);
				//데이터 변경시 하위그리드 막아준다.
				if(vsState != cpr.data.tabledata.RowState.UNCHANGED){
					util.Control.setEnable(app, false, "grp3");
				}
			}
			
			// 05. 추가 함수 선언  ---------------------------------------------------------
			// 추가 버튼 실행
			function menuAdd(/* cpr.events.CGridEvent */ e)
			{
				app.lookup("DS_CMMN010DTL").clear();
				util.Control.redraw(app, "grp3");
				var DS_CMMN010 = app.lookup("DS_CMMN010");
				
				//선택된 조회구분값
				var fCheckCode = util.SelectCtl.getItemValue(app, "cb3", util.SelectCtl.getSelectedIndex(app, "cb3"));
				//대표코드 SYS, 세부코드 (MAx+1) 로 세팅
				if (fCheckCode == "1") {
					var Max = DS_CMMN010.getMax("SCD");
					DS_CMMN010.setValue(e.rowIndex, "SCD", parseInt(Max)+1);
					DS_CMMN010.setValue(e.rowIndex, "LCD", "SYS");
					
					DS_CMMN010.setValue(e.rowIndex, "COMM_CD", "SYS"+(parseInt(Max)+1));
			
				}
				//대표코드 이전행의 코드로 세팅
				else if (fCheckCode == "2") {
					var vsLcdValue="";
					if(e.rowIndex > -1){
						vsLcdValue = DS_CMMN010.getValue((e.rowIndex-1), "LCD");
					}
					DS_CMMN010.setValue(e.rowIndex, "LCD", vsLcdValue);
					DS_CMMN010.setValue(e.rowIndex, "COMM_CD", vsLcdValue);
				}
				
				DS_CMMN010.setValue(e.rowIndex, "USE_FG", "Y");
				DS_CMMN010.setValue(e.rowIndex, "CAMP_FG", "0");
				
				util.Control.setEnable(app, false, "grp3");
			}
			
			/*
			 * 사용자 정의 컨트롤에서 insert 이벤트 발생 시 호출.
			 * 신규 클릭 이벤트
			 * 
			 */
			function onUdcComButtonInsert(/* cpr.events.CGridEvent */ e){
				var DS_CMMN010 = app.lookup("DS_CMMN010");
				var rowIndex = util.Grid.getIndex(app, "gdMain");
				
				var DS_CMMN010DTL = app.lookup("DS_CMMN010DTL");
				
				var fCheckCode = util.SelectCtl.getItemValue(app, "cb3", util.SelectCtl.getSelectedIndex(app, "cb3"));
				//대표코드 이전행의 코드로 세팅
				if(fCheckCode == 1){
					var vsLcdValue = DS_CMMN010.getValue(rowIndex, "SCD");
					DS_CMMN010DTL.setValue(e.rowIndex, "LCD", vsLcdValue);
					
					DS_CMMN010DTL.setValue(e.rowIndex, "COMM_CD", vsLcdValue);
				}
				//대표코드 이전행의 코드, 세부코드 (MAX+1) 로 세팅
				else if(fCheckCode == 2){
					var Max = DS_CMMN010DTL.getMax("SCD");
					var vsScdValue = "";
					if(!ValueUtil.isNull(Max) && isFinite(Max)){
						vsScdValue = parseInt(Max)+1;
					}
					DS_CMMN010DTL.setValue(e.rowIndex, "SCD", vsScdValue);
					
					var vsLcdValue = DS_CMMN010.getValue(rowIndex, "SCD");
					DS_CMMN010DTL.setValue(e.rowIndex, "LCD", vsLcdValue);
					
					DS_CMMN010DTL.setValue(e.rowIndex, "COMM_CD", vsLcdValue+""+vsScdValue);
					
					DS_CMMN010DTL.setValue(e.rowIndex, "USE_FG", "Y");
					DS_CMMN010DTL.setValue(e.rowIndex, "CAMP_FG", "0");
				}
				
				//상위코드 세팅
				var vsUpCd = DS_CMMN010.getValue(rowIndex, "COMM_CD");
				DS_CMMN010DTL.setValue(e.rowIndex, "UP_CD", vsUpCd);
			}
			
			// 06. 삭제 함수 선언  ---------------------------------------------------------
			// 삭제 버튼 실행
			function menuDelete(/* cpr.event.CUIEvent */ e)
			{
				//삭제 하시겠습니까?
				if(!util.Msg.confirm("CRM-M002")){
					return false;
				}
			}
			
			/*
			 * 사용자 정의 컨트롤에서 beforeDelete 이벤트 발생 시 호출.
			 * 삭제버튼 클릭전 호출 이벤트(행 삭제전에 체크할 비지니스 로직이 있는 경우 사용)
			 */
			function onUdcComButtonBeforeDelete(/* cpr.events.CUIEvent */ e){
				//삭제 하시겠습니까?
				if(!util.Msg.confirm("CRM-M002")){
					return false;
				}
			}
			
			// 07. 저장 함수 선언  ---------------------------------------------------------
			function menuSave()
			{
				// 그리드의 변경사항 유/무를 반환
				if (!util.Grid.isModified(app, ["gdMain", "gdDtl"], "MSG")) {
					util.Msg.notify(app, "INF-M006");
					return false;
				}
				
				//저장 하시겠습니까?
				if(!util.Msg.confirm("CRM-M001")){
					return false;
				}
				
				// 그리드 유효성 검증
				if(!util.validate(app, ["gdMain", "gdDtl"])) return false;
			
				// 저장 서브미션 호출
				util.Submit.send(app, "subSAVE", null, function(pbSuccess){
					if(pbSuccess) {
						
						var vsFindRowKey1 = app.lookup("dmfind").getValue("strFindRowKey1");
						if(!ValueUtil.isNull(vsFindRowKey1)){ 
							util.Grid.setFindRowCondition(app, "gdMain",vsFindRowKey1);
							app.lookup("dmfind").setValue("strFindRowKey1", "");
						}
						
						var vsFindRowKey2 = app.lookup("dmfind").getValue("strFindRowKey2");
						if(!ValueUtil.isNull(vsFindRowKey2)){ 
							util.Grid.setFindRowCondition(app, "gdDtl",vsFindRowKey2);
							app.lookup("dmfind").setValue("strFindRowKey2", "");
						}
						
						menuFind("save");
					}
				});	
			}
			
			//대표코드, 세부코드 변경시  코드세팅
			function setCommCd(psGrid,psDs){
			
				var rowIndex = util.Grid.getIndex(app, psGrid);
				var DS_CMMN010 = app.lookup(psDs);
				
				var vsLcd = DS_CMMN010.getValue(rowIndex, "LCD");
				var vsScd = DS_CMMN010.getValue(rowIndex, "SCD");
			
				var rowState = util.Grid.getRowState(app, psGrid, rowIndex);
				if(rowState == cpr.data.tabledata.RowState.INSERTED){
					DS_CMMN010.setValue(rowIndex, "COMM_CD", vsLcd+""+vsScd);
				}
			}
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onEd2ValueChange(/* cpr.events.CValueChangeEvent */ e){
				setCommCd("gdMain","DS_CMMN010");
			}
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onEd3ValueChange(/* cpr.events.CValueChangeEvent */ e){
				setCommCd("gdMain","DS_CMMN010");
			}
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onEd15ValueChange(/* cpr.events.CValueChangeEvent */ e){
				setCommCd("gdDtl","DS_CMMN010DTL");
			}
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onEd16ValueChange(/* cpr.events.CValueChangeEvent */ e){
				setCommCd("gdDtl","DS_CMMN010DTL");
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("DS_LARGE");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "COMM_CD",
						"dataType": "string"
					},
					{
						"name": "COMM_NM",
						"dataType": "string"
					},
					{
						"name": "LCD",
						"dataType": "string"
					},
					{
						"name": "SCD",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("DS_MIDDLE");
			dataSet_2.parseData({
				"columns" : [
					{
						"name": "COMM_CD",
						"dataType": "string"
					},
					{
						"name": "COMM_NM",
						"dataType": "string"
					},
					{
						"name": "LCD",
						"dataType": "string"
					},
					{
						"name": "SCD",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("DS_CMMN010");
			dataSet_3.parseData({
				"info": "LCD,SCD,COMM_CD,COMM_NM",
				"columns": [
					{
						"name": "COMM_CD",
						"dataType": "string"
					},
					{
						"name": "COMM_NM",
						"dataType": "string"
					},
					{"name": "UP_LCD"},
					{
						"name": "LCD",
						"dataType": "string"
					},
					{
						"name": "SCD",
						"dataType": "string"
					},
					{"name": "UP_CD"},
					{"name": "UP_CD_NM"},
					{"name": "UNIT_SYS_RCD"},
					{"name": "UNIT_SYS_NM"},
					{
						"name": "COMM_SHTNM",
						"dataType": "string"
					},
					{
						"name": "REMK",
						"dataType": "string"
					},
					{
						"name": "COMM_ENGNM",
						"dataType": "string"
					},
					{
						"name": "COMM_NM2",
						"dataType": "string"
					},
					{
						"name": "COMM_NM3",
						"dataType": "string"
					},
					{
						"name": "ITEM1",
						"dataType": "string"
					},
					{
						"name": "ITEM2",
						"dataType": "string"
					},
					{
						"name": "ITEM3",
						"dataType": "string"
					},
					{
						"name": "ORD",
						"dataType": "string"
					},
					{
						"name": "USE_FG",
						"dataType": "string"
					},
					{
						"name": "CAMP_FG",
						"dataType": "string"
					},
					{
						"name": "INPT_DT",
						"dataType": "string"
					},
					{
						"name": "INPT_ID",
						"dataType": "string"
					},
					{
						"name": "IP_ADDR",
						"dataType": "string"
					},
					{
						"name": "UPDT_DT",
						"dataType": "string"
					},
					{
						"name": "UPDT_ID",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("RD_LCD");
			dataSet_4.parseData({
				"columns": [
					{
						"name": "cd",
						"dataType": "string"
					},
					{
						"name": "data",
						"dataType": "string"
					}
				],
				"rows": [
					{"cd": "1", "data": "대분류"},
					{"cd": "2", "data": "중분류"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("DS_CAMPFG");
			dataSet_5.parseData({
				"columns": [
					{
						"name": "cd",
						"dataType": "string"
					},
					{
						"name": "data",
						"dataType": "string"
					}
				],
				"rows": [
					{"cd": "0", "data": "공통"},
					{"cd": "1", "data": "서울"},
					{"cd": "2", "data": "충주"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("DS_USEFG");
			dataSet_6.parseData({
				"columns": [
					{
						"name": "cd",
						"dataType": "string"
					},
					{
						"name": "data",
						"dataType": "string"
					}
				],
				"rows": [
					{"cd": "Y", "data": "사용"},
					{"cd": "N", "data": "사용안함"}
				]
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("DS_CMMN010DTL");
			dataSet_7.parseData({
				"info": "LCD,SCD,COMM_CD,COMM_NM",
				"columns": [
					{
						"name": "COMM_CD",
						"dataType": "string"
					},
					{
						"name": "COMM_NM",
						"dataType": "string"
					},
					{"name": "UP_LCD"},
					{
						"name": "LCD",
						"dataType": "string"
					},
					{
						"name": "SCD",
						"dataType": "string"
					},
					{"name": "UP_CD"},
					{"name": "UP_CD_NM"},
					{"name": "UNIT_SYS_RCD"},
					{"name": "UNIT_SYS_NM"},
					{
						"name": "COMM_SHTNM",
						"dataType": "string"
					},
					{
						"name": "REMK",
						"dataType": "string"
					},
					{
						"name": "COMM_ENGNM",
						"dataType": "string"
					},
					{
						"name": "COMM_NM2",
						"dataType": "string"
					},
					{
						"name": "COMM_NM3",
						"dataType": "string"
					},
					{
						"name": "ITEM1",
						"dataType": "string"
					},
					{
						"name": "ITEM2",
						"dataType": "string"
					},
					{
						"name": "ITEM3",
						"dataType": "string"
					},
					{
						"name": "ORD",
						"dataType": "string"
					},
					{
						"name": "USE_FG",
						"dataType": "string"
					},
					{
						"name": "CAMP_FG",
						"dataType": "string"
					},
					{
						"name": "INPT_DT",
						"dataType": "string"
					},
					{
						"name": "INPT_ID",
						"dataType": "string"
					},
					{
						"name": "IP_ADDR",
						"dataType": "string"
					},
					{
						"name": "UPDT_DT",
						"dataType": "string"
					},
					{
						"name": "UPDT_ID",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmLcdParam");
			dataMap_1.parseData({
				"columns" : [{"name": "lcd"}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmParam");
			dataMap_2.parseData({
				"columns" : [
					{"name": "div"},
					{"name": "lLcd"},
					{"name": "mLcd"},
					{"name": "commNm"}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmParamDtl");
			dataMap_3.parseData({
				"columns" : [
					{"name": "lcd"},
					{"name": "commCd"}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmfind");
			dataMap_4.parseData({
				"columns" : [
					{"name": "strFindRowKey1"},
					{"name": "strFindRowKey2"}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subLOAD");
			submission_1.action = "/CmmnComCodeReg/load.do";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subLOAD2");
			submission_2.action = "/CmmnComCodeReg/load2.do";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subFIND");
			submission_3.action = "/CmmnComCodeReg/find.do";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataSet_3, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subFIND2");
			submission_4.action = "/CmmnComCodeReg/find2.do";
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataSet_7, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSAVE");
			submission_5.action = "/CmmnComCodeReg/save.do";
			submission_5.addRequestData(dataSet_3);
			submission_5.addRequestData(dataSet_7);
			submission_5.addResponseData(dataMap_4, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1320px)", "kuis");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			group_1.style.setClasses(["header-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.appHeader("appHeader");
				if(typeof menuFind == "function") {
					userDefinedControl_1.addEventListener("search", menuFind);
				}
				if(typeof menuAdd == "function") {
					userDefinedControl_1.addEventListener("insert", menuAdd);
				}
				if(typeof menuDelete == "function") {
					userDefinedControl_1.addEventListener("beforeDelete", menuDelete);
				}
				if(typeof menuSave == "function") {
					userDefinedControl_1.addEventListener("save", menuSave);
				}
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"right": "5px",
					"left": "5px",
					"height": "20px"
				});
				var group_2 = new cpr.controls.Container("grpSearch");
				group_2.style.setClasses(["search-box"]);
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "5px";
				formLayout_1.rightMargin = "5px";
				formLayout_1.bottomMargin = "5px";
				formLayout_1.leftMargin = "5px";
				formLayout_1.setColumns(["80px", "100px", "80px", "150px", "80px", "150px", "100px", "150px", "100px", "100px", "1fr", "1fr"]);
				formLayout_1.setRows(["20px"]);
				group_2.setLayout(formLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output("Static7");
					output_1.value = "조회구분";
					output_1.style.setClasses(["require"]);
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_2 = new cpr.controls.Output("st1");
					output_2.value = "대분류";
					container.addChild(output_2, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var output_3 = new cpr.controls.Output("st2");
					output_3.value = "중분류";
					container.addChild(output_3, {
						"colIndex": 4,
						"rowIndex": 0
					});
					var comboBox_1 = new cpr.controls.ComboBox("cb2");
					comboBox_1.fieldLabel = "대분류";
					comboBox_1.tabIndex = 6;
					comboBox_1.preventInput = true;
					comboBox_1.style.css({
						"background-color" : "#FFFFFF",
						"vertical-align" : "top"
					});
					comboBox_1.bind("value").toDataMap(app.lookup("dmParam"), "lLcd");
					(function(comboBox_1){
						comboBox_1.addItem(new cpr.controls.Item("전체", ""));
						comboBox_1.setItemSet(app.lookup("DS_LARGE"), {
							"label": "COMM_NM",
							"value": "SCD"
						});
					})(comboBox_1);
					if(typeof cb2_OnChanged == "function") {
						comboBox_1.addEventListener("value-change", cb2_OnChanged);
					}
					if(typeof cb2_OnChanged == "function") {
						comboBox_1.addEventListener("selection-change", cb2_OnChanged);
					}
					container.addChild(comboBox_1, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var comboBox_2 = new cpr.controls.ComboBox("cb1");
					comboBox_2.fieldLabel = "중분류";
					comboBox_2.tabIndex = 5;
					comboBox_2.preventInput = true;
					comboBox_2.style.css({
						"vertical-align" : "top"
					});
					comboBox_2.bind("value").toDataMap(app.lookup("dmParam"), "mLcd");
					(function(comboBox_2){
						comboBox_2.addItem(new cpr.controls.Item("전체", ""));
						comboBox_2.setItemSet(app.lookup("DS_MIDDLE"), {
							"label": "COMM_NM",
							"value": "SCD"
						});
					})(comboBox_2);
					if(typeof cb1_OnChanged == "function") {
						comboBox_2.addEventListener("value-change", cb1_OnChanged);
					}
					if(typeof cb1_OnChanged == "function") {
						comboBox_2.addEventListener("selection-change", cb1_OnChanged);
					}
					container.addChild(comboBox_2, {
						"colIndex": 5,
						"rowIndex": 0
					});
					var comboBox_3 = new cpr.controls.ComboBox("cb3");
					comboBox_3.fieldLabel = "조회구분";
					comboBox_3.preventInput = true;
					comboBox_3.userAttr({"required": "Y"});
					comboBox_3.bind("value").toDataMap(app.lookup("dmParam"), "div");
					(function(comboBox_3){
						comboBox_3.addItem(new cpr.controls.Item("선택", ""));
						comboBox_3.setItemSet(app.lookup("RD_LCD"), {
							"label": "data",
							"value": "cd"
						});
					})(comboBox_3);
					if(typeof onCb3SelectionChange == "function") {
						comboBox_3.addEventListener("selection-change", onCb3SelectionChange);
					}
					container.addChild(comboBox_3, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "코드/코드명";
					container.addChild(output_4, {
						"colIndex": 6,
						"rowIndex": 0
					});
					var inputBox_1 = new cpr.controls.InputBox("ed1");
					inputBox_1.fieldLabel = "코드/코드명";
					inputBox_1.userAttr({"autoKeydownSearch": "Y"});
					inputBox_1.bind("value").toDataMap(app.lookup("dmParam"), "commNm");
					container.addChild(inputBox_1, {
						"colIndex": 7,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "30px",
					"right": "5px",
					"left": "5px",
					"height": "32px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"right": "5px",
				"left": "5px",
				"height": "67px"
			});
			
			var group_3 = new cpr.controls.Container("grpData");
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.setColumns(["1fr"]);
			formLayout_2.setRows(["1fr", "1fr"]);
			group_3.setLayout(formLayout_2);
			(function(container){
				var group_4 = new cpr.controls.Container("grp2");
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.setColumns(["1fr"]);
				formLayout_3.setRows(["20px", "1fr"]);
				group_4.setLayout(formLayout_3);
				(function(container){
					var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
					container.addChild(userDefinedControl_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var grid_1 = linker.grid_1 = new cpr.controls.Grid("gdMain");
					grid_1.fieldLabel = "공통코드목록";
					grid_1.visible = true;
					grid_1.tabIndex = 4;
					grid_1.userAttr({"ignoreModify": ""});
					grid_1.init({
						"dataSet": app.lookup("DS_CMMN010"),
						"autoFit": "5, 6, 3, 4, 7, 10, 18, 11, 8, 9, 12, 13, 14, 15, 16, 17",
						"columns": [
							{"width": "25px"},
							{"width": "25px"},
							{"width": "40px"},
							{"width": "75px"},
							{"width": "75px"},
							{"width": "75px"},
							{"width": "150px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "120px"},
							{"width": "75px"},
							{"width": "75px"},
							{"width": "75px"},
							{"width": "60px"},
							{"width": "80px"},
							{"width": "80px"},
							{"width": "120px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.text = "F";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "LCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "대표코드";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "SCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "세부코드";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_CD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "공통코드";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_NM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "공통코드명";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.targetColumnName = "UNIT_SYS_NM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "대분류";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_NM2";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "코드명1";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_NM3";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "코드명2";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_SHTNM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "약어명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_ENGNM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "영문명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.targetColumnName = "ITEM1";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "관리항목1";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.targetColumnName = "ITEM2";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "관리항목2";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.targetColumnName = "ITEM3";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "관리항목3";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.targetColumnName = "ORD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "순서";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.targetColumnName = "USE_FG";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "사용여부";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.targetColumnName = "CAMP_FG";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "캠퍼스구분";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.targetColumnName = "REMK";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "비고";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.control = (function(){
											var output_5 = new cpr.controls.Output("st3");
											return output_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnType = "rowindex";
										cell.style.css({
											"text-align" : "center"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "LCD";
										cell.style.css({
											"text-align" : "center"
										});
										cell.control = (function(){
											var inputBox_2 = new cpr.controls.InputBox("ed2");
											inputBox_2.fieldLabel = "대표코드";
											inputBox_2.userAttr({
												"required": "Y",
												"minlength": "3"
											});
											inputBox_2.style.css({
												"text-align" : "center"
											});
											if(typeof onEd2ValueChange == "function") {
												inputBox_2.addEventListener("value-change", onEd2ValueChange);
											}
											inputBox_2.bind("value").toDataColumn("LCD");
											return inputBox_2;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "SCD";
										cell.style.css({
											"text-align" : "center"
										});
										cell.control = (function(){
											var inputBox_3 = new cpr.controls.InputBox("ed3");
											inputBox_3.fieldLabel = "세부코드";
											inputBox_3.userAttr({
												"required": "Y",
												"minlength": "3"
											});
											inputBox_3.style.css({
												"text-align" : "center"
											});
											if(typeof onEd3ValueChange == "function") {
												inputBox_3.addEventListener("value-change", onEd3ValueChange);
											}
											inputBox_3.bind("value").toDataColumn("SCD");
											return inputBox_3;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "COMM_CD";
										cell.style.css({
											"text-align" : "center"
										});
										cell.control = (function(){
											var inputBox_4 = new cpr.controls.InputBox("ed4");
											inputBox_4.userAttr({"required": "Y"});
											inputBox_4.style.css({
												"text-align" : "center"
											});
											inputBox_4.bind("value").toDataColumn("COMM_CD");
											return inputBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "COMM_NM";
										cell.control = (function(){
											var inputBox_5 = new cpr.controls.InputBox("ed5");
											inputBox_5.userAttr({"required": "Y"});
											inputBox_5.bind("value").toDataColumn("COMM_NM");
											return inputBox_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "UNIT_SYS_NM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "COMM_NM2";
										cell.control = (function(){
											var inputBox_6 = new cpr.controls.InputBox("ed6");
											inputBox_6.bind("value").toDataColumn("COMM_NM2");
											return inputBox_6;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "COMM_NM3";
										cell.control = (function(){
											var inputBox_7 = new cpr.controls.InputBox("ed7");
											inputBox_7.bind("value").toDataColumn("COMM_NM3");
											return inputBox_7;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.columnName = "COMM_SHTNM";
										cell.control = (function(){
											var inputBox_8 = new cpr.controls.InputBox("ed8");
											inputBox_8.bind("value").toDataColumn("COMM_SHTNM");
											return inputBox_8;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.columnName = "COMM_ENGNM";
										cell.control = (function(){
											var inputBox_9 = new cpr.controls.InputBox("ed9");
											inputBox_9.bind("value").toDataColumn("COMM_ENGNM");
											return inputBox_9;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.columnName = "ITEM1";
										cell.control = (function(){
											var inputBox_10 = new cpr.controls.InputBox("ed10");
											inputBox_10.style.css({
												"text-align" : "center"
											});
											inputBox_10.bind("value").toDataColumn("ITEM1");
											return inputBox_10;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.columnName = "ITEM2";
										cell.control = (function(){
											var inputBox_11 = new cpr.controls.InputBox("ed11");
											inputBox_11.style.css({
												"text-align" : "center"
											});
											inputBox_11.bind("value").toDataColumn("ITEM2");
											return inputBox_11;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.columnName = "ITEM3";
										cell.control = (function(){
											var inputBox_12 = new cpr.controls.InputBox("ed12");
											inputBox_12.style.css({
												"text-align" : "center"
											});
											inputBox_12.bind("value").toDataColumn("ITEM3");
											return inputBox_12;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.columnName = "ORD";
										cell.style.css({
											"text-align" : "center"
										});
										cell.control = (function(){
											var inputBox_13 = new cpr.controls.InputBox("ed13");
											inputBox_13.style.css({
												"text-align" : "center"
											});
											inputBox_13.bind("value").toDataColumn("ORD");
											return inputBox_13;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.columnName = "USE_FG";
										cell.control = (function(){
											var comboBox_4 = new cpr.controls.ComboBox("cb4");
											comboBox_4.preventInput = true;
											comboBox_4.style.css({
												"text-align" : "center"
											});
											(function(comboBox_4){
												comboBox_4.setItemSet(app.lookup("DS_USEFG"), {
													"label": "data",
													"value": "cd"
												});
											})(comboBox_4);
											comboBox_4.bind("value").toDataColumn("USE_FG");
											return comboBox_4;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.columnName = "CAMP_FG";
										cell.control = (function(){
											var comboBox_5 = new cpr.controls.ComboBox("cb5");
											comboBox_5.preventInput = true;
											comboBox_5.style.css({
												"text-align" : "center"
											});
											(function(comboBox_5){
												comboBox_5.setItemSet(app.lookup("DS_CAMPFG"), {
													"label": "data",
													"value": "cd"
												});
											})(comboBox_5);
											comboBox_5.bind("value").toDataColumn("CAMP_FG");
											return comboBox_5;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 18},
									"configurator": function(cell){
										cell.columnName = "REMK";
										cell.control = (function(){
											var inputBox_14 = new cpr.controls.InputBox("ed14");
											inputBox_14.bind("value").toDataColumn("REMK");
											return inputBox_14;
										})();
									}
								}
							]
						}
					});
					if(typeof onGdMainSelectionChange == "function") {
						grid_1.addEventListener("selection-change", onGdMainSelectionChange);
					}
					if(typeof onGdMainBeforeSelectionChange == "function") {
						grid_1.addEventListener("before-selection-change", onGdMainBeforeSelectionChange);
					}
					if(typeof onGdMainUpdate == "function") {
						grid_1.addEventListener("update", onGdMainUpdate);
					}
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1
					});
				})(group_4);
				container.addChild(group_4, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_5 = new cpr.controls.Container("grp3");
				// Layout
				var formLayout_4 = new cpr.controls.layouts.FormLayout();
				formLayout_4.setColumns(["1fr"]);
				formLayout_4.setRows(["20px", "1fr"]);
				group_5.setLayout(formLayout_4);
				(function(container){
					var grid_2 = linker.grid_2 = new cpr.controls.Grid("gdDtl");
					grid_2.fieldLabel = "공통코드상세목록";
					grid_2.userAttr({"ignoreModify": ""});
					grid_2.init({
						"dataSet": app.lookup("DS_CMMN010DTL"),
						"autoFit": "5, 6, 3, 4, 9, 17, 10, 7, 8, 11, 12, 13, 14, 15, 16",
						"columns": [
							{"width": "25px"},
							{"width": "25px"},
							{"width": "40px"},
							{"width": "75px"},
							{"width": "75px"},
							{"width": "75px"},
							{"width": "150px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "120px"},
							{"width": "75px"},
							{"width": "75px"},
							{"width": "75px"},
							{"width": "60px"},
							{"width": "80px"},
							{"width": "80px"},
							{"width": "120px"}
						],
						"header": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "번호";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "LCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "대표코드";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "SCD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "세부코드";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_CD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "공통코드";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_NM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "공통코드명";
										cell.style.setClasses(["require"]);
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_NM2";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "코드명1";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_NM3";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "코드명2";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_SHTNM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "약어명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.targetColumnName = "COMM_ENGNM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "영문명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.targetColumnName = "ITEM1";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "관리항목1";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.targetColumnName = "ITEM2";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "관리항목2";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.targetColumnName = "ITEM3";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "관리항목3";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.targetColumnName = "ORD";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "순서";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.targetColumnName = "USE_FG";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "사용여부";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.targetColumnName = "CAMP_FG";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "캠퍼스구분";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.targetColumnName = "REMK";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "비고";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.text = "F";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnType = "checkbox";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnType = "rowindex";
										cell.style.css({
											"text-align" : "center"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "LCD";
										cell.style.css({
											"text-align" : "center"
										});
										cell.control = (function(){
											var inputBox_15 = new cpr.controls.InputBox("ed15");
											inputBox_15.fieldLabel = "대표코드";
											inputBox_15.userAttr({
												"minlength": "3",
												"required": "Y"
											});
											inputBox_15.style.css({
												"text-align" : "center"
											});
											if(typeof onEd15ValueChange == "function") {
												inputBox_15.addEventListener("value-change", onEd15ValueChange);
											}
											inputBox_15.bind("value").toDataColumn("LCD");
											return inputBox_15;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "SCD";
										cell.style.css({
											"text-align" : "center"
										});
										cell.control = (function(){
											var inputBox_16 = new cpr.controls.InputBox("ed16");
											inputBox_16.fieldLabel = "세부코드";
											inputBox_16.userAttr({
												"minlength": "3",
												"required": "Y"
											});
											inputBox_16.style.css({
												"text-align" : "center"
											});
											if(typeof onEd16ValueChange == "function") {
												inputBox_16.addEventListener("value-change", onEd16ValueChange);
											}
											inputBox_16.bind("value").toDataColumn("SCD");
											return inputBox_16;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "COMM_CD";
										cell.style.css({
											"text-align" : "center"
										});
										cell.control = (function(){
											var inputBox_17 = new cpr.controls.InputBox("ed17");
											inputBox_17.userAttr({"required": "Y"});
											inputBox_17.style.css({
												"text-align" : "center"
											});
											inputBox_17.bind("value").toDataColumn("COMM_CD");
											return inputBox_17;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "COMM_NM";
										cell.control = (function(){
											var inputBox_18 = new cpr.controls.InputBox("ed18");
											inputBox_18.userAttr({"required": "Y"});
											inputBox_18.bind("value").toDataColumn("COMM_NM");
											return inputBox_18;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "COMM_NM2";
										cell.control = (function(){
											var inputBox_19 = new cpr.controls.InputBox("ed19");
											inputBox_19.bind("value").toDataColumn("COMM_NM2");
											return inputBox_19;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "COMM_NM3";
										cell.control = (function(){
											var inputBox_20 = new cpr.controls.InputBox("ed20");
											inputBox_20.bind("value").toDataColumn("COMM_NM3");
											return inputBox_20;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "COMM_SHTNM";
										cell.control = (function(){
											var inputBox_21 = new cpr.controls.InputBox("ed21");
											inputBox_21.bind("value").toDataColumn("COMM_SHTNM");
											return inputBox_21;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 10},
									"configurator": function(cell){
										cell.columnName = "COMM_ENGNM";
										cell.control = (function(){
											var inputBox_22 = new cpr.controls.InputBox("ed22");
											inputBox_22.bind("value").toDataColumn("COMM_ENGNM");
											return inputBox_22;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 11},
									"configurator": function(cell){
										cell.columnName = "ITEM1";
										cell.control = (function(){
											var inputBox_23 = new cpr.controls.InputBox("ed23");
											inputBox_23.style.css({
												"text-align" : "center"
											});
											inputBox_23.bind("value").toDataColumn("ITEM1");
											return inputBox_23;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 12},
									"configurator": function(cell){
										cell.columnName = "ITEM2";
										cell.control = (function(){
											var inputBox_24 = new cpr.controls.InputBox("ed24");
											inputBox_24.style.css({
												"text-align" : "center"
											});
											inputBox_24.bind("value").toDataColumn("ITEM2");
											return inputBox_24;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 13},
									"configurator": function(cell){
										cell.columnName = "ITEM3";
										cell.control = (function(){
											var inputBox_25 = new cpr.controls.InputBox("ed25");
											inputBox_25.style.css({
												"text-align" : "center"
											});
											inputBox_25.bind("value").toDataColumn("ITEM3");
											return inputBox_25;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 14},
									"configurator": function(cell){
										cell.columnName = "ORD";
										cell.style.css({
											"text-align" : "center"
										});
										cell.control = (function(){
											var inputBox_26 = new cpr.controls.InputBox("ed26");
											inputBox_26.style.css({
												"text-align" : "center"
											});
											inputBox_26.bind("value").toDataColumn("ORD");
											return inputBox_26;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 15},
									"configurator": function(cell){
										cell.columnName = "USE_FG";
										cell.control = (function(){
											var comboBox_6 = new cpr.controls.ComboBox("cb6");
											comboBox_6.preventInput = true;
											comboBox_6.style.css({
												"text-align" : "center"
											});
											(function(comboBox_6){
												comboBox_6.setItemSet(app.lookup("DS_USEFG"), {
													"label": "data",
													"value": "cd"
												});
											})(comboBox_6);
											comboBox_6.bind("value").toDataColumn("USE_FG");
											return comboBox_6;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 16},
									"configurator": function(cell){
										cell.columnName = "CAMP_FG";
										cell.control = (function(){
											var comboBox_7 = new cpr.controls.ComboBox("cb7");
											comboBox_7.preventInput = true;
											comboBox_7.style.css({
												"text-align" : "center"
											});
											(function(comboBox_7){
												comboBox_7.setItemSet(app.lookup("DS_CAMPFG"), {
													"label": "data",
													"value": "cd"
												});
											})(comboBox_7);
											comboBox_7.bind("value").toDataColumn("CAMP_FG");
											return comboBox_7;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 17},
									"configurator": function(cell){
										cell.columnName = "REMK";
										cell.control = (function(){
											var inputBox_27 = new cpr.controls.InputBox("ed27");
											inputBox_27.bind("value").toDataColumn("REMK");
											return inputBox_27;
										})();
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.control = (function(){
											var output_6 = new cpr.controls.Output("st4");
											return output_6;
										})();
									}
								}
							]
						}
					});
					container.addChild(grid_2, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var group_6 = new cpr.controls.Container("grp4");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.setColumns(["1fr", "125px"]);
					formLayout_5.setRows(["20px"]);
					group_6.setLayout(formLayout_5);
					(function(container){
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						container.addChild(userDefinedControl_3, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comButton("udcComButton");
						if(typeof onUdcComButtonInsert == "function") {
							userDefinedControl_4.addEventListener("insert", onUdcComButtonInsert);
						}
						if(typeof onUdcComButtonBeforeDelete == "function") {
							userDefinedControl_4.addEventListener("beforeDelete", onUdcComButtonBeforeDelete);
						}
						container.addChild(userDefinedControl_4, {
							"colIndex": 1,
							"rowIndex": 0
						});
					})(group_6);
					container.addChild(group_6, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_5);
				container.addChild(group_5, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "72px",
				"right": "5px",
				"bottom": "5px",
				"left": "5px"
			});
			if(typeof CmmnComCodeReg_OnLoadCompleted == "function"){
				app.addEventListener("load", CmmnComCodeReg_OnLoadCompleted);
			}
		}
	});
	app.title = "공통코드등록";
	cpr.core.Platform.INSTANCE.register(app);
})();
