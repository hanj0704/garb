/*
 * App URI: 202005/DragTesterLastIndex
 * Source Location: 202005/DragTesterLastIndex.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202005/DragTesterLastIndex", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2019. 12. 2. 오후 5:46:02.
			 *
			 * @author HANS
			 ************************************************/
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				setDragSource(app.lookup("grd1"));	
				setDropTarget(app.lookup("grd2"));
			}
			
			
			function createDragSourceFeedback(){
				var feedback = new cpr.controls.Output();
				feedback.ellipsis = true;
				feedback.style.css({
					"opacity" : "0.8",
					"border": "solid 1px red",
					"text-align" : "center",
					"color" : "black",
					"border-radius": "10px",
					"background": "white",
					"box-shadow": "0px 2px 10px #ddd",
					"cursor": "move"
				});
				return feedback;
			}
			
			/**
			 * 드래그를 시작하는 컨트롤에 드래그 소스를 부여하는 함수
			 * @param {cpr.controls.UIControl} control
			 */
			function setDragSource(control){
				var feedback = null;
				var actualRect = null;
			  new cpr.controls.DragSource(control, {
				options:{
				  dataType : "text",
				  threadhold: 10 // 10px만큼 이동해야 드래그시작으로 인식
				},
				onDragStart : function(context){
				if(context.sourceTargetObject != null && context.sourceTargetObject.relativeTargetName != "header") {
				  context.cursor = "grabbing";
				  feedback = createDragSourceFeedback();
				  control.style.css("opacity"," 0.5");
				  context.data = context.sourceTargetObject;
				  feedback.value = JSON.stringify(control.getRow(context.sourceTargetObject.rowIndex).getRowData());
				  var voDragStartLoca = context.dragStartLocation;
				  actualRect = new cpr.geometry.Rectangle(voDragStartLoca.x, voDragStartLoca.y, control.getActualRect().width, 25);
				  app.floatControl(feedback, cpr.controls.layouts.XYLayout.createConstraintWithRect(actualRect));
				  context.source = null;
				} else {
					context.cancel();
				}
				  
				},
				onDragMove : function(context){
				  context.cursor = "grabbing";
				  var newRect = actualRect.getTranslatedByDimension(context.dragDelta);
				  app.floatControl(feedback, cpr.controls.layouts.XYLayout.createConstraintWithRect(newRect));
				},
				onDragEnd : function(context){
				  context.cursor = "";
				  feedback.dispose();
				  feedback = null;
				  control.style.removeStyle("opacity");
				}
			});
			}
			
			/**
			 * 드랍하는 그래드에 드랍 타겟을 부여하는 함수
			 * @param {cpr.controls.UIControl} control2
			 */
			function setDropTarget(control2){
			
				new cpr.controls.DropTarget(control2, {
					isImportant : function(source){
						return source.dataType == "text";
					},
					onDrop : function(context){
						control2.insertRowData(context.target.control.getRowCount(),false,context.source.control.getRow(context.data.rowIndex).getRowData());
					}
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsVoucher");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{"name": "column6"}
				],
				"rows": [
					{"column1": "asdfadsfadsfadsfasfdsaf", "column2": "column21", "column3": "column31", "column4": "column41", "column5": "column51", "column6": "column61"},
					{"column1": "column11", "column2": "column22", "column3": "column32", "column4": "column42", "column5": "column52", "column6": "column62"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43", "column5": "column53", "column6": "column63"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44", "column5": "column54", "column6": "column64"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "column45", "column5": "column55", "column6": "column65"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsVoucherCard");
			dataSet_2.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{
						"name": "column6",
						"dataType": "number"
					}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41", "column5": "column51", "column6": "1"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42", "column5": "column52", "column6": "2"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43", "column5": "column53", "column6": "3"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44", "column5": "column54", "column6": "4"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "column45", "column5": "column55", "column6": "5"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("dsVoucherCard"),
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column4";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "column5";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "column6";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column6";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "column6";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "45px",
				"left": "20px",
				"width": "400px",
				"height": "317px"
			});
			
			var grid_2 = new cpr.controls.Grid("grd2");
			grid_2.init({
				"dataSet": app.lookup("dsVoucher"),
				"autoRowHeight": "none",
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column4";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "column5";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "column6";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column6";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "column6";
							}
						}
					]
				}
			});
			container.addChild(grid_2, {
				"top": "45px",
				"left": "430px",
				"width": "402px",
				"height": "317px"
			});
			
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "항상 마지막 인덱스에 새로운 행을 추가하는 예제";
			container.addChild(output_1, {
				"top": "9px",
				"left": "20px",
				"width": "812px",
				"height": "26px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyContextmenu == "function"){
				app.getContainer().addEventListener("contextmenu", onBodyContextmenu);
			}
		}
	});
	app.title = "DragTesterLastIndex";
	cpr.core.Platform.INSTANCE.register(app);
})();
