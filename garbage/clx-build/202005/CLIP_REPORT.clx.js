/*
 * App URI: 202005/CLIP_REPORT
 * Source Location: 202005/CLIP_REPORT.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202005/CLIP_REPORT", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				 
				
			}
			
			
			/*
			 * "조회" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				
				/**
				 * 임베디드 페이지 lookup 
				 */
			    var vcEmbPage = app.lookup("embReport"); 
				 
			      var vsReportTargetUrl =  "http://localhost:8080/ClipReport4" ;  
				  var postMethod = vcEmbPage.getPostMethod(vsReportTargetUrl); 
				  
				  postMethod.addParameter("crfFilePath", "cmn/reportfile" ); /* FILE NAME */   
				  postMethod.addParameter("exportFileNm", "report nm" ); /* Export 파일명 */   
				  postMethod.addParameter("toolbarVisible", "true" ); /* /툴바 Visible 여부 */   
				 /* 기타사항 */ 
				 // postMethod.addParameter("viewScale", "true" ); /* 뷰어 Scale */   
				 // postMethod.addParameter("saveFileTypes", "ALL" ); /* 파일저장 type */   
				 // postMethod.addParameter("saveButtonDisable", "true" ); /* 파일저장 버튼 Visible */   
				 // postMethod.addParameter("dbName", "comJNDI" ); /* DBMS CONN NAME JNDI 등록 명 */   
				 // postMethod.addParameter("jsonValue", "{}}" ); /* jsonValue */    
				   
				 /**
				  * parameter Setting 
				  */ 
					//보고서 호출 파라메터  
				    //json type
					var voParam = {
						 TITLE : "테스트"
						,STORY_ID : "NS2019050200669"
					};
					
				    //보고서 파라메터(구분자- :=)
				    for(var param in voParam ){ 
				        postMethod.addParameter("viewerParameter", param+":="+voParam[param] ); 
				    } 
					
					//보고서 호출 파라메터  
				    //dataMap type
					var voParam2 = app.lookup("dmParam");
					var vsaColNms = voParam2.getColumnNames();
					
					for( var pram in vsaColNms){ 
				        postMethod.addParameter("viewerParameter", param+":="+voParam2.getString(param) ); 
					} 
				  /**
				   * 파라미터 전송 ( form submit )
				   */	
				  postMethod.submit();
				  
				  /**
				   * form fild reset( delete  all setting parameters )
				   * 초기화 
				   */
				  postMethod.dispose();    
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsUnitSystemRcd");
			dataSet_1.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsTnsStory");
			dataSet_2.parseData({
				"info": "storyId,storySeq",
				"columns": [
					{"name": "storyId"},
					{"name": "storySeq"},
					{"name": "storyTitle"},
					{"name": "totalSs"},
					{"name": "storyClass"},
					{"name": "storyClassNm"},
					{"name": "storyTp"},
					{"name": "storyTpNm"},
					{"name": "storyLevel"},
					{"name": "storyLevelNm"},
					{"name": "reporterId"},
					{"name": "reporterNm"},
					{"name": "reporterDt"},
					{"name": "updUserId"},
					{"name": "updUserNm"},
					{"name": "updDt"},
					{"name": "onairDate"},
					{"name": "embargoYn"},
					{"name": "urgentYn"},
					{"name": "deptCd"},
					{"name": "deptNm"},
					{"name": "pgmId"},
					{"name": "pgmNm"},
					{"name": "apprReqDt"},
					{"name": "apprDt"},
					{"name": "apprUserNm"},
					{"name": "storyCount"},
					{"name": "cueCnt"},
					{"name": "editStatus"},
					{"name": "delYn"},
					{"name": "deskNote"},
					{"name": "editYn"},
					{"name": "superDeskYn"},
					{"name": "editUserNm"},
					{"name": "storyTenseYn"},
					{"name": "superDeskUserNm"},
					{"name": "superDeskDt"},
					{"name": "dubbingNm"},
					{"name": "publishYn"},
					{"name": "audioYn"},
					{"name": "portalYn"},
					{"name": "publishUserId"},
					{"name": "publishUserNm"},
					{"name": "publishDt"},
					{"name": "portalUserId"},
					{"name": "portalUserNm"},
					{"name": "portalDt"},
					{"name": "ancMentSs"},
					{"name": "contentsSs"},
					{"name": "storyOpenRange"},
					{"name": "storyOpenRangeNm"},
					{"name": "cgReqYn"},
					{"name": "subscribeYn"},
					{"name": "interviewSs"},
					{"name": "embargoDt"},
					{"name": "ancMentContents"},
					{
						"name": "contents",
						"dataType": "string"
					},
					{"name": "intervieweePhone"},
					{"name": "reporterPosition"},
					{"name": "mtrlAudioId"},
					{"name": "phone"},
					{"name": "email"},
					{"name": "reportLevel"},
					{"name": "editUserId"},
					{"name": "totalSsShow"},
					{"name": "ancMentSsShow"},
					{"name": "contentsSsShow"},
					{"name": "apprUserId"},
					{"name": "superDeskUserId"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "strUnitSystemRcd"},
					{"name": "param001"},
					{"name": "param002"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("pageInfo");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "recordsTotal",
						"dataType": "number",
						"defaultValue": "0"
					},
					{
						"name": "pageIndexerCount",
						"dataType": "number",
						"defaultValue": "5"
					},
					{
						"name": "recordCountPerPage",
						"dataType": "number",
						"defaultValue": "20"
					},
					{
						"name": "pageNo",
						"dataType": "number",
						"defaultValue": "1"
					},
					{
						"name": "paging",
						"defaultValue": "Y"
					},
					{"name": "pageResultKey"}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/EXB/STORY_PUBLIC_R01_C.do";
			submission_1.addRequestData(dataMap_2);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1280px)", "JXF");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1279px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["25px", "35px", "1fr"]);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var embeddedPage_1 = new cpr.controls.EmbeddedPage("embReport");
			container.addChild(embeddedPage_1, {
				"colIndex": 0,
				"rowIndex": 2
			});
			
			var group_1 = new cpr.controls.Container();
			// Layout
			var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
			flowLayout_1.horizontalAlign = "right";
			group_1.setLayout(flowLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				if(typeof onBtnSearchClick2 == "function") {
					button_1.addEventListener("click", onBtnSearchClick2);
				}
				container.addChild(button_1, {
					"width": "204px",
					"height": "30px"
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 1
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "클립리포트를 연계한 sample 페이지 입니다. 적용한 파라미터는 json방식으로 구현되어 있습니다. (  report는 아래의 임베디드 페이지에 보이게 되는 방식 입니다. )";
			container.addChild(output_1, {
				"colIndex": 0,
				"rowIndex": 0
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "report 연계 (postMethod)";
	cpr.core.Platform.INSTANCE.register(app);
})();
