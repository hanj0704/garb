/*
 * App URI: 202005/testIn0519
 * Source Location: 202005/testIn0519.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202005/testIn0519", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * testIn0519.js
			 * Created at 2020. 5. 19. 오후 7:27:34.
			 *
			 * @author HANS
			 ************************************************/
			
			var rowDatas = [];
			
			//var util = createCommonUtil();
			/*
			 * 그리드에서 copy 이벤트 발생 시 호출.
			 * Grid의 선택된 요소를 ctrl + c 로 복사했을 때 발생하는 이벤트.
			 */
			function onGrd1Copy(/* cpr.events.CGridEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				
				var voResultData = [];
				
				grd1.getSelectedRows().forEach(function(each){
					voResultData.push(each.getRowData());
				});
				rowDatas = voResultData;
			}
			
			/*
			 * 그리드에서 before-paste 이벤트 발생 시 호출.
			 * Grid에서 ctrl + v 로 붙여넣기시 붙여넣기 전에 발생하는 이벤트.
			 */
			function onGrd1BeforePaste(/* cpr.events.CGridEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				e.preventDefault();
					var targetGrid = app.lookup("grd1");
				var vnRowIndex = targetGrid.getSelectedRowIndex();
								var voRowData = targetGrid.getRow(vnRowIndex).getRowData()["playTime24"];
								rowDatas.forEach(function(each,idx){
			//						util.Grid.insertRow(app, "grdSch", 0, vnRowIndex+idx, each);
									app.lookup("grd1").insertRowData(vnRowIndex+idx,true,each);
								});
								
								targetGrid.selectRows(vnRowIndex);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31"},
					{"column1": "column12", "column2": "column22", "column3": "column32"},
					{"column1": "column13", "column2": "column23", "column3": "column33"},
					{"column1": "column14", "column2": "column24", "column3": "column34"},
					{"column1": "column15", "column2": "column25", "column3": "column35"},
					{"column1": "column16", "column2": "column26", "column3": "column36"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"selectionMulti": "multi",
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						}
					]
				}
			});
			if(typeof onGrd1Copy == "function") {
				grid_1.addEventListener("copy", onGrd1Copy);
			}
			if(typeof onGrd1Keydown == "function") {
				grid_1.addEventListener("keydown", onGrd1Keydown);
			}
			if(typeof onGrd1BeforePaste == "function") {
				grid_1.addEventListener("before-paste", onGrd1BeforePaste);
			}
			container.addChild(grid_1, {
				"top": "20px",
				"left": "20px",
				"width": "644px",
				"height": "307px"
			});
		}
	});
	app.title = "testIn0519";
	cpr.core.Platform.INSTANCE.register(app);
})();
