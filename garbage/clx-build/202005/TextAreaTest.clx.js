/*
 * App URI: 202005/TextAreaTest
 * Source Location: 202005/TextAreaTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202005/TextAreaTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * TextAreaTest.js
			 * Created at 2020. 5. 26. 오후 4:39:19.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				app.lookup("sms1").send();
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms1SubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
				
				app.lookup("txa1").redraw();
			}
			
			
			/*
			 * 서브미션에서 submit-progress 이벤트 발생 시 호출.
			 * 서버로 부터 일정 크기의 데이터를 전송받았을 때 발생합니다. 하나의 응답에 대해 여러 번 발생할 수 있습니다.
			 */
			function onSms1SubmitProgress(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
			//	console.log(e.loaded);
			}
			
			
			/*
			 * 서브미션에서 submit-load-progress 이벤트 발생 시 호출.
			 * 서버로 부터 수신된 데이터가 응답 데이터컨트롤에 부분적으로 적재되었을 때 발생합니다. 하나의 응답에 대해 여러 번 발생할 수 있습니다.
			 */
			function onSms1SubmitLoadProgress(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
				
			};
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{
					"name": "column1",
					"defaultValue": "가나다라마바사\\n아자차카"
				}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "datas/dataDm.json";
			submission_1.addResponseData(dataMap_1, false);
			if(typeof onSms1SubmitDone == "function") {
				submission_1.addEventListener("submit-done", onSms1SubmitDone);
			}
			if(typeof onSms1SubmitProgress == "function") {
				submission_1.addEventListener("submit-progress", onSms1SubmitProgress);
			}
			if(typeof onSms1SubmitLoadProgress == "function") {
				submission_1.addEventListener("submit-load-progress", onSms1SubmitLoadProgress);
			}
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var textArea_1 = new cpr.controls.TextArea("txa1");
			textArea_1.bind("value").toDataMap(app.lookup("dm1"), "column1");
			container.addChild(textArea_1, {
				"top": "20px",
				"left": "20px",
				"width": "588px",
				"height": "239px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "269px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
		}
	});
	app.title = "TextAreaTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
