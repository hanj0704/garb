/*
 * App URI: 202103/mouseTracker
 * Source Location: 202103/mouseTracker.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202103/mouseTracker", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * mouseTracker.js
			 * Created at 2021. 3. 31. 오전 9:57:52.
			 *
			 * @author HANS
			 ************************************************/
			
			var ws = null;
			
			/*
			 * "소켓연결" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				ws = new WebSocket("ws://localhost:8080/echo");
				
				ws.onopen = function(event) {
					console.log("WebSocket is connected");
				}
				
				ws.onmessage = function(event){
					var message = event.data;
					console.log(message);
					console.log(moment().format("YYYY-MM-DD HH:mm:ss SSS"));
					try{
					var json = JSON.parse(message);
					var jsonKeys = Object.keys(json);
					
					var vaDataCtrls = app.getAllDataControls();
					var vaDCIds = vaDataCtrls.map(function(each){
						return each.id;
					});
					
					jsonKeys.forEach(function(each){	
						
						if(vaDCIds.indexOf(each) != -1) {
							app.lookup(each).build(json[each]);
						}
					});
					var pgr = app.lookup("pgr1");
					pgr.max = json.max;
					pgr.value = json.now;
					pgr.redraw();
					} catch(err){
						console.log(err);
					}
					
				};
				
				ws.onerror = function(error){
					console.log(error);
				}
			}
			
			
			/*
			 * "소켓끊어" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				clearInterval(inter);
				ws.close();
			}
			
			var inter;
			/*
			 * "통신시작" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				inter = setInterval(function() {
					var st = null;
					var sl1 = app.lookup("sld1");
					var sl2 = app.lookup("sld2");
					var sl3 = app.lookup("sld3");
					var sl4 = app.lookup("sld4");
					st = {
						now: sl1.numberValue,
						column1: sl2.value,
						column2: sl3.value,
						column3: sl4.value
					}
					var str = JSON.stringify(st);
					
					console.log(str);
					ws.send(str);
				}, 500);
				
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "소켓연결";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "소켓끊어";
			if(typeof onButtonClick2 == "function") {
				button_2.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_2, {
				"top": "77px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "5px";
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["100px", "1fr"]);
			formLayout_1.setRows(["1fr", "1fr", "1fr", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var slider_1 = new cpr.controls.Slider("sld1");
				container.addChild(slider_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var slider_2 = new cpr.controls.Slider("sld3");
				container.addChild(slider_2, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var slider_3 = new cpr.controls.Slider("sld4");
				slider_3.step = 1.0;
				container.addChild(slider_3, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var output_1 = new cpr.controls.Output();
				output_1.value = "프로그레스";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "col1";
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "col2";
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "col3";
				container.addChild(output_4, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var slider_4 = new cpr.controls.Slider("sld2");
				container.addChild(slider_4, {
					"colIndex": 1,
					"rowIndex": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "96px",
				"left": "160px",
				"width": "389px",
				"height": "161px"
			});
			
			var button_3 = new cpr.controls.Button();
			button_3.value = "통신시작";
			if(typeof onButtonClick3 == "function") {
				button_3.addEventListener("click", onButtonClick3);
			}
			container.addChild(button_3, {
				"top": "50px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
		}
	});
	app.title = "mouseTracker";
	cpr.core.Platform.INSTANCE.register(app);
})();
