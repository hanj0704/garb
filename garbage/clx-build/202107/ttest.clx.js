/*
 * App URI: 202107/ttest
 * Source Location: 202107/ttest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202107/ttest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * ttest.js
			 * Created at 2021. 7. 13. 오후 3:46:28.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				btn1.getParent().updateConstraint(btn1, {
					width : "500px"
				});
				btn1.style.animateTo({
					width : "500px"
				}, 0.5, cpr.animation.TimingFunction.LINEAR)	
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 transitionend 이벤트 발생 시 호출.
			 * CSS 속성 트랜지션 종료 후 발생하는 이벤트.
			 */
			function onBtn1Transitionend(/* cpr.events.CTransitionEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				console.log("TRANSITIONEND");	
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 transitionstart 이벤트 발생 시 호출.
			 * CSS 속성 트랜지션 시작 시 발생하는 이벤트.
			 */
			function onBtn1Transitionstart(/* cpr.events.CTransitionEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				console.log("TRANSITIONSTART");
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 animationend 이벤트 발생 시 호출.
			 * 애니메이션 종료 후 발생하는 이벤트.
			 */
			function onBtn1Animationend(/* cpr.events.CAnimationEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				console.log("ANINATIONEND")
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 animationstart 이벤트 발생 시 호출.
			 * 애니메이션 시작시 발생하는 이벤트.
			 */
			function onBtn1Animationstart(/* cpr.events.CAnimationEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				console.log("ANIMATIONSTART");
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
			flowLayout_1.animationDuration = 0.35;
			container.setLayout(flowLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.aaa.hanj();
			container.addChild(userDefinedControl_1, {
				"width": "300px",
				"height": "300px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			if(typeof onBtn1Transitionend == "function") {
				button_1.addEventListener("transitionend", onBtn1Transitionend);
			}
			if(typeof onBtn1Transitionstart == "function") {
				button_1.addEventListener("transitionstart", onBtn1Transitionstart);
			}
			if(typeof onBtn1Animationend == "function") {
				button_1.addEventListener("animationend", onBtn1Animationend);
			}
			if(typeof onBtn1Animationstart == "function") {
				button_1.addEventListener("animationstart", onBtn1Animationstart);
			}
			container.addChild(button_1, {
				"width": "263px",
				"height": "76px"
			});
		}
	});
	app.title = "ttest";
	cpr.core.Platform.INSTANCE.register(app);
})();
