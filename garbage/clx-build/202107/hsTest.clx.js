/*
 * App URI: 202107/hsTest
 * Source Location: 202107/hsTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202107/hsTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * hsTest.js
			 * Created at 2021. 7. 19. 오후 5:46:43.
			 *
			 * @author HANS
			 ************************************************/
			var isExpanded = false;
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				var vcGrpCont = app.getContainer();
				var vcGrpMenuWrap = app.lookup("grpMenuWrap");
				
				vcGrpCont.floatControl(vcGrpMenuWrap, {
					top:  "0px",
					left:"0px",
					width: "15px",
					height : "800px"
				});
			}
			
			
			/*
			 * "▶" 버튼(btnOpen)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnOpenClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnOpen = e.control;
				var vcGrpCont = app.getContainer();
				var vcGrpMenuWrap = app.lookup("grpMenuWrap");
				var vcGrpMenu = app.lookup("grpMenu");
				
				if (isExpanded) {
					console.log("ㅋㅎㅅㅋ");
			//		var animator = new cpr.animation.Animator(0.35, cpr.animation.TimingFunction.EASE_OUT_CUBIC);
			//		animator.addTask(function(p) {
			//			vcGrpCont.updateConstraint(vcGrpMenuWrap, {width: 401});
			//			
						vcGrpMenuWrap.style.animateTo({
							"width" : "19px"
						},0.35,cpr.animation.TimingFunction.EASE_OUT_CUBIC);
			//		});
					
			//		vcGrpMenuWrap.addEventListenerOnce("transitionend", function(){
			//			console.log("ㅋㅅㅋㅋㅋㅋㅋ");
			//			vcGrpMenu.visible = false;
			//		})
			//		animator.run().then(function() {
						isExpanded = !isExpanded;
						
						
						btnOpen.value = "▶";
			//			animator.stop();
			//			btnOpen.style.addClass("open");
			//			if (btnOpen.style.hasClass("close")) {
			//				btnOpen.style.removeClass("close");
			//			}
			//		});
				} else {
			//		vcGrpMenu.visible = true;
			//		animator.addTask(function() {
			//			vcGrpCont.updateConstraint(vcGrpMenuWrap, {width: "401px"});
						app.lookup("grpMenu").getParent().updateConstraint(app.lookup("grpMenu"), {
							"width" : "380px"
						});
						app.lookup("grpMenu").style.animateTo({
							"width" : "100px"
						}, 0.35, cpr.animation.TimingFunction.EASE_OUT_CUBIC);
						vcGrpMenuWrap.style.animateTo({
							"width" : "401px"
						}, 0.35, cpr.animation.TimingFunction.EASE_OUT_CUBIC);
			//		});
					
			//		animator.run().then(function() {
						isExpanded = !isExpanded;
						
						
						
						btnOpen.value = "◀";
			//		});
				}
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				console.log(app.lookup("grpMenuWrap").getActualRect());
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "Output";
			container.addChild(output_1, {
				"width": "457px",
				"height": "295px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"width": "100px",
				"height": "20px"
			});
			
			var group_1 = new cpr.controls.Container("grpMenuWrap");
			group_1.clipContent = false;
			group_1.style.css({
				"background-color" : "#a1c9ff"
			});
			// Layout
			var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
			flowLayout_1.scrollable = false;
			flowLayout_1.horizontalSpacing = 0;
			flowLayout_1.verticalSpacing = 0;
			flowLayout_1.lineWrap = false;
			group_1.setLayout(flowLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("grpMenu");
				group_2.style.css({
					"background-color" : "#ff7575"
				});
				// Layout
				var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_2.scrollable = false;
				verticalLayout_2.spacing = 0;
				group_2.setLayout(verticalLayout_2);
				(function(container){
					var group_3 = new cpr.controls.Container("grp1");
					group_3.clipContent = false;
					group_3.style.setClasses(["bg-danger-dim"]);
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.topMargin = "20px";
					formLayout_1.rightMargin = "20px";
					formLayout_1.bottomMargin = "20px";
					formLayout_1.leftMargin = "20px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["118px", "176px"]);
					formLayout_1.setRowAutoSizing(0, true);
					formLayout_1.setRowAutoSizing(1, true);
					group_3.setLayout(formLayout_1);
					(function(container){
					})(group_3);
					container.addChild(group_3, {
						"autoSize": "none",
						"width": "382px",
						"height": "334px"
					});
					var group_4 = new cpr.controls.Container("grp2");
					group_4.clipContent = false;
					group_4.style.setClasses(["bg-warning-dim"]);
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.scrollable = false;
					formLayout_2.topMargin = "20px";
					formLayout_2.rightMargin = "20px";
					formLayout_2.bottomMargin = "20px";
					formLayout_2.leftMargin = "20px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_4.setLayout(formLayout_2);
					(function(container){
					})(group_4);
					container.addChild(group_4, {
						"autoSize": "none",
						"width": "382px",
						"height": "146px"
					});
					var group_5 = new cpr.controls.Container("grp3");
					group_5.clipContent = false;
					group_5.style.setClasses(["bg-primary-dim"]);
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.scrollable = false;
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "10px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["48px", "1fr"]);
					group_5.setLayout(formLayout_3);
					(function(container){
					})(group_5);
					container.addChild(group_5, {
						"autoSize": "none",
						"width": "382px",
						"height": "387px"
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "none",
					"width": "0px",
					"height": "868px"
				});
				var group_6 = new cpr.controls.Container("grp4");
				// Layout
				var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
				flowLayout_2.scrollable = false;
				flowLayout_2.horizontalSpacing = 0;
				flowLayout_2.verticalSpacing = 0;
				flowLayout_2.verticalAlign = "middle";
				flowLayout_2.lineWrap = false;
				group_6.setLayout(flowLayout_2);
				(function(container){
					var button_2 = new cpr.controls.Button("btnOpen");
					button_2.value = "▶";
					button_2.style.setClasses(["btn-white"]);
					if(typeof onBtnOpenClick == "function") {
						button_2.addEventListener("click", onBtnOpenClick);
					}
					container.addChild(button_2, {
						"width": "19px",
						"height": "46px"
					});
				})(group_6);
				container.addChild(group_6, {
					"autoSize": "none",
					"width": "19px",
					"height": "868px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "none",
				"width": "1216px",
				"height": "868px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "hsTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
