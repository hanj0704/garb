/*
 * App URI: 202107/testest
 * Source Location: 202107/testest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202107/testest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * testest.js
			 * Created at 2021. 7. 14. 오후 5:00:55.
			 *
			 * @author HANS
			 ************************************************/
			
			/**
			 * 지정한 개수만큼 앞에 자동으로 0을 채워넣습니다.
			 * @param {Number} width
			 * @param {String} str
			 */
			function fillZero(width, str){
			    return str.length >= width ? str:new Array(width-str.length+1).join('0')+str;//남는 길이만큼 0으로 채움
			}
			
			window.addEventListener("close", function(e){
				console.log("케케케");
			});
			window.addEventListener("beforeunload", function(e){
				console.log("ㅋㅋㅋㅋㅋ");
			})
			
			cpr.expression.ExpressionEngine.INSTANCE.registerFunction("getSlotInfo", function(poBindInfo){
				
				
				var voReturn = null;
				var vcCtrl = null;
				if(poBindInfo instanceof cpr.bind.DataMapContext) {
					
					vcCtrl = poBindInfo.dataMap;
					
					if(vcCtrl.id.indexOf("LP") != -1) {
						//LOADPORT DATAMAP
						
					}
				}
			//	/** @type cpr.data.DataCollection */
			//	var vcCtrl = app.lookup(psCtrl);
			//	
			//	if(vcCtrl) {
			//		
			//		
			//		if(vcCtrl.id.indexOf("LP") == -1) {
			//			
			//		} else {
			//			
			//			
			//		}
			//	}
			//	
			//	return voReturn;
			})
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
			}
			
			//window.onbeforeunload = function(){
			//	console.log("ㅋㅋ");
			//	this.open("http://naver.com");
			//}
			
			/*
			 * 루트 컨테이너에서 before-unload 이벤트 발생 시 호출.
			 * 앱이 언로드되기 전에 발생하는 이벤트 입니다. 취소할 수 있습니다.
			 */
			function onBodyBeforeUnload(/* cpr.events.CEvent */ e){
				console.log("타긴하냐>?");
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				var a = app.lookup("opt1").getBindContext();
				var b = a.evaluate("getSlotInfo(this)");
				console.log(b);
			}
			
			
			/*
			 * "regular express" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				var opt2 = app.lookup("opt2").value;
				var finder = /Wfr\d+No/;
				var a= opt2.match(finder);
				console.log(a);
			}
			
			
			/*
			 * "Array reg exp" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				var dmA = app.lookup("dmChAClusterInfo").getColumnNames();
				 dmA = dmA.filter(function(each,idx){
					if(each.match(/WfrNo/) != null) {
						return each;
					}
				});
				
				console.log(dmA);
			}
			
			
			
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onIpb1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb1 = e.control;
				
				app.getContainer().redraw();
			}
			
			
			/*
			 * "udc 에 바인딩시켜보기" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				
				app.lookup("hanSlot").creater(app.lookup("dm2"));
			}
			
			
			/*
			 * "Button" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn8 = e.control;
				zpzpzp();
			}
			
			function zpzpzp() {
				app.lookup("btn7").addEventListenerOnce("click", function(){
					
					console.log("did you miss me?");
					zpzpzp();
				})
			}
			
			/*
			 * "Button" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				
				console.log("ㅋㅋ");
			}
			
			
			/*
			 * "udc app title 찾기" 버튼(btn9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn9Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn9 = e.control;
				
				console.log(app.lookup("hanSlot").app.title);
			}
			
			
			/*
			 * "Button" 버튼(btn10)에서 contextmenu 이벤트 발생 시 호출.
			 * 마우스의 오른쪽 버튼이 클릭되거나 컨텍스트 메뉴 키가 눌려지면 호출되는 이벤트.
			 */
			function onBtn10Contextmenu(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn10 = e.control;
				
				e.preventDefault();
				
				alert("ㅋㅅㅋ");
			}
			
			
			/*
			 * "classTest" 버튼(btn11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn11Click(/* cpr.events.CMouseEvent */ e){
				
				/** 
				 * @type cpr.controls.Button
				 */
				var btn11 = e.control;
				
				btn11.style.addClass("aaaa");
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				console.log("ㅁㅁㅁ");
			}
			
			
			/*
			 * "load dispatch" 버튼(btn12)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn12Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn12 = e.control;
				
				var newEv = new cpr.events.CEvent("load");
				
				app.dispatchEvent(newEv);
				
				app.lookup(id);
				
				var vas = cpr.core.Platform.INSTANCE.getAllRunningAppInstances().filter(function(each){
					return !each.isUDCInstance();
				});
				
				vas.forEach(function(each){
					var vaKeys = Object.keys(stomp.subscriptions);
					
					if(vaKeys.indexOf(each) != null) {
						
						
					}
				});
			}
			
			
			/*
			 * "Button prop test" 버튼(btn13)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn13Click(/* cpr.events.CMouseEvent */ e){
				''/** 
				 * @type cpr.controls.Button
				 */
				var btn13 = e.control;
				
			//	var a = cpr.controls.Button;
			//	var b = new cpr.controls.Button();
			//	console.log(Object.getOwnPropertyNames(b));
			//	console.log(Object.getOwnPropertyNames(a));
			//	var a = btn13.constructor.bind(null);
				
			//	console.log(a);
				
				console.log(Object.getOwnPropertyNames(btn13.valueOf()));
				var a = Object.create(btn13);
				console.log(btn13.propertyIsEnumerable("value"));
				
				app.getContainer().addChild(a, {
					width: "100px",
					height :"100px"
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [{"name": "column1"}],
				"rows": [{"column1": "column11"}]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "column1",
						"defaultValue": "a"
					},
					{
						"name": "column2",
						"defaultValue": "b"
					},
					{
						"name": "column3",
						"defaultValue": "c"
					},
					{
						"name": "column4",
						"defaultValue": "d"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmChAClusterInfo");
			dataMap_2.userAttr({"isParamData": "Y"});
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "CTC__chA_Exist",
						"dataType": "number",
						"defaultValue": "1"
					},
					{
						"name": "CTC__chA1_WfrPrcRes",
						"dataType": "number"
					},
					{
						"name": "CTC__chA1_WfrNo",
						"dataType": "number"
					},
					{
						"name": "CTC__chA1_WfrSeqNo",
						"dataType": "number",
						"defaultValue": "",
						"info": ""
					},
					{
						"name": "CTC__chA1_WfrSource",
						"dataType": "number",
						"defaultValue": ""
					},
					{
						"name": "chA1__I__RF_GEN__ON_SENSE",
						"dataType": "number",
						"defaultValue": ""
					},
					{
						"name": "waferNameA1",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "getWaferNameforCircle(CTC__chA1_WfrSource,CTC__chA1_WfrNo,CTC__chA1_WfrSeqNo)"
					},
					{
						"name": "CTC__chA2_WfrPrcRes",
						"dataType": "number"
					},
					{
						"name": "CTC__chA2_WfrNo",
						"dataType": "number"
					},
					{
						"name": "CTC__chA2_WfrSeqNo",
						"dataType": "number"
					},
					{
						"name": "CTC__chA2_WfrSource",
						"dataType": "number"
					},
					{
						"name": "chA2__I__RF_GEN__ON_SENSE",
						"dataType": "number"
					},
					{
						"name": "waferNameA2",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "getWaferNameforCircle(CTC__chA2_WfrSource,CTC__chA2_WfrNo,CTC__chA2_WfrSeqNo)"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dm2");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "column1",
						"defaultValue": "a"
					},
					{
						"name": "column2",
						"defaultValue": "b"
					},
					{
						"name": "column3",
						"defaultValue": "c"
					}
				]
			});
			app.register(dataMap_3);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("dm1"));
			group_1.setBindContext(dataMapContext_1);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("opt1");
				output_1.bind("value").toDataColumn("column1");
				output_1.bind("tooltip").toExpression("column3");
				container.addChild(output_1, {
					"top": "0px",
					"left": "0px",
					"width": "375px",
					"height": "72px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "20px",
				"left": "20px",
				"width": "570px",
				"height": "72px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "102px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "bindcontext";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "102px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_2 = new cpr.controls.Output("opt2");
			output_2.value = "CTC__LP1_Wfr01No";
			container.addChild(output_2, {
				"top": "163px",
				"left": "20px",
				"width": "556px",
				"height": "37px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "regular express";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "210px",
				"left": "20px",
				"width": "159px",
				"height": "20px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Array reg exp";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "210px",
				"left": "189px",
				"width": "159px",
				"height": "20px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.value = "fill zero";
			if(typeof onBtn5Click == "function") {
				button_5.addEventListener("click", onBtn5Click);
			}
			container.addChild(button_5, {
				"top": "250px",
				"left": "20px",
				"width": "159px",
				"height": "20px"
			});
			
			var userDefinedControl_1 = new udc.han.slots("hanSlot");
			container.addChild(userDefinedControl_1, {
				"top": "280px",
				"left": "20px",
				"width": "300px",
				"height": "300px"
			});
			
			var group_2 = new cpr.controls.Container("grp2");
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.setColumns(["100px", "1fr"]);
			formLayout_1.setRows(["30px", "30px", "30px"]);
			group_2.setLayout(formLayout_1);
			(function(container){
				var output_3 = new cpr.controls.Output("opt3");
				output_3.value = "col1";
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_4 = new cpr.controls.Output("opt4");
				output_4.value = "col2";
				container.addChild(output_4, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_5 = new cpr.controls.Output("opt5");
				output_5.value = "col3";
				container.addChild(output_5, {
					"colIndex": 0,
					"rowIndex": 2,
					"colSpan": 1,
					"rowSpan": 1
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				inputBox_1.bind("value").toDataMap(app.lookup("dm2"), "column1");
				if(typeof onIpb1ValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpb1ValueChange);
				}
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var inputBox_2 = new cpr.controls.InputBox("ipb2");
				inputBox_2.bind("value").toDataMap(app.lookup("dm2"), "column2");
				if(typeof onIpb1ValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpb1ValueChange);
				}
				container.addChild(inputBox_2, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var inputBox_3 = new cpr.controls.InputBox("ipb3");
				inputBox_3.bind("value").toDataMap(app.lookup("dm2"), "column3");
				if(typeof onIpb1ValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpb1ValueChange);
				}
				container.addChild(inputBox_3, {
					"colIndex": 1,
					"rowIndex": 2
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "377px",
				"left": "330px",
				"width": "287px",
				"height": "203px"
			});
			
			var button_6 = new cpr.controls.Button("btn6");
			button_6.value = "udc 에 바인딩시켜보기";
			if(typeof onBtn6Click == "function") {
				button_6.addEventListener("click", onBtn6Click);
			}
			container.addChild(button_6, {
				"top": "590px",
				"left": "20px",
				"width": "328px",
				"height": "36px"
			});
			
			var button_7 = new cpr.controls.Button("btn7");
			button_7.value = "Button";
			if(typeof onBtn7Click == "function") {
				button_7.addEventListener("click", onBtn7Click);
			}
			container.addChild(button_7, {
				"top": "384px",
				"left": "694px",
				"width": "190px",
				"height": "31px"
			});
			
			var button_8 = new cpr.controls.Button("btn8");
			button_8.value = "Button";
			if(typeof onBtn8Click == "function") {
				button_8.addEventListener("click", onBtn8Click);
			}
			container.addChild(button_8, {
				"top": "453px",
				"left": "694px",
				"width": "190px",
				"height": "31px"
			});
			
			var button_9 = new cpr.controls.Button("btn9");
			button_9.value = "udc app title 찾기";
			if(typeof onBtn9Click == "function") {
				button_9.addEventListener("click", onBtn9Click);
			}
			container.addChild(button_9, {
				"top": "636px",
				"left": "16px",
				"width": "328px",
				"height": "36px"
			});
			
			var button_10 = new cpr.controls.Button("btn10");
			button_10.value = "Button";
			if(typeof onBtn10Contextmenu == "function") {
				button_10.addEventListener("contextmenu", onBtn10Contextmenu);
			}
			container.addChild(button_10, {
				"top": "132px",
				"left": "589px",
				"width": "308px",
				"height": "108px"
			});
			
			var button_11 = new cpr.controls.Button("btn11");
			button_11.value = "classTest";
			button_11.style.bindClass().toExpression("\"abcd efgt\"");
			if(typeof onBtn11Click == "function") {
				button_11.addEventListener("click", onBtn11Click);
			}
			container.addChild(button_11, {
				"top": "682px",
				"left": "20px",
				"width": "169px",
				"height": "47px"
			});
			
			var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
			container.addChild(numberEditor_1, {
				"top": "695px",
				"left": "476px",
				"width": "467px",
				"height": "20px"
			});
			
			var button_12 = new cpr.controls.Button("btn12");
			button_12.value = "load dispatch";
			if(typeof onBtn12Click == "function") {
				button_12.addEventListener("click", onBtn12Click);
			}
			container.addChild(button_12, {
				"top": "636px",
				"left": "380px",
				"width": "161px",
				"height": "36px"
			});
			
			var button_13 = new cpr.controls.Button("btn13");
			button_13.value = "Button prop test";
			if(typeof onBtn13Click == "function") {
				button_13.addEventListener("click", onBtn13Click);
			}
			container.addChild(button_13, {
				"top": "483px",
				"left": "694px",
				"width": "190px",
				"height": "31px"
			});
			if(typeof onBodyBeforeUnload == "function"){
				app.addEventListener("before-unload", onBodyBeforeUnload);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "testest";
	cpr.core.Platform.INSTANCE.register(app);
})();
