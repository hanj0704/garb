/*
 * App URI: 202107/angleTest
 * Source Location: 202107/angleTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202107/angleTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * angleTest.js
			 * Created at 2021. 7. 14. 오전 9:05:46.
			 *
			 * @author HANS
			 ************************************************/
			
			var angle = 0;
			var animator = new cpr.animation.Animator(0.5,cpr.animation.TimingFunction.LINEAR);
			/*
			 * "Button" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				var vcGrpRbt = app.lookup("grp1");
				var nbe = app.lookup("nbe1").numberValue;
				
				var vnAzimuth = parseInt(nbe/90);
				var vnRemain = nbe%90;
			//	if(vnAzimuth == 4) {
			//		vnAzimuth = 0;
			//	}
				console.log(angle);
				console.log(vnAzimuth);
				angle = angle%360;
				console.log(vnAzimuth-Math.abs(angle/90));
				switch(vnAzimuth-Math.abs(angle/90)){
					case 1 :
					if(angle ==90) {
						angle += 90;
					} else {
						
						angle -= 90;
					}
						break;
					case 2 :
					angle -= 180;
						break;
					case 3 : 
					angle += 90;
						break;
					case -1 :
					angle += 90;
						break;
					case -2 :
					angle += 180;
						break;
					case -3 :
					if(nbe ==360){
						
						angle += 90;
					} else{
						
						angle -= 90;
					}
						break;
					default :
						break;
				}
			//	if(mbe < 0) {
			//		console.log("아 띠용~");
			//		nbe = (360-nbe) * -1;
			//	} else {
			//		
			//	if(nbe > 270) {
			//		console.log("ㅋㅅㅋ");
			//		if(nbe > mbe) {
			//			console.log("ㅋㅋ");
			//			nbe = (360-nbe)*-1;
			//		} else {
			////			nbe = (360-nbe)*-1;
			//			console.log("타긴하냐?");
			//		}
			//		
			//	}
			//	}
			//	mbe =  nbe;
			//	if(nbe == 360) {
			//		mbe = -1;
			//	}
			console.log(angle);
					
				vcGrpRbt.style.animateTo({
						"transform" : "rotate(" + (angle) + "deg)"
					},0.5,cpr.animation.TimingFunction.LINEAR);
					
			}
			
			
			/*
			 * 그룹에서 transitionstart 이벤트 발생 시 호출.
			 * CSS 속성 트랜지션 시작 시 발생하는 이벤트.
			 */
			function onGrp1Transitionstart(/* cpr.events.CTransitionEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grp1 = e.control;
				
			}
			
			
			/*
			 * 그룹에서 transitionend 이벤트 발생 시 호출.
			 * CSS 속성 트랜지션 종료 후 발생하는 이벤트.
			 */
			function onGrp1Transitionend(/* cpr.events.CTransitionEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grp1 = e.control;
				
				console.log("TRANSITION END~~");
				if(angle%360 == 0) {
					console.log("ㅋㅋ");
					angle = 0;
					app.lookup("grp1").style.removeStyle("transform");
				}
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				var vcGrp = app.lookup("grp1");
				
				vcGrp.style.removeStyle("transform");
			}
			
			
			/*
			 * "case2" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				var nbe = app.lookup("nbe1").numberValue;
				var vcGrpRbt = app.lookup("grp1");
				
				var vnAzimuth = parseInt(nbe/90);
				var vnRemain = nbe%90 > 0 ? 1 : 0;
				var vnGoal = 0;
				if(nbe >= 270 && nbe <360 && angle == 0){
					angle = 90;
				} else if(nbe == 360 && angle == 0) {
					
				}
				else {
					if(angle <=0) {
				
						if(nbe > Math.abs(angle)) {
							vnGoal = (vnAzimuth+vnRemain- Math.abs(angle/90))*90;
							angle = angle - vnGoal;
						} else if(nbe < Math.abs(angle)) {
							vnGoal = (Math.abs(angle/90)-vnAzimuth) * 90;
							angle = angle + vnGoal;
						}
					} else {
						if(nbe > Math.abs(360-angle)) {
							vnGoal = (vnAzimuth + vnRemain - Math.abs((360-angle)/90)) *90;
							angle = angle - vnGoal;
						} else if(nbe < Math.abs(360-angle)) {
							vnGoal = (Math.abs((360-angle)/90)- vnAzimuth) * 90;
							angle = angle + vnGoal;
						}
					}
				}
				vcGrpRbt.style.animateTo({
						"transform" : "rotate(" + (angle) + "deg)"
					},0.5,cpr.animation.TimingFunction.LINEAR);
					
					/**
					 * 넘어오는 각과 현재 팔의 각도의 차를 구해서 차이 만큼 90도 기준의 각을 더하거나 뺴서 팔을 움직인다.
					 * 
					 * 넘어온 값이 0이거나 360인가?
					 * 		지금 앵글 값이 270에서 360 사이인가?
					 * 		지금 앵글 값이 270에서 360 사이인가? 
					 * 			바로 360으로;
					 * 그렇지 않으면
					 * 		현재 팔의 각도는0인가?
					 * 			360도에서 해당 각도로 도달하는게 빠른가, 아니면 0도에서 해당 각도로 도달하는게 빠른가? 하나 찾아서 이동~~
					 * 			넘어온값이 270~360 사이의 값인가?
					 * 
					 * 		그렇지 않은가?
					 * 			현재 각도와 넘어온 각도를 비교하여 현재 각도가 크면, vnGoal을 더해주고
					 * 			그렇지 않으면 vnGoal을 뺴라~
					 * 
					 */
			}
			/*
			 * "case3" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
					var nbe = app.lookup("nbe1").numberValue;
				var vcGrpRbt = app.lookup("grp1");
				
				if(nbe == 0 || nbe == 360) {
					
					if(Math.abs(angle) <=360 && Math.abs(angle) >= 270) {
						
					}
				}
				var vnAzimuth = parseInt(nbe/90);
				var vnRemain = nbe%90 > 0 ? 1 : 0;
				var vnGoal = 0;
				if(nbe == 0 ){
					var vnNowAngle = Math.abs(angle);
			//		if(vnNowAngle)
					
				} else if(nbe == 360){
					
				} else {
					
					if(nbe > Math.abs(angle)) {
						
						vnGoal = (vnAzimuth+vnRemain- Math.abs(angle/90))*90;
						angle = angle - vnGoal;
					} else if(nbe < Math.abs(angle)) {
						
						vnGoal = (Math.abs(angle/90)-vnAzimuth) * 90;
						console.log(vnGoal);
						angle = angle + vnGoal;
					}
				
				}
				vcGrpRbt.style.animateTo({
						"transform" : "rotate(" + (angle) + "deg)"
					},0.5,cpr.animation.TimingFunction.LINEAR);
					
			}
			
			
			/*
			 * "case2" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				
				app.lookup("nbe1").value = 270;
				app.lookup("btn3").click();
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn5");
			button_1.value = "case2";
			if(typeof onBtn5Click == "function") {
				button_1.addEventListener("click", onBtn5Click);
			}
			container.addChild(button_1, {
				"top": "59px",
				"left": "280px",
				"width": "78px",
				"height": "39px"
			});
			
			var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
			container.addChild(numberEditor_1, {
				"top": "77px",
				"left": "357px",
				"width": "99px",
				"height": "40px"
			});
			
			var button_2 = new cpr.controls.Button("btn7");
			button_2.value = "case1";
			if(typeof onBtn7Click == "function") {
				button_2.addEventListener("click", onBtn7Click);
			}
			container.addChild(button_2, {
				"top": "10px",
				"left": "249px",
				"width": "78px",
				"height": "39px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_3 = new cpr.controls.Button("btn6");
				button_3.value = "Button";
				container.addChild(button_3, {
					"top": "2px",
					"left": "70px",
					"width": "58px",
					"height": "135px"
				});
			})(group_1);
			if(typeof onGrp1Transitionstart == "function") {
				group_1.addEventListener("transitionstart", onGrp1Transitionstart);
			}
			if(typeof onGrp1Transitionend == "function") {
				group_1.addEventListener("transitionend", onGrp1Transitionend);
			}
			container.addChild(group_1, {
				"top": "10px",
				"left": "10px",
				"width": "199px",
				"height": "157px"
			});
			
			var button_4 = new cpr.controls.Button("btn2");
			button_4.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_4.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_4, {
				"top": "177px",
				"left": "249px",
				"width": "78px",
				"height": "39px"
			});
			
			var button_5 = new cpr.controls.Button("btn3");
			button_5.value = "case2";
			if(typeof onBtn3Click == "function") {
				button_5.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_5, {
				"top": "59px",
				"left": "249px",
				"width": "78px",
				"height": "39px"
			});
			
			var button_6 = new cpr.controls.Button("btn4");
			button_6.value = "case3";
			if(typeof onBtn4Click == "function") {
				button_6.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_6, {
				"top": "108px",
				"left": "249px",
				"width": "78px",
				"height": "39px"
			});
		}
	});
	app.title = "angleTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
