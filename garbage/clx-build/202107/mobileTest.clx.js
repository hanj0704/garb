/*
 * App URI: 202107/mobileTest
 * Source Location: 202107/mobileTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202107/mobileTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * mobileTest.js
			 * Created at 2021. 7. 23. 오후 3:27:20.
			 *
			 * @author HANS
			 ************************************************/
			
			cpr.events.EventBus.INSTANCE.addFilter("open", function(e){
				var control = e.control;
				
				alert("zz");
			});
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				app.lookup("cmb1").open();
			}
			
			
			/*
			 * 콤보 박스에서 open 이벤트 발생 시 호출.
			 * 리스트박스를 열때 발생하는 이벤트.
			 */
			function onCmb1Open(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb1 = e.control;
				
				e.preventDefault();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = linker.dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21"},
					{"column1": "column12", "column2": "column22"},
					{"column1": "column13", "column2": "column23"},
					{"column1": "column14", "column2": "column24"},
					{"column1": "column15", "column2": "column25"},
					{"column1": "column16", "column2": "column26"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.han.cmb();
			userDefinedControl_1.targetDs = app.lookup("ds1");
			userDefinedControl_1.labelC = "column1";
			userDefinedControl_1.valueC = "column2";
			container.addChild(userDefinedControl_1, {
				"top": "20px",
				"left": "20px",
				"width": "215px",
				"height": "117px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cmb1");
			comboBox_1.preventInput = true;
			(function(comboBox_1){
				comboBox_1.addItem(new cpr.controls.Item("label1", "value1"));
				comboBox_1.addItem(new cpr.controls.Item("label2", "value2"));
				comboBox_1.addItem(new cpr.controls.Item("label3", "value3"));
				comboBox_1.addItem(new cpr.controls.Item("label4", "value4"));
				comboBox_1.addItem(new cpr.controls.Item("label5", "value5"));
			})(comboBox_1);
			if(typeof onCmb1Open == "function") {
				comboBox_1.addEventListener("open", onCmb1Open);
			}
			container.addChild(comboBox_1, {
				"top": "20px",
				"left": "245px",
				"width": "157px",
				"height": "41px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "71px",
				"left": "245px",
				"width": "157px",
				"height": "29px"
			});
		}
	});
	app.title = "mobileTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
