/*
 * App URI: 202107/tester
 * Source Location: 202107/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202107/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2021. 7. 13. 오후 5:44:54.
			 *
			 * @author HANS
			 ************************************************/
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				app.lookup("sms1").send();
				
			}
			
			
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSms1SubmitSuccess(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
				
				app.lookup("opt2").redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				var a = null;
				console.log(a[1]);
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				var opts = app.lookup("opt5");
				var cont = app.getContainer();
				
			}
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				var cont = app.getContainer();
				
				var opts = app.lookup("opt5");
				
				
				
			}
			
			
			/*
			 * 루트 컨테이너에서 property-change 이벤트 발생 시 호출.
			 * 앱의 속성이 변경될 때 발생하는 이벤트 입니다.
			 */
			function onBodyPropertyChange(/* cpr.events.CPropertyChangeEvent */ e){
				var vbOpended = app.getAppProperty("expanded");
				var voRtAppIns = app.getRootAppInstance();
			
				var cont = app.getContainer();
				
				var opts = voRtAppIns.lookup("복지지도");
				
				if(vbOpended) {
					console.log("니냐?");
				
			//	var animator = new cpr.animation.Animator();
				
				
			//	animator.addTask(function name(args){
					
			//		voRtAppIns.getContainer().updateConstraint(opts, {width : "19px"});
					
					opts.style.animateTo({
						"width" : "19px"
					},0.35,cpr.animation.TimingFunction.EASE_OUT_CUBIC);
			//	});
				opts.addEventListenerOnce("animationend", function(){
					console.log("둥");
				})
				opts.getParent().addEventListenerOnce("animationend",function(){
					console.log("힣");
				})
			//	animator.run().then(function(input){
					app.lookup("btn1").visible =  false;
					app.setAppProperty("expanded", true, false);
			//	});
				
				} else {
			//		var animator = new cpr.animation.Animator(0.35,cpr.animation.TimingFunction.EASE_OUT_CUBIC);
				
			//	animator.addTask(function name(args){
					app.lookup("btn1").visible =  true;
			//		voRtAppIns.getContainer().updateConstraint(opts, {width : "401px"});
					
					opts.style.animateTo({
						"width" : "401px"
					},0.35, cpr.animation.TimingFunction.EASE_OUT_CUBIC);
			//	});
			//	animator.run().then(function(input){
					
					app.setAppProperty("expanded", false, false);
			//	});
				
				}
			}
			
			/*
			 * 루트 컨테이너에서 animationend 이벤트 발생 시 호출.
			 * 애니메이션 종료 후 발생하는 이벤트.
			 */
			function onBodyAnimationend(/* cpr.events.CAnimationEvent */ e){
				
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				app.lookup("sms1").send();
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				console.log(isNaN("00"));
				console.log(isNaN(25));
				console.log(isNaN("F12"));
				
			}
			var a = 0;
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click3(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				setInterval(function(){
					app.getContainer().scrollTo(0, a,0.1,cpr.animation.TimingFunction.LINEAR);
					a += 10;
				}, 100)
			}
			
			
			/*
			 * "Button" 버튼(btn11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn11Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn11 = e.control;
				
				app.lookup("ipb1").redraw();
				app.lookup("cmb1").redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn10Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn10 = e.control;
				app.lookup("opt1").value = "Zzzzzzzzzzzzzzzzzzz";
			};
			// End - User Script
			
			// Header
			app.declareAppProperty("expanded", false);
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{"name": "column1"}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "/test/gaehang.do";
			submission_1.mediaType = "application/x-www-form-urlencoded;simple";
			submission_1.addRequestData(dataSet_1, cpr.protocols.PayloadType.all);
			submission_1.addResponseData(dataMap_1, false);
			if(typeof onSms1SubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSms1SubmitSuccess);
			}
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.distribution = "center";
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var radioButton_1 = new cpr.controls.RadioButton("rdb1");
			radioButton_1.colCount = 2;
			(function(radioButton_1){
				radioButton_1.addItem(new cpr.controls.Item("label1", "value1"));
				radioButton_1.addItem(new cpr.controls.Item("label2", "value2"));
				radioButton_1.addItem(new cpr.controls.Item("label3", "value3"));
				radioButton_1.addItem(new cpr.controls.Item("label4", "value4"));
				radioButton_1.addItem(new cpr.controls.Item("label5", "value5"));
				radioButton_1.addItem(new cpr.controls.Item("label6", "value6"));
				radioButton_1.addItem(new cpr.controls.Item("label7", "value7"));
				radioButton_1.addItem(new cpr.controls.Item("label8", "value8"));
			})(radioButton_1);
			container.addChild(radioButton_1, {
				"autoSize": "none",
				"width": "394px",
				"height": "200px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click3 == "function") {
				button_1.addEventListener("click", onBtn1Click3);
			}
			container.addChild(button_1, {
				"width": "79px",
				"height": "265px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			container.addChild(button_2, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			container.addChild(button_3, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Button";
			container.addChild(button_4, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.value = "Button";
			container.addChild(button_5, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var button_6 = new cpr.controls.Button("btn6");
			button_6.value = "Button";
			container.addChild(button_6, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var button_7 = new cpr.controls.Button("btn7");
			button_7.value = "Button";
			container.addChild(button_7, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var button_8 = new cpr.controls.Button("btn8");
			button_8.value = "Button";
			container.addChild(button_8, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var button_9 = new cpr.controls.Button("btn9");
			button_9.value = "Button";
			container.addChild(button_9, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var button_10 = new cpr.controls.Button("btn10");
			button_10.value = "Button";
			if(typeof onBtn10Click == "function") {
				button_10.addEventListener("click", onBtn10Click);
			}
			container.addChild(button_10, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var button_11 = new cpr.controls.Button("btn11");
			button_11.value = "Button";
			if(typeof onBtn11Click == "function") {
				button_11.addEventListener("click", onBtn11Click);
			}
			container.addChild(button_11, {
				"autoSize": "none",
				"width": "1024px",
				"height": "265px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			inputBox_1.value = "ㅋㅋㅋㅋㅋㅋ";
			container.addChild(inputBox_1, {
				"autoSize": "width",
				"width": "100px",
				"height": "20px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cmb1");
			comboBox_1.value = "value1";
			(function(comboBox_1){
				comboBox_1.addItem(new cpr.controls.Item("label1", "value1"));
				comboBox_1.addItem(new cpr.controls.Item("label2label2label2label2", "value2"));
			})(comboBox_1);
			container.addChild(comboBox_1, {
				"autoSize": "width",
				"width": "100px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "Output";
			container.addChild(output_1, {
				"autoSize": "width",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyPropertyChange == "function"){
				app.addEventListener("property-change", onBodyPropertyChange);
			}
			if(typeof onBodyAnimationend == "function"){
				app.getContainer().addEventListener("animationend", onBodyAnimationend);
			}
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
