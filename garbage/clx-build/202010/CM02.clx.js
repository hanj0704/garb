/*
 * App URI: 202010/CM02
 * Source Location: 202010/CM02.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202010/CM02", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * CH02.js
			 * Created at 2020. 6. 17. 오전 11:10:55.
			 *
			 * @author HanaTI
			 ************************************************/
			
			var util = createCommonUtil();
			var trscDvCd = "2";
			
			/*********************************************************************
			 *
			 * 처리 Action에 따른 분기(화면 공통)
			 * Execuet, Cleare, 등등 이벤트 처리
			 *
			 * *******************************************************************/  
			function onActionExecute()
			{
				util.DataMap.setValue(app, "input", "trscDvCd", trscDvCd);
				util.Submit.send(app, "subExec", null, function(pbSuccess){
					if(pbSuccess){
						if (trscDvCd =="3"){
							onActionClear();	
						}
					}
				});	
			
			}    
			exports.onActionExecute = onActionExecute;
			
			function onActionClear()
			{
				util.DataSet.clear(app, "grid01");
				util.DataSet.clear(app, "grid02");
				util.DataSet.clear(app, "grid04");
				trscDvCd = "2";
				util.Grid.reset(app, "grd1");
				util.Group.clearAllChildren(app, "grd2");
			}
			
			exports.onActionClear = onActionClear;
			
			
			function onAfRsprApv()
			{
				onActionClear();
			}
			exports.onAfRsprApv = onAfRsprApv;
			/**********************************************************************/
			
			
			/*
			 * "Search" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
			    /** 
			    * @type cpr.controls.Button
			    */
				var button = e.control;
				app.lookup("grid01").clear();
				app.lookup("grid02").clear();
			
				var valRslt = util.validate(app, "srch");
				if(valRslt==true){
					util.DataMap.setValue(app, "input", "trscDvCd", "2");   
					util.Submit.send(app, "subList", null, function(pbSuccess){
						if(pbSuccess){
							util.Control.setEnable(app, false, "grd2");
							app.lookup("grd1").sort("userId");
						}
					});	
					util.Control.setEnable(app, true, ["btnAdd","btnUpd","btnSave"]);
				}
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrid2SelectionChange(/* cpr.events.CSelectionEvent */ e){
			   /** 
			    * @type cpr.controls.Grid
			    */
				var grid2 = e.control;
				var selRow = grid2.getSelectedRow();
				var rowData = selRow.getRowData();
				
				app.lookup("dm1").build(rowData);
				util.Control.redraw(app, "grd2");
			   
			   	if(trscDvCd =="3"){
					util.Control.setEnable(app, true, ["grd2"]);		
				}else if(selRow.getState()=="2"&& trscDvCd =="1"){
					util.Control.setEnable(app, true, ["grd2","srchUserId"]);
				}
				else{
					util.Control.setEnable(app, false, ["grd2","srchUserId"]);
				}
				
			    var cmbMngr1 = app.lookup("cmbMngr1");
			    var cmbMngr2 = app.lookup("cmbMngr2");
			    var cmbMngr3 = app.lookup("cmbMngr3");
			    var cmbRefnUserId = app.lookup("cmbRefnUserId");
			
				cmbMngr1.clearSelection();
				cmbMngr2.clearSelection();
				cmbMngr3.clearSelection();
				cmbRefnUserId.clearSelection();
				
				if(rowData["refnUserId"]){
					cmbRefnUserId.selectItemByValue(rowData["refnUserId"]);
				}else{
					cmbMngr1.selectItemByValue(rowData["mngrId1"]);
					cmbMngr2.selectItemByValue(rowData["mngrId2"]);
					cmbMngr3.selectItemByValue(rowData["mngrId3"]);
					
					app.lookup("ipbIpAdr1").value = rowData["mngrIpAdr1"];
					app.lookup("ipbIpAdr2").value = rowData["mngrIpAdr2"];
					app.lookup("ipbIpAdr3").value = rowData["mngrIpAdr3"];	
				}
					
			}
			
			/*
			 * "Add" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
			    /** 
			    * @type cpr.controls.Button
			    */
				var button = e.control;		 
			
				var valRslt = util.validate(app, "srch");
				if(valRslt==true){
					var vcGrd1 = app.lookup("grd1");
					var totRow = vcGrd1.getRowCount();
					var selRow = vcGrd1.getSelectedRow();
				
					if(selRow){
						if( selRow.getState()=="2" && selRow.getString("userId")){
							addColumn(vcGrd1);
						}else if(selRow.getState()=="1" && util.Grid.getCellValue(app, "grd1", "userId", totRow-1)){
							addColumn(vcGrd1);
						}
					}else{
						addColumn(vcGrd1);
					}
				}	
			}
			
			function addColumn(/* cpr.controls.Grid */ vcGrd1){
					util.Control.setEnable(app, false , ["btnUpd"]);
					util.Control.setEnable(app, true  , ["cmbMngr1"  , "cmbMngr2" , "cmbMngr3"
											 	 ,  "ipbIpAdr1", "ipbIpAdr2", "ipbIpAdr3", "grd2","srchUserId"]);  
					trscDvCd = "1";
					var newRow = vcGrd1.insertRow(vcGrd1.getRowCount());
					var newRowIndex = newRow.getIndex();		
					vcGrd1.focusCell(newRowIndex, 0);
					util.Control.setEnable(app, true, "grd2");
					util.Control.setEnable(app, false, ["btnUpd","btnTmnt"]);
			}
			
			/*
			 * "Update" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick5(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				if(app.lookup("grd1").getSelectedRow()){
					trscDvCd = "3";
					util.Control.setEnable(app, false , ["btnAdd","srchUserId"]);
				    util.Control.setEnable(app, true  , ["grd2"]);	
				}
			}
			
			
			/*
			 * "Apply" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick6(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var cmbMngr1 		= app.lookup("cmbMngr1");
				var cmbMngr2 		= app.lookup("cmbMngr2");
				var cmbMngr3 		= app.lookup("cmbMngr3");
				var cmbRefnUserId   = app.lookup("cmbRefnUserId");
			   
				var grd1 = app.lookup("grd1");
				var grid02 = app.lookup("grid02");
				var dm1 = app.lookup("dm1");
				
				dm1.setValue("mngrUsrNm1", cmbMngr1.text);
				dm1.setValue("mngrUsrNm2", cmbMngr2.text);
				dm1.setValue("mngrUsrNm3", cmbMngr3.text);
				dm1.setValue("refnUserId", cmbRefnUserId.text);
				
				var selRowIdx = grd1.getSelectedRowIndex();
				
				grid02.updateRow(selRowIdx, dm1.getDatas());
			}
			
			
			/*
			 * 서치 인풋에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onInpUserIdClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.SearchInput
				 */
				var ipbUserId = e.control;
			
				util.Dialog.open(app, "biz/cm/CM11", 1000, 850, function(e){
					/** @type cpr.controls.Dialog */
					var dialog = e.control;
					
					var returnValue = dialog.returnValue;
					if(returnValue){
						var userId = returnValue["userId"];
						ipbUserId.value = userId;
						app.lookup("cmbTrscBrNo").selectItemByValue(returnValue["blngBrNo"]);
					}                           
				}, {"blngBrNo":util.Control.getValue(app, "cmbTrscBrNo")}, true);
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				util.Control.setEnable(app, false, ["btnUpd","btnSave","btnAdd","grd2"]);
			}
			
			
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmbRefnUserIdSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmbRefnUserId = e.control;
				var nm = cmbRefnUserId.value;
			   	
			   	if(nm){
			   		util.Control.setEnable(app, false, ["grdMngrs"]);
			   		util.Group.clearAllChildren(app, "grdMngrs");
			   	}else{
			   		util.Control.setEnable(app, true, ["grdMngrs"]);
			   	}
			   	
			   		var grid04 = app.lookup("grid04");
				var grdIdx = cmbRefnUserId.getDataSetIndexByValue(cmbRefnUserId.value);
					
				app.lookup("cmbMngr1").selectItemByValue(util.DataSet.getCellValue(app, "grid04", grdIdx, "mngrId1"));
				app.lookup("cmbMngr2").selectItemByValue(util.DataSet.getCellValue(app, "grid04", grdIdx, "mngrId2"));
				app.lookup("cmbMngr3").selectItemByValue(util.DataSet.getCellValue(app, "grid04", grdIdx, "mngrId3"));
				
				app.lookup("ipbIpAdr1").value = util.DataSet.getCellValue(app, "grid04", grdIdx, "mngrIpAdr1");
				app.lookup("ipbIpAdr2").value = util.DataSet.getCellValue(app, "grid04", grdIdx, "mngrIpAdr2");
				app.lookup("ipbIpAdr3").value = util.DataSet.getCellValue(app, "grid04", grdIdx, "mngrIpAdr3");
			}
			
			
			/*
			 * 콤보 박스에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onCmbRefnUserIdItemClick(/* cpr.events.CItemEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmbRefnUserId = e.control;
			
				
			}
			
			
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmbMngr1SelectionChange2(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmbMngr1 = e.control;
				var nm = cmbMngr1.value;
				app.lookup("ipbMngr1").text = nm;
			}
			
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmbMngr2SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmbMngr2 = e.control;
				var nm = cmbMngr2.value;
				app.lookup("ipbMngr2").text = nm;	
			}
			
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmbMngr3SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmbMngr3 = e.control;
				var nm = cmbMngr3.value;
				app.lookup("ipbMngr3").text = nm;
			}
			
			
			/*
			 * 서치 인풋에서 search 이벤트 발생 시 호출.
			 * Searchinput의 enter키 또는 검색버튼을 클릭하여 인풋의 값이 Search될때 발생하는 이벤트
			 */
			function onSrchUserIdSearch(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.SearchInput
				 */
				var srchUserId = e.control;
				util.Dialog.open(app, "biz/cm/CM11", 1000, 850, function(e){
				/** @type cpr.controls.Dialog */
				var dialog = e.control;
				
				var returnValue = dialog.returnValue;
				if(returnValue){
					var userId = returnValue["userId"];
					srchUserId.value = userId;
				}                           
			}, {"blngBrNo":util.Control.getValue(app, "cmbTrscBrNo")}, true);	
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("grid01");
			dataSet_1.parseData({
				"columns" : [
					{"name": "userId"},
					{"name": "usrLocalNm"},
					{"name": "ipAdr"},
					{"name": "mngrId"},
					{"name": "mngrIpAdr"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("grid02");
			dataSet_2.parseData({
				"columns" : [
					{"name": "userId"},
					{"name": "mngrId1"},
					{"name": "mngrUsrNm1"},
					{"name": "mngrIpAdr1"},
					{"name": "mngrId2"},
					{"name": "mngrUsrNm2"},
					{"name": "mngrIpAdr2"},
					{"name": "mngrId3"},
					{"name": "mngrUsrNm3"},
					{"name": "mngrIpAdr3"},
					{"name": "refnUserId"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("grid04");
			dataSet_3.parseData({
				"columns" : [
					{"name": "userId"},
					{"name": "mngrId1"},
					{"name": "mngrUsrNm1"},
					{"name": "mngrIpAdr1"},
					{"name": "mngrId2"},
					{"name": "mngrUsrNm2"},
					{"name": "mngrIpAdr2"},
					{"name": "mngrId3"},
					{"name": "mngrUsrNm3"},
					{"name": "mngrIpAdr3"},
					{"name": "refnUserId"}
				]
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("input");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "trscDvCd",
						"defaultValue": ""
					},
					{"name": "userId"},
					{"name": "trscBrNo"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dm1");
			dataMap_2.parseData({
				"columns" : [
					{"name": "userId"},
					{"name": "mngrId1"},
					{"name": "mngrUsrNm1"},
					{"name": "mngrIpAdr1"},
					{"name": "mngrId2"},
					{"name": "mngrUsrNm2"},
					{"name": "mngrIpAdr2"},
					{"name": "mngrId3"},
					{"name": "mngrUsrNm3"},
					{"name": "mngrIpAdr3"},
					{"name": "refnUserId"}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/CMO0200A.SVC";
			submission_1.mediaType = "application/json";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_2, true, "grid02");
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var matrixSubmission_1 = new cpr.protocols.MatrixSubmission("subExec");
			matrixSubmission_1.async = true;
			matrixSubmission_1.withCredentials = false;
			matrixSubmission_1.method = "post";
			matrixSubmission_1.action = "/CMO0200A.SVC";
			matrixSubmission_1.setProtocolDataModel(new cpr.protocols.matrix.MatrixDataModel({
				"request": {
					"format": "object",
					"data": {
						"input" : {
							"format": "object",
							"data": {
								"trscBrNo": {"format": "simple", "dataControl": dataMap_1, "path": "@trscBrNo"},
								"trscDvCd": {"format": "simple", "dataControl": dataMap_1, "path": "@trscDvCd"},
								"grid01": {
									"format": "array",
									"dataControl": dataSet_2,
									"data": {
										"userId": {"format": "simple", "path": "@userId"},
										"mngrId1": {"format": "simple", "path": "@mngrId1"},
										"mngrUsrNm1": {"format": "simple", "path": "@mngrUsrNm1"},
										"mngrIpAdr1": {"format": "simple", "path": "@mngrIpAdr1"},
										"mngrId2": {"format": "simple", "path": "@mngrId2"},
										"mngrUsrNm2": {"format": "simple", "path": "@mngrUsrNm2"},
										"mngrIpAdr2": {"format": "simple", "path": "@mngrIpAdr2"},
										"mngrId3": {"format": "simple", "path": "@mngrId3"},
										"mngrUsrNm3": {"format": "simple", "path": "@mngrUsrNm3"},
										"mngrIpAdr3": {"format": "simple", "path": "@mngrIpAdr3"},
										"refnUserId": {"format": "simple", "path": "@refnUserId"}
									}
								}
							}
						}
					}
				},
				"response": {
					"format": "object",
					"data": {}
				}
			}));
			app.register(matrixSubmission_1);
			
			app.supportMedia("all and (min-width: 1324px)", "content-default");
			app.supportMedia("all and (max-width: 1323px)", "content-tablet");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"font-size" : "12px",
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("srch");
				group_2.style.setClasses(["search-box"]);
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "1fr";
				formLayout_1.rightMargin = "5px";
				formLayout_1.bottomMargin = "1fr";
				formLayout_1.leftMargin = "5px";
				formLayout_1.setColumns(["100px", "1fr", "1fr", "1fr", "100px", "1fr", "1fr", "1fr", "100px", "1fr", "1fr", "1fr", "140px"]);
				formLayout_1.setRows(["25px"]);
				group_2.setLayout(formLayout_1);
				(function(container){
					var button_1 = new cpr.controls.Button();
					button_1.bind("value").toLanguage("srch");
					if(typeof onButtonClick == "function") {
						button_1.addEventListener("click", onButtonClick);
					}
					container.addChild(button_1, {
						"colIndex": 12,
						"rowIndex": 0,
						"horizontalAlign": "center",
						"verticalAlign": "center"
					});
					var output_1 = new cpr.controls.Output();
					output_1.style.setClasses(["label", "pr-1"]);
					output_1.bind("value").toLanguage("trscBrNo_s1");
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var comboBox_1 = new cpr.controls.ComboBox("cmbTrscBrNo");
					comboBox_1.userAttr({
						"dvCd": "BR_CD:0000",
						"required": "Y"
					});
					comboBox_1.style.setClasses(["required"]);
					comboBox_1.bind("value").toDataMap(app.lookup("input"), "trscBrNo");
					(function(comboBox_1){
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"colIndex": 1,
						"rowIndex": 0,
						"colSpan": 3,
						"rowSpan": 1
					});
					var output_2 = new cpr.controls.Output();
					output_2.style.setClasses(["label", "pr-1"]);
					output_2.bind("value").toLanguage("userId");
					container.addChild(output_2, {
						"colIndex": 4,
						"rowIndex": 0
					});
					var searchInput_1 = new cpr.controls.SearchInput("ipbUserId");
					searchInput_1.style.css({
						"font-family" : "sans-serif"
					});
					searchInput_1.bind("value").toDataMap(app.lookup("input"), "userId");
					if(typeof onInpUserIdClick == "function") {
						searchInput_1.addEventListener("search", onInpUserIdClick);
					}
					container.addChild(searchInput_1, {
						"colIndex": 5,
						"rowIndex": 0,
						"colSpan": 3,
						"rowSpan": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "none",
					"width": "924px",
					"height": "45px"
				});
				var grid_1 = new cpr.controls.Grid("grd1");
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("grid02"),
					"columns": [
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [
							{"height": "24px"},
							{"height": "24px"}
						],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 2, "colSpan": 1},
								"configurator": function(cell){
									cell.targetColumnName = "userId";
									cell.filterable = false;
									cell.sortable = false;
									cell.bind("text").toLanguage("userId");
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "mngrId1";
									cell.filterable = false;
									cell.sortable = false;
									cell.bind("text").toLanguage("mngrId");
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "mngrUsrNm1";
									cell.filterable = false;
									cell.sortable = false;
									cell.bind("text").toLanguage("nm");
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "mngrId2";
									cell.filterable = false;
									cell.sortable = false;
									cell.bind("text").toLanguage("mngrId");
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "mngrUsrNm2";
									cell.filterable = false;
									cell.sortable = false;
									cell.bind("text").toLanguage("nm");
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "mngrId3";
									cell.filterable = false;
									cell.sortable = false;
									cell.bind("text").toLanguage("mngrId");
								}
							},
							{
								"constraint": {"rowIndex": 1, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "mngrUsrNm3";
									cell.filterable = false;
									cell.sortable = false;
									cell.bind("text").toLanguage("nm");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1, "rowSpan": 1, "colSpan": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("mngr1");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3, "rowSpan": 1, "colSpan": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("mngr2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5, "rowSpan": 1, "colSpan": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("mngr3");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7, "rowSpan": 2, "colSpan": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("refnUserId");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "userId";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "mngrId1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "mngrUsrNm1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "mngrId2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "mngrUsrNm2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "mngrId3";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "mngrUsrNm3";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "refnUserId";
								}
							}
						]
					}
				});
				if(typeof onGrid2SelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrid2SelectionChange);
				}
				container.addChild(grid_1, {
					"autoSize": "none",
					"width": "924px",
					"height": "145px"
				});
				var group_3 = new cpr.controls.Container();
				group_3.style.setClasses(["edit-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "1fr";
				formLayout_2.rightMargin = "5px";
				formLayout_2.bottomMargin = "1fr";
				formLayout_2.leftMargin = "5px";
				formLayout_2.setColumns(["1fr", "1fr", "100px", "120px"]);
				formLayout_2.setRows(["25px"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var button_2 = new cpr.controls.Button("btnAdd");
					button_2.bind("value").toLanguage("add");
					if(typeof onButtonClick2 == "function") {
						button_2.addEventListener("click", onButtonClick2);
					}
					container.addChild(button_2, {
						"colIndex": 2,
						"rowIndex": 0,
						"horizontalAlign": "center",
						"verticalAlign": "center"
					});
					var button_3 = new cpr.controls.Button("btnUpd");
					button_3.bind("value").toLanguage("upd");
					if(typeof onButtonClick5 == "function") {
						button_3.addEventListener("click", onButtonClick5);
					}
					container.addChild(button_3, {
						"colIndex": 3,
						"rowIndex": 0,
						"horizontalAlign": "left",
						"verticalAlign": "center"
					});
				})(group_3);
				container.addChild(group_3, {
					"autoSize": "none",
					"width": "924px",
					"height": "45px"
				});
				var group_4 = new cpr.controls.Container("grd2");
				group_4.userAttr({"isGrid01": "Y"});
				group_4.style.setClasses(["cl-form-group"]);
				var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("dm1"));
				group_4.setBindContext(dataMapContext_1);
				group_4.bind("visible").toDataColumn("mngrId1");
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.topMargin = "5px";
				formLayout_3.rightMargin = "5px";
				formLayout_3.bottomMargin = "5px";
				formLayout_3.leftMargin = "5px";
				formLayout_3.setColumns(["100px", "1fr", "100px", "1fr", "100px", "1fr"]);
				formLayout_3.setRows(["30px", "30px", "30px", "30px", "30px", "30px", "30px", "30px"]);
				group_4.setLayout(formLayout_3);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.style.css({
						"font-weight" : "bold",
						"font-style" : "normal"
					});
					output_3.bind("value").toLanguage("userIdMngrDtls");
					container.addChild(output_3, {
						"colIndex": 0,
						"rowIndex": 0,
						"colSpan": 6,
						"rowSpan": 1
					});
					var output_4 = new cpr.controls.Output();
					output_4.style.setClasses(["label", "pr-1"]);
					output_4.bind("value").toLanguage("userId");
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var searchInput_2 = new cpr.controls.SearchInput("srchUserId");
					searchInput_2.bind("value").toDataColumn("userId");
					if(typeof onSearchInputClick == "function") {
						searchInput_2.addEventListener("search", onSearchInputClick);
					}
					if(typeof onSrchUserIdSearch == "function") {
						searchInput_2.addEventListener("search", onSrchUserIdSearch);
					}
					container.addChild(searchInput_2, {
						"colIndex": 1,
						"rowIndex": 1
					});
					var comboBox_2 = new cpr.controls.ComboBox("cmbRefnUserId");
					comboBox_2.bind("value").toDataColumn("refnUserId");
					(function(comboBox_2){
						comboBox_2.addItem(new cpr.controls.Item("", ""));
						comboBox_2.setItemSet(app.lookup("grid04"), {
							"label": "userId",
							"value": "userId"
						});
					})(comboBox_2);
					if(typeof onCmbRefnUserIdSelectionChange == "function") {
						comboBox_2.addEventListener("selection-change", onCmbRefnUserIdSelectionChange);
					}
					if(typeof onCmbRefnUserIdItemClick == "function") {
						comboBox_2.addEventListener("item-click", onCmbRefnUserIdItemClick);
					}
					container.addChild(comboBox_2, {
						"colIndex": 3,
						"rowIndex": 1
					});
					var output_5 = new cpr.controls.Output();
					output_5.style.setClasses(["label", "pr-1"]);
					output_5.bind("value").toLanguage("refnUserId");
					container.addChild(output_5, {
						"colIndex": 2,
						"rowIndex": 1
					});
					var group_5 = new cpr.controls.Container("grdMngrs");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "10px";
					formLayout_4.verticalSpacing = "10px";
					formLayout_4.setColumns(["100px", "1fr", "100px", "1fr", "100px", "1fr"]);
					formLayout_4.setRows(["30px", "30px", "30px", "30px"]);
					group_5.setLayout(formLayout_4);
					(function(container){
						var output_6 = new cpr.controls.Output();
						output_6.style.setClasses(["text-center", "fw-bold", "align-bottom"]);
						output_6.bind("value").toLanguage("mngr1");
						container.addChild(output_6, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 2,
							"rowSpan": 1
						});
						var output_7 = new cpr.controls.Output();
						output_7.style.setClasses(["label", "pr-1"]);
						output_7.bind("value").toLanguage("id");
						container.addChild(output_7, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var inputBox_1 = new cpr.controls.InputBox("ipbMngr1");
						inputBox_1.readOnly = true;
						inputBox_1.bind("value").toDataColumn("mngrId1");
						container.addChild(inputBox_1, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var output_8 = new cpr.controls.Output();
						output_8.style.setClasses(["label", "pr-1"]);
						output_8.bind("value").toLanguage("nm");
						container.addChild(output_8, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var comboBox_3 = new cpr.controls.ComboBox("cmbMngr1");
						comboBox_3.bind("value").toDataColumn("mngrUsrNm1");
						(function(comboBox_3){
							comboBox_3.setItemSet(app.lookup("grid01"), {
								"label": "usrLocalNm",
								"value": "userId"
							});
						})(comboBox_3);
						if(typeof onCmbMngr1SelectionChange2 == "function") {
							comboBox_3.addEventListener("selection-change", onCmbMngr1SelectionChange2);
						}
						container.addChild(comboBox_3, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var output_9 = new cpr.controls.Output();
						output_9.style.setClasses(["label", "pr-1"]);
						output_9.bind("value").toLanguage("ipAdr_s1");
						container.addChild(output_9, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var inputBox_2 = new cpr.controls.InputBox("ipbIpAdr1");
						inputBox_2.bind("value").toDataColumn("mngrIpAdr1");
						container.addChild(inputBox_2, {
							"colIndex": 1,
							"rowIndex": 3
						});
						var output_10 = new cpr.controls.Output();
						output_10.style.setClasses(["text-center", "fw-bold", "align-bottom"]);
						output_10.bind("value").toLanguage("mngr2");
						container.addChild(output_10, {
							"colIndex": 2,
							"rowIndex": 0,
							"colSpan": 2,
							"rowSpan": 1
						});
						var output_11 = new cpr.controls.Output();
						output_11.style.setClasses(["label", "pr-1"]);
						output_11.bind("value").toLanguage("id");
						container.addChild(output_11, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var inputBox_3 = new cpr.controls.InputBox("ipbMngr2");
						inputBox_3.readOnly = true;
						inputBox_3.bind("value").toDataColumn("mngrId2");
						container.addChild(inputBox_3, {
							"colIndex": 3,
							"rowIndex": 1
						});
						var output_12 = new cpr.controls.Output();
						output_12.style.setClasses(["label", "pr-1"]);
						output_12.bind("value").toLanguage("nm");
						container.addChild(output_12, {
							"colIndex": 2,
							"rowIndex": 2
						});
						var comboBox_4 = new cpr.controls.ComboBox("cmbMngr2");
						comboBox_4.bind("value").toDataColumn("mngrUsrNm2");
						(function(comboBox_4){
							comboBox_4.addItem((function(){
								var treeItem_1 = new cpr.controls.Item(null, "");
								treeItem_1.bind("label").toLanguage("blankSpace");
								return treeItem_1;
							})());
							comboBox_4.setItemSet(app.lookup("grid01"), {
								"label": "usrLocalNm",
								"value": "userId"
							});
						})(comboBox_4);
						if(typeof onCmbMngr2SelectionChange == "function") {
							comboBox_4.addEventListener("selection-change", onCmbMngr2SelectionChange);
						}
						container.addChild(comboBox_4, {
							"colIndex": 3,
							"rowIndex": 2
						});
						var output_13 = new cpr.controls.Output();
						output_13.style.setClasses(["label", "pr-1"]);
						output_13.bind("value").toLanguage("ipAdr_s1");
						container.addChild(output_13, {
							"colIndex": 2,
							"rowIndex": 3
						});
						var inputBox_4 = new cpr.controls.InputBox("ipbIpAdr2");
						inputBox_4.bind("value").toDataColumn("mngrIpAdr2");
						container.addChild(inputBox_4, {
							"colIndex": 3,
							"rowIndex": 3
						});
						var output_14 = new cpr.controls.Output();
						output_14.style.setClasses(["text-center", "fw-bold", "align-bottom"]);
						output_14.bind("value").toLanguage("mngr3");
						container.addChild(output_14, {
							"colIndex": 4,
							"rowIndex": 0,
							"colSpan": 2,
							"rowSpan": 1
						});
						var output_15 = new cpr.controls.Output();
						output_15.style.setClasses(["label", "pr-1"]);
						output_15.bind("value").toLanguage("id");
						container.addChild(output_15, {
							"colIndex": 4,
							"rowIndex": 1
						});
						var inputBox_5 = new cpr.controls.InputBox("ipbMngr3");
						inputBox_5.readOnly = true;
						inputBox_5.bind("value").toDataColumn("mngrId3");
						container.addChild(inputBox_5, {
							"colIndex": 5,
							"rowIndex": 1
						});
						var output_16 = new cpr.controls.Output();
						output_16.style.setClasses(["label", "pr-1"]);
						output_16.bind("value").toLanguage("nm");
						container.addChild(output_16, {
							"colIndex": 4,
							"rowIndex": 2
						});
						var comboBox_5 = new cpr.controls.ComboBox("cmbMngr3");
						comboBox_5.bind("value").toDataColumn("mngrUsrNm3");
						(function(comboBox_5){
							comboBox_5.addItem((function(){
								var treeItem_1 = new cpr.controls.Item(null, "");
								treeItem_1.bind("label").toLanguage("blankSpace");
								return treeItem_1;
							})());
							comboBox_5.setItemSet(app.lookup("grid01"), {
								"label": "usrLocalNm",
								"value": "userId"
							});
						})(comboBox_5);
						if(typeof onCmbMngr3SelectionChange == "function") {
							comboBox_5.addEventListener("selection-change", onCmbMngr3SelectionChange);
						}
						container.addChild(comboBox_5, {
							"colIndex": 5,
							"rowIndex": 2
						});
						var output_17 = new cpr.controls.Output();
						output_17.style.setClasses(["label", "pr-1"]);
						output_17.bind("value").toLanguage("ipAdr_s1");
						container.addChild(output_17, {
							"colIndex": 4,
							"rowIndex": 3
						});
						var inputBox_6 = new cpr.controls.InputBox("ipbIpAdr3");
						inputBox_6.bind("value").toDataColumn("mngrIpAdr3");
						container.addChild(inputBox_6, {
							"colIndex": 5,
							"rowIndex": 3
						});
					})(group_5);
					container.addChild(group_5, {
						"colIndex": 0,
						"rowIndex": 2,
						"colSpan": 6,
						"rowSpan": 5
					});
					var button_4 = new cpr.controls.Button("btnSave");
					button_4.bind("value").toLanguage("save");
					if(typeof onButtonClick6 == "function") {
						button_4.addEventListener("click", onButtonClick6);
					}
					container.addChild(button_4, {
						"colIndex": 5,
						"rowIndex": 7,
						"horizontalAlign": "center",
						"verticalAlign": "center"
					});
				})(group_4);
				container.addChild(group_4, {
					"autoSize": "none",
					"width": "924px",
					"height": "346px"
				});
				var group_6 = new cpr.controls.Container();
				// Layout
				var formLayout_5 = new cpr.controls.layouts.FormLayout();
				formLayout_5.setColumns(["1fr", "1fr", "140px", "140px"]);
				formLayout_5.setRows(["1fr"]);
				group_6.setLayout(formLayout_5);
				(function(container){
				})(group_6);
				container.addChild(group_6, {
					"autoSize": "none",
					"width": "1076px",
					"height": "48px"
				});
			})(group_1);
			container.addChild(group_1, {
				positions: [
					{
						"media": "all and (min-width: 1324px)",
						"top": "10px",
						"left": "10px",
						"width": "1004px",
						"height": "748px"
					}, 
					{
						"media": "all and (max-width: 1323px)",
						"top": "10px",
						"right": "5px",
						"left": "5px",
						"height": "748px"
					}
				]
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "CM02";
	cpr.core.Platform.INSTANCE.register(app);
})();
