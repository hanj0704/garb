/*
 * App URI: 202010/approvalPop
 * Source Location: 202010/approvalPop.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202010/approvalPop", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * gridDia.js
			 * Created at 2020. 8. 5. 오후 2:29:45.
			 * 결재가 필요한 화면에 대해서 결재자를 지정하는 화면입니다.비즈니스 로직을 통해서 현재 연결된 결재가 가능한 유저 정보를 가져오는 서브미션을 수행해야합니다.
			 * @author han
			 ************************************************/
			
			
			
			/*
			 * "결재요청" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var vcDs = app.lookup("dsList");
				var vcGrd = app.lookup("grd1");
				
				if(vcGrd.getSelectedRowIndex() > -1) {
					
					var result =  vcGrd.getSelectedRow().getValue("userId");
					
					app.close(result);
				} else{
					alert("필수항목이 선택되지 않았습니다.");
				}	
			}
			
			
			
			/*
			 * "취소" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				app.close();
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				//책임자 승인 요청을 보낼 인원에 대한 정보를 JSON으로 가지고 있습니다. 컬럼은 userId, brNo, userNm, ipAdr이 됩니다.
				var voHostProperty = app.getHostProperty("initValue");
				
				console.log(voHostProperty);
				
				app.lookup("dsList").build(voHostProperty);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns" : [
					{"name": "userId"},
					{"name": "brNo"},
					{"name": "userNm"},
					{"name": "ipAdr"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.leftMargin = 10;
			verticalLayout_1.rightMargin = 10;
			verticalLayout_1.topMargin = 10;
			verticalLayout_1.bottomMargin = 10;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output();
			output_1.value = "결재자";
			container.addChild(output_1, {
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.readOnly = true;
			grid_1.init({
				"dataSet": app.lookup("dsList"),
				"autoFit": "1",
				"columns": [
					{"width": "50px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "userId";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "userId";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "userId";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"width": "400px",
				"height": "200px"
			});
			
			var group_1 = new cpr.controls.Container();
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button("btn1");
				button_1.value = "결재요청";
				if(typeof onBtn1Click == "function") {
					button_1.addEventListener("click", onBtn1Click);
				}
				container.addChild(button_1, {
					"right": "130px",
					"width": "100px",
					"height": "20px",
					"top": "calc(50% - 10px)"
				});
				var button_2 = new cpr.controls.Button("btn2");
				button_2.value = "취소";
				if(typeof onBtn2Click == "function") {
					button_2.addEventListener("click", onBtn2Click);
				}
				container.addChild(button_2, {
					"right": "20px",
					"width": "100px",
					"height": "20px",
					"top": "calc(50% - 10px)"
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "400px",
				"height": "35px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "approvalPop";
	cpr.core.Platform.INSTANCE.register(app);
})();
