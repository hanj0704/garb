/*
 * App URI: 202010/tester2
 * Source Location: 202010/tester2.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202010/tester2", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester2.js
			 * Created at 2020. 10. 19. 오후 3:09:29.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				app.setAppProperty("atten", app.getContainer());;
				
				
				var vaCh = app.getContainer().getAllRecursiveChildren();
				
				vaCh.sort(function(a,b){
					
					return a.getActualRect().top - b.getActualRect().top ;
				});
				
				vaCh.forEach(function(each){
					
					console.log(each.value);
				});
			}
			
			
			/*
			 * "Button3" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				
				var a = {};
				
				if(Object.keys(a).length) {
					console.log("zz");
				}
			}
			
			
			/*
			 * 그리드에서 cell-moved 이벤트 발생 시 호출.
			 * Grid의 Cell을 이동했을 때 발생하는 이벤트.
			 */
			function onGrd1CellMoved(/* cpr.events.CGridEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				
				console.log("moved");
			};
			// End - User Script
			
			// Header
			app.declareAppProperty("atten", null);
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "column11", "column2": "", "column3": "column31"},
					{"column1": "column12", "column2": "", "column3": "column32"},
					{"column1": "column13", "column2": "", "column3": "column33"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "Button1";
			button_1.userAttr({"cast-no": "1"});
			container.addChild(button_1, {
				"top": "506px",
				"left": "756px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "Button2";
			button_2.userAttr({"cast-no": "1"});
			container.addChild(button_2, {
				"top": "550px",
				"left": "354px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button();
			button_3.value = "Button3";
			button_3.userAttr({"cast-no": "1"});
			if(typeof onButtonClick == "function") {
				button_3.addEventListener("click", onButtonClick);
			}
			container.addChild(button_3, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.readOnly = true;
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columnMovable": true,
				"selectionUnit": "cell",
				"resizableColumns": "all",
				"columns": [
					{"width": "25px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.columnType = "checkbox";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = true;
								cell.sortable = true;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = true;
								cell.sortable = true;
								cell.text = "column3";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "checkbox";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column1";
								cell.control = (function(){
									var inputBox_1 = new cpr.controls.InputBox("ipb1");
									inputBox_1.bind("value").toDataColumn("column1");
									return inputBox_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column3";
								cell.control = (function(){
									var inputBox_2 = new cpr.controls.InputBox("ipb2");
									inputBox_2.bind("value").toDataColumn("column3");
									return inputBox_2;
								})();
							}
						}
					]
				}
			});
			if(typeof onGrd1CellMoved == "function") {
				grid_1.addEventListener("cell-moved", onGrd1CellMoved);
			}
			container.addChild(grid_1, {
				"top": "75px",
				"left": "46px",
				"width": "510px",
				"height": "192px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "tester2";
	cpr.core.Platform.INSTANCE.register(app);
})();
