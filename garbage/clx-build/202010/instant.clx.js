/*
 * App URI: 202010/instant
 * Source Location: 202010/instant.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202010/instant", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * instant.js
			 * Created at 2020. 10. 13. 오후 1:32:53.
			 *
			 * @author HANS
			 ************************************************/
			
			//new cpr.data.header.Header("column5", datatype, columntype, defaultValue);
			
			
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
			//	var headers = new cpr.data.header.ExpressionHeader("column4", "#ds1.getValue(getIndex()-1 > 0 ?getIndex()-1 : 0 ,\"column2\")");
			//	
			//	app.lookup("ds1").deleteColumn("column4");
			//	app.lookup("ds1").addColumn(headers);
			//	
			//	
			//	var ds = app.lookup("ds1");
			//	
			//	console.log(ds.getColumnCount());
			//app.lookup("grd1").redraw();
			//	
			console.log(!!document.documentMode);
			console.log(document.documentMode);
			}
			
			
			/*
			 * 트리에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onTre1ItemClick(/* cpr.events.CItemEvent */ e){
				/** 
				 * @type cpr.controls.Tree
				 */
				var tre1 = e.control;
				
				console.log(e.relativeTargetName);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "column1",
						"dataType": "number"
					},
					{
						"name": "column2",
						"dataType": "number"
					},
					{
						"name": "column3",
						"dataType": "number"
					},
					{
						"name": "column4",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "#ds1.getValue(getIndex()-1 > 0 ?getIndex()-1 : 0 ,\"column3\")"
					}
				],
				"rows": [
					{"column1": "1", "column2": "5", "column3": "1"},
					{"column1": "2", "column2": "10", "column3": "2"},
					{"column1": "3", "column2": "15", "column3": "3"},
					{"column1": "4", "column2": "20", "column3": "4"},
					{"column1": "5", "column2": "25", "column3": "5"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "label1", "value": "value1", "parent": ""},
					{"label": "label2", "value": "value2", "parent": ""},
					{"label": "label3", "value": "value3", "parent": ""},
					{"label": "label4", "value": "value4", "parent": ""},
					{"label": "label5", "value": "value5", "parent": ""}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "instant";
	cpr.core.Platform.INSTANCE.register(app);
})();
