/*
 * App URI: 202109/customkeyboardTest
 * Source Location: 202109/customkeyboardTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202109/customkeyboardTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * customkeyboardTest.js
			 * Created at 2021. 9. 3. 오후 1:10:15.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * 인풋 박스에서 blur 이벤트 발생 시 호출.
			 * 컨트롤이 포커스를 잃은 후 발생하는 이벤트.
			 */
			function onIpb1Blur(/* cpr.events.CFocusEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb1 = e.control;
				
				ipb1.focus();
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			group_1.style.css({
				"border-right-style" : "solid",
				"border-top-width" : "1px",
				"border-bottom-color" : "lightgray",
				"border-right-width" : "1px",
				"border-left-color" : "lightgray",
				"border-right-color" : "lightgray",
				"border-left-width" : "1px",
				"border-top-style" : "solid",
				"background-color" : "white",
				"border-left-style" : "solid",
				"border-bottom-width" : "1px",
				"border-top-color" : "lightgray",
				"border-bottom-style" : "solid",
				"background-image" : "none"
			});
			// Layout
			var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
			flowLayout_1.horizontalSpacing = 1;
			flowLayout_1.verticalSpacing = 1;
			flowLayout_1.verticalAlign = "middle";
			flowLayout_1.leftMargin = 5;
			flowLayout_1.rightMargin = 5;
			flowLayout_1.topMargin = 5;
			flowLayout_1.bottomMargin = 5;
			group_1.setLayout(flowLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt1");
				output_1.value = "a";
				output_1.unselectable = false;
				container.addChild(output_1, {
					"autoSize": "width",
					"width": "100px",
					"height": "85%"
				});
				var output_2 = new cpr.controls.Output("opt2");
				output_2.value = "|";
				output_2.unselectable = false;
				output_2.style.setClasses(["abc"]);
				container.addChild(output_2, {
					"autoSize": "width",
					"width": "100px",
					"height": "85%"
				});
				var output_3 = new cpr.controls.Output("opt3");
				output_3.value = "d";
				output_3.unselectable = false;
				container.addChild(output_3, {
					"autoSize": "width",
					"width": "100px",
					"height": "85%"
				});
				var output_4 = new cpr.controls.Output("opt4");
				output_4.value = "e";
				output_4.unselectable = false;
				container.addChild(output_4, {
					"autoSize": "width",
					"width": "100px",
					"height": "85%"
				});
				var output_5 = new cpr.controls.Output("opt5");
				output_5.value = "f";
				output_5.unselectable = false;
				container.addChild(output_5, {
					"autoSize": "width",
					"width": "100px",
					"height": "85%"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "41px",
				"left": "20px",
				"width": "875px",
				"height": "58px"
			});
			
			var hTMLSnippet_1 = new cpr.controls.HTMLSnippet();
			hTMLSnippet_1.value = "<style>\r\n\r\n\t.abc {\r\n\t\tanimation-name : cursor;\r\n\t\tanimation-duration : 1s;\r\n\t\tanimation-iteration-count : infinite;\r\n\t\tanimation-timing-function : step-end;\r\n\t}\r\n\t\r\n\t@keyframes cursor {\r\n\t50%{opacity:0;}\r\n\t}\r\n<\/style>";
			container.addChild(hTMLSnippet_1, {
				"top": "109px",
				"left": "20px",
				"width": "238px",
				"height": "143px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			if(typeof onIpb1Blur == "function") {
				inputBox_1.addEventListener("blur", onIpb1Blur);
			}
			container.addChild(inputBox_1, {
				"top": "109px",
				"left": "268px",
				"width": "100px",
				"height": "20px"
			});
		}
	});
	app.title = "customkeyboardTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
