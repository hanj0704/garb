/*
 * App URI: 202109/LotWaferProcessSummary
 * Source Location: 202109/LotWaferProcessSummary.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202109/LotWaferProcessSummary", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * LotWaferProcessSummary.js
			 * Created at 2021. 2. 16. 오전 11:14:19.
			 *
			 * @author HANS
			 ************************************************/;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsGasInfo");
			dataSet_1.parseData({
				"columns": [
					{"name": "GAS_NAME"},
					{
						"name": "SET",
						"dataType": "number"
					},
					{
						"name": "MEAN",
						"dataType": "number"
					},
					{
						"name": "DEV",
						"dataType": "number"
					},
					{
						"name": "MIN",
						"dataType": "number"
					},
					{
						"name": "MAX",
						"dataType": "number"
					}
				],
				"rows": [
					{"GAS_NAME": "(MFC1)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC2)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC3)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC4)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC5)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC6)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC7)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC8)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC9)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC10)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"},
					{"GAS_NAME": "(MFC11)", "SET": "0", "MEAN": "0", "DEV": "0", "MIN": "0", "MAX": "0"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds1");
			dataSet_2.parseData({
				"columns" : [
					{
						"name": "MEAN",
						"dataType": "number"
					},
					{
						"name": "DEV",
						"dataType": "number"
					},
					{
						"name": "MIN",
						"dataType": "number"
					},
					{
						"name": "MAX",
						"dataType": "number"
					}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsIOPLogList");
			dataSet_3.parseData({
				"columns" : [
					{
						"name": "INDEX",
						"dataType": "string"
					},
					{
						"name": "STEP_IDX",
						"dataType": "string"
					},
					{"name": "STEP_NM"},
					{"name": "BIRTH_DAY"},
					{"name": "BIRTH_TIME"},
					{"name": "AR_SET"},
					{"name": "AR_FLOW"},
					{"name": "CF4_SET"},
					{"name": "CF4_FLOW"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsProcessEventList");
			dataSet_4.parseData({
				"columns" : [
					{"name": "DATE_TIME"},
					{"name": "SUBSYSTEM"},
					{"name": "LOT_ID"},
					{"name": "MESSAGE"}
				]
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmWaferInfo");
			dataMap_1.parseData({
				"columns" : [
					{"name": "CASSETTE_ID"},
					{"name": "LOT_ID"},
					{"name": "WAFER_NO"},
					{"name": "WAFER_CHAMBER"},
					{"name": "RECIPE"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmWaferProcessInfo");
			dataMap_2.parseData({
				"columns" : [
					{"name": "CASSETTE_ID"},
					{"name": "FILE_NM"},
					{"name": "START_DATE"},
					{"name": "LOT_ID"},
					{
						"name": "TOTAL_WAFERS",
						"dataType": "number"
					},
					{"name": "END_DATE"}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmProcessAlarmInfo");
			dataMap_3.parseData({
				"columns" : [
					{"name": "RECIPE_NM"},
					{"name": "RECIPE_SEQURITY"},
					{
						"name": "STOP_CNT",
						"dataType": "number"
					},
					{
						"name": "WARNING_CNT",
						"dataType": "number"
					},
					{
						"name": "FAULT_CNT",
						"dataType": "number"
					},
					{
						"name": "POSITIONING_WAFER",
						"dataType": "number"
					},
					{
						"name": "RUNNING_PROCESS_STEP",
						"dataType": "number"
					},
					{
						"name": "PROCESS_STOPPED",
						"dataType": "number"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmWaferMoveInfo");
			dataMap_4.parseData({
				"columns" : [
					{"name": "CH_USE"},
					{"name": "WAFER_INDEX"},
					{"name": "WAFER_NO"},
					{"name": "SEQ_NO"},
					{"name": "SEQ_TOTAL_WAFER"}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmStepInfo");
			dataMap_5.parseData({
				"columns" : [
					{"name": "STEP_NAME"},
					{"name": "STEP_NO"},
					{"name": "STEP_CURRENT"},
					{"name": "STEP_TOTAL"},
					{"name": "STEP_TIME"},
					{"name": "STOP_TIME"}
				]
			});
			app.register(dataMap_5);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var tabFolder_1 = new cpr.controls.TabFolder();
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "Lot Wafer Process Summary";
				var group_1 = new cpr.controls.Container();
				// Layout
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_1.setLayout(xYLayout_2);
				(function(container){
					var group_2 = new cpr.controls.Container("grp1");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "10px";
					formLayout_1.verticalSpacing = "10px";
					formLayout_1.setColumns(["1fr", "1fr"]);
					formLayout_1.setRows(["82px", "45px", "162px", "122px", "1fr"]);
					group_2.setLayout(formLayout_1);
					(function(container){
						var group_3 = new cpr.controls.Container("grp3");
						group_3.style.setClasses(["search-box"]);
						// Layout
						var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
						flowLayout_1.leftMargin = 5;
						flowLayout_1.rightMargin = 5;
						flowLayout_1.topMargin = 5;
						flowLayout_1.bottomMargin = 5;
						group_3.setLayout(flowLayout_1);
						(function(container){
							var button_1 = new cpr.controls.Button("btn1");
							button_1.enabled = false;
							button_1.value = "w1";
							container.addChild(button_1, {
								"width": "31px",
								"height": "31px"
							});
							var button_2 = new cpr.controls.Button("btn3");
							button_2.enabled = false;
							button_2.value = "w2";
							container.addChild(button_2, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_3 = new cpr.controls.Button("btn4");
							button_3.enabled = false;
							button_3.value = "w3";
							container.addChild(button_3, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_4 = new cpr.controls.Button("btn5");
							button_4.enabled = false;
							button_4.value = "w4";
							container.addChild(button_4, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_5 = new cpr.controls.Button("btn6");
							button_5.enabled = false;
							button_5.value = "w5";
							container.addChild(button_5, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_6 = new cpr.controls.Button("btn7");
							button_6.enabled = false;
							button_6.value = "w6";
							container.addChild(button_6, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_7 = new cpr.controls.Button("btn8");
							button_7.enabled = false;
							button_7.value = "w7";
							container.addChild(button_7, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_8 = new cpr.controls.Button("btn9");
							button_8.enabled = false;
							button_8.value = "w8";
							container.addChild(button_8, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_9 = new cpr.controls.Button("btn10");
							button_9.enabled = false;
							button_9.value = "w9";
							container.addChild(button_9, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_10 = new cpr.controls.Button("btn11");
							button_10.enabled = false;
							button_10.value = "w10";
							container.addChild(button_10, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_11 = new cpr.controls.Button("btn12");
							button_11.enabled = false;
							button_11.value = "w11";
							container.addChild(button_11, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_12 = new cpr.controls.Button("btn13");
							button_12.enabled = false;
							button_12.value = "w12";
							container.addChild(button_12, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_13 = new cpr.controls.Button("btn14");
							button_13.enabled = false;
							button_13.value = "w13";
							container.addChild(button_13, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_14 = new cpr.controls.Button("btn15");
							button_14.enabled = false;
							button_14.value = "w14";
							container.addChild(button_14, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_15 = new cpr.controls.Button("btn16");
							button_15.enabled = false;
							button_15.value = "w15";
							container.addChild(button_15, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_16 = new cpr.controls.Button("btn17");
							button_16.enabled = false;
							button_16.value = "w16";
							container.addChild(button_16, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_17 = new cpr.controls.Button("btn18");
							button_17.enabled = false;
							button_17.value = "w17";
							container.addChild(button_17, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_18 = new cpr.controls.Button("btn19");
							button_18.enabled = false;
							button_18.value = "w18";
							container.addChild(button_18, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_19 = new cpr.controls.Button("btn20");
							button_19.enabled = false;
							button_19.value = "w19";
							container.addChild(button_19, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_20 = new cpr.controls.Button("btn21");
							button_20.enabled = false;
							button_20.value = "w20";
							container.addChild(button_20, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_21 = new cpr.controls.Button("btn22");
							button_21.enabled = false;
							button_21.value = "w21";
							container.addChild(button_21, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_22 = new cpr.controls.Button("btn23");
							button_22.enabled = false;
							button_22.value = "w22";
							container.addChild(button_22, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_23 = new cpr.controls.Button("btn24");
							button_23.enabled = false;
							button_23.value = "w23";
							container.addChild(button_23, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_24 = new cpr.controls.Button("btn25");
							button_24.enabled = false;
							button_24.value = "w24";
							container.addChild(button_24, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
							var button_25 = new cpr.controls.Button("btn26");
							button_25.enabled = false;
							button_25.value = "w25";
							container.addChild(button_25, {
								"autoSize": "none",
								"width": "31px",
								"height": "31px"
							});
						})(group_3);
						container.addChild(group_3, {
							"colIndex": 0,
							"rowIndex": 1,
							"colSpan": 2,
							"rowSpan": 1,
							"horizontalAlign": "fill",
							"verticalAlign": "fill"
						});
						var group_4 = new cpr.controls.Container("grp2");
						group_4.style.setClasses(["search-box"]);
						// Layout
						var formLayout_2 = new cpr.controls.layouts.FormLayout();
						formLayout_2.topMargin = "5px";
						formLayout_2.rightMargin = "5px";
						formLayout_2.bottomMargin = "5px";
						formLayout_2.leftMargin = "5px";
						formLayout_2.horizontalSpacing = "10px";
						formLayout_2.verticalSpacing = "10px";
						formLayout_2.setColumns(["100px", "1fr", "100px", "1fr", "100px", "1fr"]);
						formLayout_2.setUseColumnShade(0, true);
						formLayout_2.setRows(["30px", "30px"]);
						group_4.setLayout(formLayout_2);
						(function(container){
							var output_1 = new cpr.controls.Output("opt1");
							output_1.value = "Cassette ID";
							output_1.style.setClasses(["label"]);
							container.addChild(output_1, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var inputBox_1 = new cpr.controls.InputBox("ipb1");
							inputBox_1.bind("value").toDataMap(app.lookup("dmWaferProcessInfo"), "CASSETTE_ID");
							container.addChild(inputBox_1, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var output_2 = new cpr.controls.Output("opt2");
							output_2.value = "Lot ID";
							output_2.style.setClasses(["label"]);
							container.addChild(output_2, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_3 = new cpr.controls.Output("opt5");
							output_3.value = "Total Wafers";
							output_3.style.setClasses(["label"]);
							container.addChild(output_3, {
								"colIndex": 2,
								"rowIndex": 1
							});
							var inputBox_2 = new cpr.controls.InputBox("ipb3");
							inputBox_2.bind("value").toDataMap(app.lookup("dmWaferProcessInfo"), "LOT_ID");
							container.addChild(inputBox_2, {
								"colIndex": 1,
								"rowIndex": 1
							});
							var output_4 = new cpr.controls.Output("opt3");
							output_4.value = "File Name";
							output_4.style.setClasses(["label"]);
							container.addChild(output_4, {
								"colIndex": 2,
								"rowIndex": 0
							});
							var output_5 = new cpr.controls.Output("opt4");
							output_5.value = "Started";
							output_5.style.setClasses(["label"]);
							container.addChild(output_5, {
								"colIndex": 4,
								"rowIndex": 0
							});
							var output_6 = new cpr.controls.Output("opt6");
							output_6.value = "Ended";
							output_6.style.setClasses(["label"]);
							container.addChild(output_6, {
								"colIndex": 4,
								"rowIndex": 1
							});
							var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
							numberEditor_1.spinButton = false;
							numberEditor_1.style.setClasses(["text-left", "pl-1"]);
							numberEditor_1.bind("value").toDataMap(app.lookup("dmWaferProcessInfo"), "TOTAL_WAFERS");
							container.addChild(numberEditor_1, {
								"colIndex": 3,
								"rowIndex": 1
							});
							var inputBox_3 = new cpr.controls.InputBox("ipb2");
							inputBox_3.bind("value").toDataMap(app.lookup("dmWaferProcessInfo"), "FILE_NM");
							container.addChild(inputBox_3, {
								"colIndex": 3,
								"rowIndex": 0
							});
							var dateInput_1 = new cpr.controls.DateInput("dti1");
							dateInput_1.hideButton = true;
							dateInput_1.mask = "YYYY-MM-DD HH:mm:ss";
							dateInput_1.format = "YYYYMMDDHHmmss";
							dateInput_1.bind("value").toDataMap(app.lookup("dmWaferProcessInfo"), "START_DATE");
							container.addChild(dateInput_1, {
								"colIndex": 5,
								"rowIndex": 0
							});
							var dateInput_2 = new cpr.controls.DateInput("dti2");
							dateInput_2.hideButton = true;
							dateInput_2.mask = "YYYY-MM-DD HH:mm:ss";
							dateInput_2.format = "YYYYMMDDHHmmss";
							dateInput_2.bind("value").toDataMap(app.lookup("dmWaferProcessInfo"), "END_DATE");
							container.addChild(dateInput_2, {
								"colIndex": 5,
								"rowIndex": 1
							});
						})(group_4);
						container.addChild(group_4, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 2,
							"rowSpan": 1
						});
						var group_5 = new cpr.controls.Container("grp4");
						group_5.style.setClasses(["cl-form-group"]);
						// Layout
						var formLayout_3 = new cpr.controls.layouts.FormLayout();
						formLayout_3.topMargin = "5px";
						formLayout_3.rightMargin = "5px";
						formLayout_3.bottomMargin = "5px";
						formLayout_3.leftMargin = "5px";
						formLayout_3.horizontalSpacing = "10px";
						formLayout_3.verticalSpacing = "10px";
						formLayout_3.horizontalSeparatorWidth = 1;
						formLayout_3.verticalSeparatorWidth = 1;
						formLayout_3.setColumns(["160px", "1fr", "150px", "1fr"]);
						formLayout_3.setUseColumnShade(0, true);
						formLayout_3.setUseColumnShade(2, true);
						formLayout_3.setColumnAutoSizing(0, true);
						formLayout_3.setColumnAutoSizing(2, true);
						formLayout_3.setRows(["30px", "30px", "30px", "30px"]);
						group_5.setLayout(formLayout_3);
						(function(container){
							var output_7 = new cpr.controls.Output("opt7");
							output_7.value = "Recipe Name / Security";
							container.addChild(output_7, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_8 = new cpr.controls.Output("opt8");
							output_8.value = "Number of Stops";
							container.addChild(output_8, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_9 = new cpr.controls.Output("opt9");
							output_9.value = "Number of Warnings";
							container.addChild(output_9, {
								"colIndex": 0,
								"rowIndex": 2
							});
							var output_10 = new cpr.controls.Output("opt10");
							output_10.value = "Number of Faluts";
							container.addChild(output_10, {
								"colIndex": 0,
								"rowIndex": 3
							});
							var output_11 = new cpr.controls.Output("opt11");
							output_11.value = "Positioning Wafer";
							container.addChild(output_11, {
								"colIndex": 2,
								"rowIndex": 1
							});
							var output_12 = new cpr.controls.Output("opt12");
							output_12.value = "Running Process Step";
							container.addChild(output_12, {
								"colIndex": 2,
								"rowIndex": 2
							});
							var output_13 = new cpr.controls.Output("opt13");
							output_13.value = "Process stoped";
							container.addChild(output_13, {
								"colIndex": 2,
								"rowIndex": 3
							});
							var inputBox_4 = new cpr.controls.InputBox("ipb4");
							inputBox_4.bind("value").toDataMap(app.lookup("dmProcessAlarmInfo"), "RECIPE_NM");
							container.addChild(inputBox_4, {
								"colIndex": 1,
								"rowIndex": 0,
								"colSpan": 2,
								"rowSpan": 1
							});
							var inputBox_5 = new cpr.controls.InputBox("ipb5");
							inputBox_5.bind("value").toDataMap(app.lookup("dmProcessAlarmInfo"), "RECIPE_SEQURITY");
							container.addChild(inputBox_5, {
								"colIndex": 3,
								"rowIndex": 0
							});
							var numberEditor_2 = new cpr.controls.NumberEditor("nbe2");
							numberEditor_2.spinButton = false;
							numberEditor_2.bind("value").toDataMap(app.lookup("dmProcessAlarmInfo"), "STOP_CNT");
							container.addChild(numberEditor_2, {
								"colIndex": 1,
								"rowIndex": 1
							});
							var numberEditor_3 = new cpr.controls.NumberEditor("nbe3");
							numberEditor_3.spinButton = false;
							numberEditor_3.bind("value").toDataMap(app.lookup("dmProcessAlarmInfo"), "WARNING_CNT");
							container.addChild(numberEditor_3, {
								"colIndex": 1,
								"rowIndex": 2
							});
							var numberEditor_4 = new cpr.controls.NumberEditor("nbe4");
							numberEditor_4.spinButton = false;
							numberEditor_4.bind("value").toDataMap(app.lookup("dmProcessAlarmInfo"), "FAULT_CNT");
							container.addChild(numberEditor_4, {
								"colIndex": 1,
								"rowIndex": 3
							});
							var group_6 = new cpr.controls.Container("grp6");
							// Layout
							var formLayout_4 = new cpr.controls.layouts.FormLayout();
							formLayout_4.horizontalSpacing = "5px";
							formLayout_4.verticalSpacing = "5px";
							formLayout_4.setColumns(["1fr", "20px"]);
							formLayout_4.setRows(["30px"]);
							group_6.setLayout(formLayout_4);
							(function(container){
								var numberEditor_5 = new cpr.controls.NumberEditor("nbe5");
								numberEditor_5.spinButton = false;
								numberEditor_5.format = "s#,##0.0";
								numberEditor_5.bind("value").toDataMap(app.lookup("dmProcessAlarmInfo"), "POSITIONING_WAFER");
								container.addChild(numberEditor_5, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_14 = new cpr.controls.Output("opt14");
								output_14.value = "[s]";
								container.addChild(output_14, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_6);
							container.addChild(group_6, {
								"colIndex": 3,
								"rowIndex": 1,
								"colSpan": 1,
								"rowSpan": 1
							});
							var group_7 = new cpr.controls.Container("grp7");
							// Layout
							var formLayout_5 = new cpr.controls.layouts.FormLayout();
							formLayout_5.horizontalSpacing = "5px";
							formLayout_5.verticalSpacing = "5px";
							formLayout_5.setColumns(["1fr", "20px"]);
							formLayout_5.setRows(["30px"]);
							group_7.setLayout(formLayout_5);
							(function(container){
								var numberEditor_6 = new cpr.controls.NumberEditor("nbe6");
								numberEditor_6.spinButton = false;
								numberEditor_6.format = "s#,##0.0";
								numberEditor_6.bind("value").toDataMap(app.lookup("dmProcessAlarmInfo"), "RUNNING_PROCESS_STEP");
								container.addChild(numberEditor_6, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_15 = new cpr.controls.Output("opt15");
								output_15.value = "[s]";
								container.addChild(output_15, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_7);
							container.addChild(group_7, {
								"colIndex": 3,
								"rowIndex": 2
							});
							var group_8 = new cpr.controls.Container("grp8");
							// Layout
							var formLayout_6 = new cpr.controls.layouts.FormLayout();
							formLayout_6.horizontalSpacing = "5px";
							formLayout_6.verticalSpacing = "5px";
							formLayout_6.setColumns(["1fr", "20px"]);
							formLayout_6.setRows(["30px"]);
							group_8.setLayout(formLayout_6);
							(function(container){
								var numberEditor_7 = new cpr.controls.NumberEditor("nbe7");
								numberEditor_7.spinButton = false;
								numberEditor_7.format = "s#,##0.0";
								numberEditor_7.bind("value").toDataMap(app.lookup("dmProcessAlarmInfo"), "PROCESS_STOPPED");
								container.addChild(numberEditor_7, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var output_16 = new cpr.controls.Output("opt16");
								output_16.value = "[s]";
								container.addChild(output_16, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_8);
							container.addChild(group_8, {
								"colIndex": 3,
								"rowIndex": 3
							});
						})(group_5);
						container.addChild(group_5, {
							"colIndex": 0,
							"rowIndex": 2
						});
						var group_9 = new cpr.controls.Container("grp5");
						group_9.style.setClasses(["cl-form-group"]);
						// Layout
						var formLayout_7 = new cpr.controls.layouts.FormLayout();
						formLayout_7.topMargin = "5px";
						formLayout_7.rightMargin = "5px";
						formLayout_7.bottomMargin = "5px";
						formLayout_7.leftMargin = "5px";
						formLayout_7.horizontalSpacing = "10px";
						formLayout_7.verticalSpacing = "10px";
						formLayout_7.horizontalSeparatorWidth = 1;
						formLayout_7.verticalSeparatorWidth = 1;
						formLayout_7.setColumns(["160px", "1fr"]);
						formLayout_7.setUseColumnShade(0, true);
						formLayout_7.setColumnAutoSizing(0, true);
						formLayout_7.setRows(["30px", "30px", "30px", "30px"]);
						group_9.setLayout(formLayout_7);
						(function(container){
							var output_17 = new cpr.controls.Output("opt17");
							output_17.value = "Ch Use";
							container.addChild(output_17, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_18 = new cpr.controls.Output("opt18");
							output_18.value = "Wafer Index";
							container.addChild(output_18, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_19 = new cpr.controls.Output("opt19");
							output_19.value = "Wafer / Seq No";
							container.addChild(output_19, {
								"colIndex": 0,
								"rowIndex": 2
							});
							var output_20 = new cpr.controls.Output("opt20");
							output_20.value = "Seq Total / Wafer";
							container.addChild(output_20, {
								"colIndex": 0,
								"rowIndex": 3
							});
							var numberEditor_8 = new cpr.controls.NumberEditor("nbe10");
							numberEditor_8.spinButton = false;
							numberEditor_8.bind("value").toDataMap(app.lookup("dmWaferMoveInfo"), "SEQ_TOTAL_WAFER");
							container.addChild(numberEditor_8, {
								"colIndex": 1,
								"rowIndex": 3,
								"colSpan": 1,
								"rowSpan": 1
							});
							var group_10 = new cpr.controls.Container("grp10");
							// Layout
							var formLayout_8 = new cpr.controls.layouts.FormLayout();
							formLayout_8.horizontalSpacing = "5px";
							formLayout_8.verticalSpacing = "5px";
							formLayout_8.setColumns(["1fr", "1fr"]);
							formLayout_8.setRows(["30px"]);
							group_10.setLayout(formLayout_8);
							(function(container){
								var numberEditor_9 = new cpr.controls.NumberEditor("nbe8");
								numberEditor_9.spinButton = false;
								numberEditor_9.bind("value").toDataMap(app.lookup("dmWaferMoveInfo"), "WAFER_NO");
								container.addChild(numberEditor_9, {
									"colIndex": 0,
									"rowIndex": 0
								});
								var numberEditor_10 = new cpr.controls.NumberEditor("nbe11");
								numberEditor_10.spinButton = false;
								numberEditor_10.bind("value").toDataMap(app.lookup("dmWaferMoveInfo"), "SEQ_NO");
								container.addChild(numberEditor_10, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_10);
							container.addChild(group_10, {
								"colIndex": 1,
								"rowIndex": 2
							});
							var numberEditor_11 = new cpr.controls.NumberEditor("nbe9");
							numberEditor_11.spinButton = false;
							numberEditor_11.bind("value").toDataMap(app.lookup("dmWaferMoveInfo"), "WAFER_INDEX");
							container.addChild(numberEditor_11, {
								"colIndex": 1,
								"rowIndex": 1
							});
							var group_11 = new cpr.controls.Container("grp11");
							// Layout
							var formLayout_9 = new cpr.controls.layouts.FormLayout();
							formLayout_9.horizontalSpacing = "5px";
							formLayout_9.verticalSpacing = "5px";
							formLayout_9.setColumns(["1fr", "1fr"]);
							formLayout_9.setRows(["30px"]);
							group_11.setLayout(formLayout_9);
							(function(container){
								var inputBox_6 = new cpr.controls.InputBox("ipb6");
								inputBox_6.bind("value").toDataMap(app.lookup("dmWaferMoveInfo"), "CH_USE");
								container.addChild(inputBox_6, {
									"colIndex": 0,
									"rowIndex": 0,
									"colSpan": 1,
									"rowSpan": 1
								});
								var button_26 = new cpr.controls.Button("btn27");
								button_26.value = "WaferMovement";
								container.addChild(button_26, {
									"colIndex": 1,
									"rowIndex": 0
								});
							})(group_11);
							container.addChild(group_11, {
								"colIndex": 1,
								"rowIndex": 0,
								"colSpan": 1,
								"rowSpan": 1
							});
						})(group_9);
						container.addChild(group_9, {
							"colIndex": 1,
							"rowIndex": 2
						});
						var group_12 = new cpr.controls.Container("grp9");
						group_12.style.setClasses(["cl-form-group"]);
						// Layout
						var formLayout_10 = new cpr.controls.layouts.FormLayout();
						formLayout_10.topMargin = "5px";
						formLayout_10.rightMargin = "5px";
						formLayout_10.bottomMargin = "5px";
						formLayout_10.leftMargin = "5px";
						formLayout_10.horizontalSpacing = "10px";
						formLayout_10.verticalSpacing = "10px";
						formLayout_10.horizontalSeparatorWidth = 1;
						formLayout_10.verticalSeparatorWidth = 1;
						formLayout_10.setColumns(["160px", "1fr", "1fr", "1fr"]);
						formLayout_10.setUseColumnShade(0, true);
						formLayout_10.setColumnAutoSizing(0, true);
						formLayout_10.setRows(["30px", "30px", "30px"]);
						group_12.setLayout(formLayout_10);
						(function(container){
							var output_21 = new cpr.controls.Output("opt21");
							output_21.value = "Step Name";
							container.addChild(output_21, {
								"colIndex": 0,
								"rowIndex": 0
							});
							var output_22 = new cpr.controls.Output("opt22");
							output_22.value = "Step No/Current/Total";
							container.addChild(output_22, {
								"colIndex": 0,
								"rowIndex": 1
							});
							var output_23 = new cpr.controls.Output("opt23");
							output_23.value = "Proc Step/Stop TIme";
							container.addChild(output_23, {
								"colIndex": 0,
								"rowIndex": 2
							});
							var inputBox_7 = new cpr.controls.InputBox("ipb7");
							inputBox_7.bind("value").toDataMap(app.lookup("dmStepInfo"), "STEP_NAME");
							container.addChild(inputBox_7, {
								"colIndex": 1,
								"rowIndex": 0,
								"colSpan": 3,
								"rowSpan": 1
							});
							var numberEditor_12 = new cpr.controls.NumberEditor("nbe12");
							numberEditor_12.spinButton = false;
							numberEditor_12.bind("value").toDataMap(app.lookup("dmStepInfo"), "STEP_NO");
							container.addChild(numberEditor_12, {
								"colIndex": 1,
								"rowIndex": 1
							});
							var numberEditor_13 = new cpr.controls.NumberEditor("nbe13");
							numberEditor_13.spinButton = false;
							numberEditor_13.format = "s#,##0.0";
							numberEditor_13.bind("value").toDataMap(app.lookup("dmStepInfo"), "STEP_TIME");
							container.addChild(numberEditor_13, {
								"colIndex": 1,
								"rowIndex": 2
							});
							var numberEditor_14 = new cpr.controls.NumberEditor("nbe14");
							numberEditor_14.spinButton = false;
							numberEditor_14.bind("value").toDataMap(app.lookup("dmStepInfo"), "STEP_CURRENT");
							container.addChild(numberEditor_14, {
								"colIndex": 2,
								"rowIndex": 1
							});
							var numberEditor_15 = new cpr.controls.NumberEditor("nbe15");
							numberEditor_15.spinButton = false;
							numberEditor_15.bind("value").toDataMap(app.lookup("dmStepInfo"), "STEP_TOTAL");
							container.addChild(numberEditor_15, {
								"colIndex": 3,
								"rowIndex": 1
							});
							var numberEditor_16 = new cpr.controls.NumberEditor("nbe16");
							numberEditor_16.spinButton = false;
							numberEditor_16.format = "s#,##0.0";
							numberEditor_16.bind("value").toDataMap(app.lookup("dmStepInfo"), "STOP_TIME");
							container.addChild(numberEditor_16, {
								"colIndex": 2,
								"rowIndex": 2
							});
						})(group_12);
						container.addChild(group_12, {
							"colIndex": 0,
							"rowIndex": 3
						});
						var grid_1 = new cpr.controls.Grid("grd1");
						grid_1.init({
							"dataSet": app.lookup("ds1"),
							"columns": [
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "40px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.targetColumnName = "MEAN";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Mean";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.targetColumnName = "DEV";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Dev";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.targetColumnName = "MIN";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Min";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.targetColumnName = "MAX";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Max";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "45px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "MEAN";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "DEV";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "MIN";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "MAX";
										}
									}
								]
							}
						});
						container.addChild(grid_1, {
							"colIndex": 1,
							"rowIndex": 3,
							"colSpan": 1,
							"rowSpan": 2
						});
						var grid_2 = new cpr.controls.Grid("grd2");
						grid_2.init({
							"dataSet": app.lookup("dsGasInfo"),
							"columns": [
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "40px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.targetColumnName = "GAS_NAME";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Gas";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.targetColumnName = "SET";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Set";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.targetColumnName = "MEAN";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Mean";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.targetColumnName = "DEV";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Dev";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.targetColumnName = "MIN";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Min";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.targetColumnName = "MAX";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "Max";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "45px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "GAS_NAME";
											cell.control = (function(){
												var output_24 = new cpr.controls.Output("opt24");
												output_24.value = "Output";
												output_24.style.setClasses(["text-right"]);
												output_24.bind("value").toDataColumn("GAS_NAME");
												return output_24;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "SET";
											cell.control = (function(){
												var output_25 = new cpr.controls.Output("opt25");
												output_25.value = "0";
												output_25.dataType = "number";
												output_25.format = "s#,##0";
												output_25.style.setClasses(["text-right", "pr-1"]);
												output_25.bind("value").toDataColumn("SET");
												return output_25;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "MEAN";
											cell.control = (function(){
												var output_26 = new cpr.controls.Output("opt26");
												output_26.value = "0";
												output_26.dataType = "number";
												output_26.format = "s#,##0";
												output_26.style.setClasses(["text-right", "pr-1"]);
												output_26.bind("value").toDataColumn("MEAN");
												return output_26;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "DEV";
											cell.control = (function(){
												var output_27 = new cpr.controls.Output("opt27");
												output_27.value = "0";
												output_27.dataType = "number";
												output_27.format = "s#,##0";
												output_27.style.setClasses(["text-right", "pr-1"]);
												output_27.bind("value").toDataColumn("DEV");
												return output_27;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "MIN";
											cell.control = (function(){
												var output_28 = new cpr.controls.Output("opt28");
												output_28.value = "0";
												output_28.dataType = "number";
												output_28.format = "s#,##0";
												output_28.style.setClasses(["text-right", "pr-1"]);
												output_28.bind("value").toDataColumn("MIN");
												return output_28;
											})();
											cell.controlConstraint = {};
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "MAX";
											cell.control = (function(){
												var output_29 = new cpr.controls.Output("opt29");
												output_29.value = "0";
												output_29.dataType = "number";
												output_29.format = "s#,##0";
												output_29.style.setClasses(["text-right", "pr-1"]);
												output_29.bind("value").toDataColumn("MAX");
												return output_29;
											})();
											cell.controlConstraint = {};
										}
									}
								]
							}
						});
						container.addChild(grid_2, {
							"colIndex": 0,
							"rowIndex": 4
						});
					})(group_2);
					container.addChild(group_2, {
						"top": "10px",
						"right": "10px",
						"bottom": "10px",
						"left": "10px"
					});
				})(group_1);
				tabItem_1.content = group_1;
				return tabItem_1;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_1);
			
			var tabItem_2 = (function(tabFolder){
				var tabItem_2 = new cpr.controls.TabItem();
				tabItem_2.text = "Wafer Iop Log";
				var group_13 = new cpr.controls.Container();
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_13.setLayout(xYLayout_3);
				(function(container){
					var group_14 = new cpr.controls.Container();
					group_14.style.setClasses(["search-box"]);
					// Layout
					var formLayout_11 = new cpr.controls.layouts.FormLayout();
					formLayout_11.topMargin = "5px";
					formLayout_11.rightMargin = "5px";
					formLayout_11.bottomMargin = "5px";
					formLayout_11.leftMargin = "5px";
					formLayout_11.horizontalSpacing = "10px";
					formLayout_11.verticalSpacing = "10px";
					formLayout_11.setColumns(["100px", "1fr", "100px", "1fr", "100px", "1fr", "100px"]);
					formLayout_11.setUseColumnShade(0, true);
					formLayout_11.setRows(["30px", "30px"]);
					group_14.setLayout(formLayout_11);
					(function(container){
						var output_30 = new cpr.controls.Output();
						output_30.value = "Cassette ID";
						output_30.style.setClasses(["label"]);
						container.addChild(output_30, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_8 = new cpr.controls.InputBox("ipb8");
						inputBox_8.value = "U";
						container.addChild(inputBox_8, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_31 = new cpr.controls.Output();
						output_31.value = "Lot ID";
						output_31.style.setClasses(["label"]);
						container.addChild(output_31, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_32 = new cpr.controls.Output();
						output_32.value = "Wft/Ch./Rcp.";
						output_32.style.setClasses(["label"]);
						container.addChild(output_32, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var inputBox_9 = new cpr.controls.InputBox("ipb9");
						inputBox_9.value = "";
						container.addChild(inputBox_9, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var button_27 = new cpr.controls.Button();
						button_27.value = "Search";
						button_27.style.setClasses(["btn-dark"]);
						container.addChild(button_27, {
							"colIndex": 6,
							"rowIndex": 1
						});
						var inputBox_10 = new cpr.controls.InputBox("ipb10");
						container.addChild(inputBox_10, {
							"colIndex": 3,
							"rowIndex": 1,
							"colSpan": 2,
							"rowSpan": 1
						});
					})(group_14);
					container.addChild(group_14, {
						"top": "10px",
						"right": "10px",
						"left": "10px",
						"height": "82px"
					});
					var grid_3 = new cpr.controls.Grid("grd3");
					grid_3.init({
						"dataSet": app.lookup("dsIOPLogList"),
						"columns": [
							{"width": "50px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "40px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "INDEX";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "INDEX";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "STEP_IDX";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "STEP_IDX";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "STEP_NM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "STEP_NM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "BIRTH_DAY";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "BIRTH_DAY";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.targetColumnName = "BIRTH_TIME";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "BIRTH_TIME";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.targetColumnName = "AR_SET";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "AR_SET";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.targetColumnName = "AR_FLOW";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "AR_FLOW";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.targetColumnName = "CF4_SET";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "CF4_SET";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.targetColumnName = "CF4_FLOW";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "CF4_FLOW";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "45px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "INDEX";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "STEP_IDX";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "STEP_NM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "BIRTH_DAY";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "BIRTH_TIME";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "AR_SET";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "AR_FLOW";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 8},
									"configurator": function(cell){
										cell.columnName = "CF4_SET";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 9},
									"configurator": function(cell){
										cell.columnName = "CF4_FLOW";
									}
								}
							]
						}
					});
					container.addChild(grid_3, {
						"top": "102px",
						"right": "10px",
						"bottom": "10px",
						"left": "10px"
					});
				})(group_13);
				tabItem_2.content = group_13;
				return tabItem_2;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_2);
			
			var tabItem_3 = (function(tabFolder){
				var tabItem_3 = new cpr.controls.TabItem();
				tabItem_3.text = "Eventlog of Process";
				var group_15 = new cpr.controls.Container();
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_15.setLayout(xYLayout_4);
				(function(container){
					var group_16 = new cpr.controls.Container();
					group_16.style.setClasses(["search-box"]);
					// Layout
					var formLayout_12 = new cpr.controls.layouts.FormLayout();
					formLayout_12.topMargin = "5px";
					formLayout_12.rightMargin = "5px";
					formLayout_12.bottomMargin = "5px";
					formLayout_12.leftMargin = "5px";
					formLayout_12.horizontalSpacing = "10px";
					formLayout_12.verticalSpacing = "10px";
					formLayout_12.setColumns(["100px", "1fr", "100px", "1fr", "100px", "1fr", "100px"]);
					formLayout_12.setUseColumnShade(0, true);
					formLayout_12.setRows(["30px", "30px"]);
					group_16.setLayout(formLayout_12);
					(function(container){
						var output_33 = new cpr.controls.Output();
						output_33.value = "Cassette ID";
						output_33.style.setClasses(["label"]);
						container.addChild(output_33, {
							"colIndex": 0,
							"rowIndex": 0
						});
						var inputBox_11 = new cpr.controls.InputBox("ipb11");
						inputBox_11.value = "U";
						container.addChild(inputBox_11, {
							"colIndex": 1,
							"rowIndex": 0
						});
						var output_34 = new cpr.controls.Output();
						output_34.value = "Lot ID";
						output_34.style.setClasses(["label"]);
						container.addChild(output_34, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_35 = new cpr.controls.Output();
						output_35.value = "Wft/Ch./Rcp.";
						output_35.style.setClasses(["label"]);
						container.addChild(output_35, {
							"colIndex": 2,
							"rowIndex": 1
						});
						var inputBox_12 = new cpr.controls.InputBox("ipb12");
						inputBox_12.value = "";
						container.addChild(inputBox_12, {
							"colIndex": 1,
							"rowIndex": 1
						});
						var button_28 = new cpr.controls.Button();
						button_28.value = "Search";
						button_28.style.setClasses(["btn-dark"]);
						container.addChild(button_28, {
							"colIndex": 6,
							"rowIndex": 1
						});
						var inputBox_13 = new cpr.controls.InputBox("ipb13");
						container.addChild(inputBox_13, {
							"colIndex": 3,
							"rowIndex": 1,
							"colSpan": 2,
							"rowSpan": 1
						});
					})(group_16);
					container.addChild(group_16, {
						"top": "10px",
						"right": "10px",
						"left": "10px",
						"height": "82px"
					});
					var grid_4 = new cpr.controls.Grid("grd4");
					grid_4.init({
						"dataSet": app.lookup("dsProcessEventList"),
						"columns": [
							{"width": "50px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"}
						],
						"header": {
							"rows": [{"height": "40px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.filterable = false;
										cell.sortable = false;
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.targetColumnName = "DATE_TIME";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "DATE_TIME";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.targetColumnName = "SUBSYSTEM";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "SUBSYSTEM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.targetColumnName = "LOT_ID";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "LOT_ID";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.targetColumnName = "MESSAGE";
										cell.filterable = false;
										cell.sortable = false;
										cell.text = "MESSAGE";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "45px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "rowindex";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "DATE_TIME";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "SUBSYSTEM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "LOT_ID";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "MESSAGE";
									}
								}
							]
						}
					});
					container.addChild(grid_4, {
						"top": "102px",
						"right": "10px",
						"bottom": "102px",
						"left": "10px"
					});
				})(group_15);
				tabItem_3.content = group_15;
				return tabItem_3;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_3);
			tabFolder_1.setSelectedTabItem(tabItem_1);
			container.addChild(tabFolder_1, {
				"top": "10px",
				"right": "10px",
				"bottom": "10px",
				"left": "10px"
			});
		}
	});
	app.title = "LotWaferProcessSummary";
	cpr.core.Platform.INSTANCE.register(app);
})();
