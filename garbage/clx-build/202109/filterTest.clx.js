/*
 * App URI: 202109/filterTest
 * Source Location: 202109/filterTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202109/filterTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * filterTest.js
			 * Created at 2021. 9. 16. 오후 4:04:48.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "filte" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				app.lookup("grd1").filter("column3 ==\"가\" || column3 ==\"나\" || column3 ==\"다\"");
				app.lookup("grd1").redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				app.lookup("grd1").sort("column1 asc");
				app.lookup("grd1").redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				var grd = app.lookup("grd1");
				grd.clearFilter();
				var row = grd.findFirstRow("column1 ==\"column124\"");
				
				var idx = row.getIndex();
				var vsHeight = grd.getInitConfig().detail.rows[0].height;
				var vsNumExp = /[0-9]+/;
			
				var vnHeight = Number(vsHeight.match(vsNumExp)[0]);
				console.log(vnHeight);
				app.lookup("grd1").scrollTo(0,vnHeight*idx);
			}
			
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				var grd = app.lookup("grd1");
			//	var a=  grd.findFirstRow("column4 > 27");
			//	console.log(a);
				grd.scrollTo(0, 1000);
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				var a = app.lookup("grd1").getFilter()
				app.lookup("grd1").filter(a+"&& column4 > 5");
			}
			
			
			/*
			 * 넘버 에디터에서 value-change 이벤트 발생 시 호출.
			 * NumberEditor의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onNbe1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.NumberEditor
				 */
				var nbe1 = e.control;
				
				console.log(nbe1.numberValue);
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				app.lookup("grd1").filter("column5 ==1");
			}
			
			
			/*
			 * "filter" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				
				app.lookup("grd1").filter("(column6=='chA1'||column7=='chA1'|| column6=='chCom'||column7=='chCom')");
			}
			
			
			/*
			 * "Button" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn8 = e.control;
				app.lookup("grd1").filter("(column6=='chA1'||column7=='chA1'|| column6=='chCom'||column7=='chCom') && (column6=='TMC' || column7 =='TMC')");
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				app.lookup("grd1").filter("(column6=='chA1'||column7=='chA1'|| column6=='chCom'||column7=='chCom') && column6=='TMC'");
				
			}
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onIpb1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb1 = e.control;
				app.lookup("grd1").filter("String(column6).toUpperCase() *= '"+ipb1.value+"'.toUpperCase()");
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{
						"name": "column4",
						"dataType": "number"
					},
					{
						"name": "column5",
						"dataType": "number"
					},
					{"name": "column6"},
					{"name": "column7"}
				],
				"rows": [
					{"column1": "1", "column2": "column21", "column3": "가", "column4": "1", "column5": "1", "column6": "TMC", "column7": "MFC"},
					{"column1": "2", "column2": "column22", "column3": "나", "column4": "2", "column5": "2", "column6": "TMC", "column7": "MFC"},
					{"column1": "3", "column2": "column23", "column3": "다", "column4": "3", "column5": "3", "column6": "TMC", "column7": "MFC"},
					{"column1": "4", "column2": "column24", "column3": "라", "column4": "4", "column5": "1", "column6": "TMC", "column7": "MFC"},
					{"column1": "5", "column2": "column25", "column3": "마", "column4": "5", "column5": "2", "column6": "TMC", "column7": "MFC"},
					{"column1": "10", "column2": "column210", "column3": "column310", "column4": "6", "column5": "3", "column6": "TMC", "column7": "MFC"},
					{"column1": "6", "column2": "column26", "column3": "column36", "column4": "7", "column5": "1", "column6": "TMC", "column7": "MFC"},
					{"column1": "111", "column2": "column213", "column3": "column313", "column4": "8", "column5": "2", "column6": "TMC", "column7": "MFC"},
					{"column1": "8", "column2": "column28", "column3": "column38", "column4": "9", "column5": "3", "column6": "TMC", "column7": "chCom"},
					{"column1": "9", "column2": "column29", "column3": "column39", "column4": "10", "column5": "1", "column6": "TMC", "column7": "chCom"},
					{"column1": "99", "column2": "column212", "column3": "column312", "column4": "11", "column5": "2", "column6": "TMC", "column7": "chA1"},
					{"column1": "7", "column2": "column27", "column3": "column37", "column4": "12", "column5": "3", "column6": "TMC", "column7": "chA1"},
					{"column1": "21", "column2": "column211", "column3": "column311", "column4": "13", "column5": "1", "column6": "chA1", "column7": "MFC"},
					{"column1": "14", "column2": "column214", "column3": "column314", "column4": "14", "column5": "2", "column6": "chA1", "column7": "MFC"},
					{"column1": "02", "column2": "column215", "column3": "column315", "column4": "15", "column5": "3", "column6": "chA1", "column7": "MFC"},
					{"column1": "column116", "column2": "column216", "column3": "column316", "column4": "16", "column5": "1", "column6": "chA1", "column7": "MFC"},
					{"column1": "column117", "column2": "column217", "column3": "column317", "column4": "17", "column5": "2", "column6": "chA1", "column7": "MFC"},
					{"column1": "column118", "column2": "column218", "column3": "column318", "column4": "18", "column5": "3", "column6": "chA1", "column7": "chCom"},
					{"column1": "column119", "column2": "column219", "column3": "column319", "column4": "19", "column5": "1", "column6": "chA1", "column7": "chCom"},
					{"column1": "column120", "column2": "column220", "column3": "column320", "column4": "20", "column5": "2", "column6": "chA1", "column7": "chA1"},
					{"column1": "column121", "column2": "column221", "column3": "column321", "column4": "21", "column5": "3", "column6": "chA1", "column7": "chA1"},
					{"column1": "column122", "column2": "column222", "column3": "column322", "column4": "22", "column5": "1", "column6": "chCom", "column7": "MFC"},
					{"column1": "column123", "column2": "column223", "column3": "column323", "column4": "23", "column5": "2", "column6": "chCom", "column7": "chA1"},
					{"column1": "column124", "column2": "column224", "column3": "column324", "column4": "24", "column5": "3", "column6": "chCom", "column7": "chCom"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			xYLayout_1.animationDuration = 0.35;
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "column4";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "column5";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.targetColumnName = "column6";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column6";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.targetColumnName = "column7";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column7";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "column6";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "column7";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "50px",
				"left": "20px",
				"width": "910px",
				"height": "418px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "filte";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "20px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "20px",
				"left": "240px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Button";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "20px",
				"left": "350px",
				"width": "100px",
				"height": "20px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var button_5 = new cpr.controls.Button("btn7");
				button_5.value = "filter";
				if(typeof onBtn7Click == "function") {
					button_5.addEventListener("click", onBtn7Click);
				}
				container.addChild(button_5, {
					"width": "100px",
					"height": "20px"
				});
				var button_6 = new cpr.controls.Button("btn8");
				button_6.value = "Button";
				if(typeof onBtn8Click == "function") {
					button_6.addEventListener("click", onBtn8Click);
				}
				container.addChild(button_6, {
					"width": "100px",
					"height": "20px"
				});
				var button_7 = new cpr.controls.Button("btn5");
				button_7.value = "Button";
				if(typeof onBtn5Click2 == "function") {
					button_7.addEventListener("click", onBtn5Click2);
				}
				container.addChild(button_7, {
					"width": "100px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "95px",
				"left": "940px",
				"width": "114px",
				"height": "215px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			if(typeof onIpb1ValueChange == "function") {
				inputBox_1.addEventListener("value-change", onIpb1ValueChange);
			}
			container.addChild(inputBox_1, {
				"top": "20px",
				"left": "548px",
				"width": "100px",
				"height": "20px"
			});
		}
	});
	app.title = "filterTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
