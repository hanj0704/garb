/*
 * App URI: 202109/verticalTest
 * Source Location: 202109/verticalTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202109/verticalTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * verticalTest.js
			 * Created at 2021. 9. 24. 오후 3:11:05.
			 *
			 * @author HANS
			 ************************************************/
			
			
			function onBtnClick(/*cpr.events.CMouseEvent*/e){
				/** @type cpr.controls.Button */
				var btn = e.control;
				
				btn.getParent().updateConstraint(btn, {
					height: "5px"
				});
			//	btn.style.animateTo({
			//		"opacity" : "0"
			//	});
				
			//	var a = new cpr.animation.Animator(0.35,cpr.animation.TimingFunction.EASE_IN);
				
					
			}
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 animationend 이벤트 발생 시 호출.
			 * 애니메이션 종료 후 발생하는 이벤트.
			 */
			function onBtn1Animationend(/* cpr.events.CAnimationEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				console.log("ANI")
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 measure-size 이벤트 발생 시 호출.
			 * 컨트롤의 크기를 계산할 때 발생하는 이벤트
			 */
			function onBtn1MeasureSize(/* cpr.events.CMeasureSizeEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				console.log("MESU");
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 transitionend 이벤트 발생 시 호출.
			 * CSS 속성 트랜지션 종료 후 발생하는 이벤트.
			 */
			function onBtn1Transitionend(/* cpr.events.CTransitionEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				console.log("TRAN");
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.animationDuration = 0.5;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtnClick == "function") {
				button_1.addEventListener("click", onBtnClick);
			}
			if(typeof onBtn1Animationend == "function") {
				button_1.addEventListener("animationend", onBtn1Animationend);
			}
			if(typeof onBtn1MeasureSize == "function") {
				button_1.addEventListener("measure-size", onBtn1MeasureSize);
			}
			if(typeof onBtn1Transitionend == "function") {
				button_1.addEventListener("transitionend", onBtn1Transitionend);
			}
			container.addChild(button_1, {
				"width": "100px",
				"height": "103px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtnClick == "function") {
				button_2.addEventListener("click", onBtnClick);
			}
			container.addChild(button_2, {
				"width": "100px",
				"height": "103px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtnClick == "function") {
				button_3.addEventListener("click", onBtnClick);
			}
			container.addChild(button_3, {
				"width": "100px",
				"height": "103px"
			});
			if(typeof onBodyAnimationend == "function"){
				app.getContainer().addEventListener("animationend", onBodyAnimationend);
			}
			if(typeof onBodyMeasureSize == "function"){
				app.getContainer().addEventListener("measure-size", onBodyMeasureSize);
			}
			if(typeof onBodyTransitionstart == "function"){
				app.getContainer().addEventListener("transitionstart", onBodyTransitionstart);
			}
		}
	});
	app.title = "verticalTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
