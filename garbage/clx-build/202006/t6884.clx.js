/*
 * App URI: 202006/t6884
 * Source Location: 202006/t6884.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202006/t6884", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * t6884.js
			 * Created at 2020. 6. 18. 오후 1:41:25.
			 *
			 * @author Youminsang
			 ************************************************/
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				var vcDti1 = app.lookup("dti1");
				vcDti1.defaultDate = new Date().setHours(00, 00, 00, 00);
			}
			
			/*
			 * 데이트 인풋에서 value-change 이벤트 발생 시 호출.
			 * Dateinput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onDti1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.DateInput
				 */
				var dti1 = e.control;
				
			
				var newDate = e.newValue.substring(0, 8);
				
				var newValue = newDate + "000000"
				
				dti1.value = newValue;	
			}
			
			
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				
				console.log(moment(app.lookup("dti1").value,"YYYYMMDD").format("YYYYMMDDhhmmss"));
				console.log(app.lookup("ds1").getRowDataRanged());
			}
			
			
			/*
			 * 데이트 인풋에서 value-change 이벤트 발생 시 호출.
			 * Dateinput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onDti2ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.DateInput
				 */
				var dti2 = e.control;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "20200116142317", "column2": "A"},
					{"column1": "20200116152320", "column2": "B"},
					{"column1": "20200116172324", "column2": "C"},
					{"column1": "20200116192326", "column2": "D"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"selectionUnit": "cell",
				"columns": [
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "등록날짜";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "등록자";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
								cell.control = (function(){
									var dateInput_1 = new cpr.controls.DateInput("dti1");
									dateInput_1.mask = "YYYY-MM-DD HH:mm:ss";
									dateInput_1.format = "YYYYMMDDHHmmss";
									if(typeof onDti1BeforeValueChange == "function") {
										dateInput_1.addEventListener("before-value-change", onDti1BeforeValueChange);
									}
									if(typeof onDti1ValueChange == "function") {
										dateInput_1.addEventListener("value-change", onDti1ValueChange);
									}
									dateInput_1.bind("value").toDataColumn("column1");
									return dateInput_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						}
					]
				}
			});
			if(typeof onGrd1SelectionChange == "function") {
				grid_1.addEventListener("selection-change", onGrd1SelectionChange);
			}
			container.addChild(grid_1, {
				"top": "106px",
				"left": "69px",
				"width": "772px",
				"height": "336px"
			});
			
			var dateInput_2 = new cpr.controls.DateInput("dti2");
			if(typeof onDti2ValueChange == "function") {
				dateInput_2.addEventListener("value-change", onDti2ValueChange);
			}
			container.addChild(dateInput_2, {
				"top": "35px",
				"left": "69px",
				"width": "209px",
				"height": "36px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "35px",
				"left": "288px",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "t6884";
	cpr.core.Platform.INSTANCE.register(app);
})();
