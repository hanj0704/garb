/*
 * App URI: 201910/hyundaeTest
 * Source Location: 201910/hyundaeTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("201910/hyundaeTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * hyundaeTest.js
			 * Created at 2019. 10. 4. 오전 9:22:58.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
			}
			
			
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrd1SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
				
				var vcDs = app.lookup("ds2");
				grd1.getSelectedRow().getRowData();
			//	
			//	app.lookup("grd2").columnVisible(cellIndex, visible);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"stateRestore": false,
				"columns": [
					{
						"name": "idx",
						"dataType": "number"
					},
					{
						"name": "code",
						"dataType": "number"
					},
					{"name": "AccountName"},
					{
						"name": "debit",
						"dataType": "number"
					},
					{
						"name": "credit",
						"dataType": "number"
					},
					{"name": "ProofName"},
					{"name": "briefs"},
					{"name": "budget"},
					{"name": "acc"},
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{"name": "column6"}
				],
				"rows": [
					{"idx": "1", "code": "1", "AccountName": "AccountName1", "debit": "1", "credit": "1", "ProofName": "ProofName1", "briefs": "briefs1", "budget": "budget1", "acc": "acc1"},
					{"idx": "2", "code": "2", "AccountName": "AccountName2", "debit": "2", "credit": "2", "ProofName": "ProofName2", "briefs": "briefs2", "budget": "budget2", "acc": "acc2"},
					{"idx": "3", "code": "3", "AccountName": "AccountName3", "debit": "3", "credit": "3", "ProofName": "ProofName3", "briefs": "briefs3", "budget": "budget3", "acc": "acc3"},
					{"idx": "4", "code": "4", "AccountName": "AccountName4", "debit": "4", "credit": "4", "ProofName": "ProofName4", "briefs": "briefs4", "budget": "budget4", "acc": "acc4"},
					{"idx": "5", "code": "5", "AccountName": "AccountName5", "debit": "5", "credit": "5", "ProofName": "ProofName5", "briefs": "briefs5", "budget": "budget5", "acc": "acc5"},
					{"idx": "6", "code": "6", "AccountName": "AccountName6", "debit": "6", "credit": "6", "ProofName": "ProofName6", "briefs": "briefs6", "budget": "budget6", "acc": "acc6"},
					{"idx": "7", "code": "7", "AccountName": "AccountName7", "debit": "7", "credit": "7", "ProofName": "ProofName7", "briefs": "briefs7", "budget": "budget7", "acc": "acc7"},
					{"idx": "8", "code": "8", "AccountName": "AccountName8", "debit": "8", "credit": "8", "ProofName": "ProofName8", "briefs": "briefs8", "budget": "budget8", "acc": "acc8"},
					{"idx": "9", "code": "9", "AccountName": "AccountName9", "debit": "9", "credit": "9", "ProofName": "ProofName9", "briefs": "briefs9", "budget": "budget9", "acc": "acc9"},
					{"idx": "10", "code": "10", "AccountName": "AccountName10", "debit": "10", "credit": "10", "ProofName": "ProofName10", "briefs": "briefs10", "budget": "budget10", "acc": "acc10"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "c1"},
					{"name": "c2"},
					{"name": "c3"},
					{"name": "c4"},
					{"name": "c5"}
				],
				"rows": [
					{"c1": "선급부가가치세", "c2": "column1", "c3": "column2", "c4": "column3", "c5": "column4"},
					{"c1": "", "c2": "column1"},
					{"c1": "", "c2": "column5"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"autoFit": "none",
				"columns": [
					{"width": "36px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "idx";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "순번";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "code";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "계정코드";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "AccountName";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "계정명";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "debit";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "차변금액";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "credit";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "대변금액";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "ProofName";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "증빙명";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.targetColumnName = "briefs";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "적요";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.targetColumnName = "budget";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "예산";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.targetColumnName = "acc";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "거래처";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 14},
							"configurator": function(cell){
								cell.targetColumnName = "column6";
								cell.text = "column6";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 13},
							"configurator": function(cell){
								cell.targetColumnName = "column5";
								cell.text = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 12},
							"configurator": function(cell){
								cell.targetColumnName = "column4";
								cell.text = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 11},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.text = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 10},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.text = "column1";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "idx";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "code";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "AccountName";
								cell.control = (function(){
									var inputBox_1 = new cpr.controls.InputBox("ipb1");
									inputBox_1.bind("value").toDataColumn("AccountName");
									return inputBox_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "debit";
								cell.control = (function(){
									var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
									numberEditor_1.bind("value").toDataColumn("debit");
									return numberEditor_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "credit";
								cell.control = (function(){
									var numberEditor_2 = new cpr.controls.NumberEditor("nbe2");
									numberEditor_2.bind("value").toDataColumn("credit");
									return numberEditor_2;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "ProofName";
								cell.control = (function(){
									var inputBox_2 = new cpr.controls.InputBox("ipb2");
									inputBox_2.bind("value").toDataColumn("ProofName");
									return inputBox_2;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "briefs";
								cell.control = (function(){
									var inputBox_3 = new cpr.controls.InputBox("ipb3");
									inputBox_3.bind("value").toDataColumn("briefs");
									return inputBox_3;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "budget";
								cell.control = (function(){
									var inputBox_4 = new cpr.controls.InputBox("ipb4");
									inputBox_4.bind("value").toDataColumn("budget");
									return inputBox_4;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.columnName = "acc";
								cell.control = (function(){
									var inputBox_5 = new cpr.controls.InputBox("ipb5");
									inputBox_5.bind("value").toDataColumn("acc");
									return inputBox_5;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 14},
							"configurator": function(cell){
								cell.columnName = "column6";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 13},
							"configurator": function(cell){
								cell.columnName = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 12},
							"configurator": function(cell){
								cell.columnName = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 11},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 10},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						}
					]
				},
				"footer": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.expr = "\"합계\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.expr = "getSum(\"debit\")";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.expr = "getSum(\"credit\")";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 14},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 13},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 12},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 11},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 10},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.expr = "\"\"";
							}
						}
					]
				}
			});
			if(typeof onGrd1SelectionChange == "function") {
				grid_1.addEventListener("selection-change", onGrd1SelectionChange);
			}
			container.addChild(grid_1, {
				"top": "180px",
				"right": "20px",
				"left": "20px",
				"height": "259px"
			});
			
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["40px", "75px", "1fr", "1fr", "1fr", "1fr", "2fr", "100px", "1fr"]);
			formLayout_1.setRows(["1fr", "1fr", "1fr"]);
			formLayout_1.setUseRowShade(0, true);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt10");
				output_1.value = "순번";
				output_1.style.css({
					"text-align" : "center"
				});
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output("opt11");
				output_2.value = "계정코드";
				output_2.style.css({
					"text-align" : "center"
				});
				container.addChild(output_2, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_3 = new cpr.controls.Output("opt12");
				output_3.value = "계정명";
				output_3.style.css({
					"text-align" : "center"
				});
				container.addChild(output_3, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_4 = new cpr.controls.Output("opt13");
				output_4.value = "차변금액";
				output_4.style.css({
					"text-align" : "center"
				});
				container.addChild(output_4, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_5 = new cpr.controls.Output("opt14");
				output_5.value = "대변금액";
				output_5.style.css({
					"text-align" : "center"
				});
				container.addChild(output_5, {
					"colIndex": 4,
					"rowIndex": 0
				});
				var output_6 = new cpr.controls.Output("opt15");
				output_6.value = "증빙명";
				output_6.style.css({
					"text-align" : "center"
				});
				container.addChild(output_6, {
					"colIndex": 5,
					"rowIndex": 0
				});
				var output_7 = new cpr.controls.Output("opt16");
				output_7.value = "거래처";
				output_7.style.css({
					"text-align" : "center"
				});
				container.addChild(output_7, {
					"colIndex": 6,
					"rowIndex": 0
				});
				var output_8 = new cpr.controls.Output("opt17");
				output_8.value = "부서";
				output_8.style.css({
					"text-align" : "center"
				});
				container.addChild(output_8, {
					"colIndex": 7,
					"rowIndex": 0,
					"colSpan": 2,
					"rowSpan": 1
				});
				var output_9 = new cpr.controls.Output("opt18");
				output_9.value = "";
				container.addChild(output_9, {
					"colIndex": 7,
					"rowIndex": 2
				});
				var output_10 = new cpr.controls.Output("opt19");
				output_10.value = "";
				container.addChild(output_10, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_11 = new cpr.controls.Output("opt20");
				output_11.value = "";
				container.addChild(output_11, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var output_12 = new cpr.controls.Output("opt21");
				output_12.value = "";
				container.addChild(output_12, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var output_13 = new cpr.controls.Output("opt22");
				output_13.value = "";
				container.addChild(output_13, {
					"colIndex": 6,
					"rowIndex": 1
				});
				var output_14 = new cpr.controls.Output("opt23");
				output_14.value = "";
				container.addChild(output_14, {
					"colIndex": 7,
					"rowIndex": 1,
					"colSpan": 2,
					"rowSpan": 1
				});
				var output_15 = new cpr.controls.Output("opt24");
				output_15.value = "적요";
				output_15.style.css({
					"background-color" : "lightgray",
					"background-image" : "none"
				});
				container.addChild(output_15, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var output_16 = new cpr.controls.Output("opt25");
				output_16.value = "";
				container.addChild(output_16, {
					"colIndex": 1,
					"rowIndex": 2,
					"colSpan": 6,
					"rowSpan": 1
				});
				var output_17 = new cpr.controls.Output("opt26");
				output_17.value = "Output";
				container.addChild(output_17, {
					"colIndex": 4,
					"rowIndex": 1
				});
				var output_18 = new cpr.controls.Output("opt27");
				output_18.value = "Output";
				container.addChild(output_18, {
					"colIndex": 3,
					"rowIndex": 1
				});
				var comboBox_1 = new cpr.controls.ComboBox("cmb3");
				(function(comboBox_1){
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"colIndex": 8,
					"rowIndex": 2,
					"horizontalAlign": "fill",
					"verticalAlign": "fill"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "448px",
				"right": "20px",
				"left": "20px",
				"height": "91px"
			});
			
			var group_2 = new cpr.controls.Container();
			group_2.style.setClasses(["cl-form-group"]);
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.topMargin = "5px";
			formLayout_2.rightMargin = "5px";
			formLayout_2.bottomMargin = "5px";
			formLayout_2.leftMargin = "5px";
			formLayout_2.horizontalSpacing = "10px";
			formLayout_2.verticalSpacing = "10px";
			formLayout_2.horizontalSeparatorWidth = 1;
			formLayout_2.verticalSeparatorWidth = 1;
			formLayout_2.setColumns(["100px", "1fr", "100px", "1fr", "100px", "1fr", "100px", "1fr"]);
			formLayout_2.setUseColumnShade(0, true);
			formLayout_2.setUseColumnShade(2, true);
			formLayout_2.setUseColumnShade(4, true);
			formLayout_2.setUseColumnShade(6, true);
			formLayout_2.setRows(["1fr", "1fr", "1fr"]);
			group_2.setLayout(formLayout_2);
			(function(container){
				var output_19 = new cpr.controls.Output("opt1");
				output_19.value = "전표번호";
				container.addChild(output_19, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_20 = new cpr.controls.Output("opt2");
				output_20.value = "접수번호";
				container.addChild(output_20, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_21 = new cpr.controls.Output("opt3");
				output_21.value = "적요";
				container.addChild(output_21, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var output_22 = new cpr.controls.Output("opt4");
				output_22.value = "적요";
				container.addChild(output_22, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_23 = new cpr.controls.Output("opt5");
				output_23.value = "회계일자";
				container.addChild(output_23, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var output_24 = new cpr.controls.Output("opt6");
				output_24.value = "전표상태";
				container.addChild(output_24, {
					"colIndex": 4,
					"rowIndex": 0
				});
				var output_25 = new cpr.controls.Output("opt7");
				output_25.value = "금액";
				container.addChild(output_25, {
					"colIndex": 4,
					"rowIndex": 1
				});
				var output_26 = new cpr.controls.Output("opt8");
				output_26.value = "담당부서";
				container.addChild(output_26, {
					"colIndex": 6,
					"rowIndex": 0
				});
				var output_27 = new cpr.controls.Output("opt9");
				output_27.value = "담당자";
				container.addChild(output_27, {
					"colIndex": 6,
					"rowIndex": 1
				});
				var inputBox_6 = new cpr.controls.InputBox("ipb6");
				container.addChild(inputBox_6, {
					"colIndex": 1,
					"rowIndex": 2,
					"colSpan": 7,
					"rowSpan": 1
				});
				var inputBox_7 = new cpr.controls.InputBox("ipb7");
				container.addChild(inputBox_7, {
					"colIndex": 7,
					"rowIndex": 1
				});
				var inputBox_8 = new cpr.controls.InputBox("ipb8");
				container.addChild(inputBox_8, {
					"colIndex": 7,
					"rowIndex": 0
				});
				var comboBox_2 = new cpr.controls.ComboBox("cmb1");
				(function(comboBox_2){
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"colIndex": 5,
					"rowIndex": 0
				});
				var comboBox_3 = new cpr.controls.ComboBox("cmb2");
				comboBox_3.style.setClasses(["abras"]);
				(function(comboBox_3){
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var numberEditor_3 = new cpr.controls.NumberEditor("nbe3");
				numberEditor_3.spinButton = false;
				numberEditor_3.style.setClasses(["abras"]);
				container.addChild(numberEditor_3, {
					"colIndex": 5,
					"rowIndex": 1
				});
				var dateInput_1 = new cpr.controls.DateInput("dti1");
				dateInput_1.style.setClasses(["abras"]);
				container.addChild(dateInput_1, {
					"colIndex": 3,
					"rowIndex": 1,
					"horizontalAlign": "left"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "20px",
				"right": "20px",
				"left": "20px",
				"height": "120px"
			});
			
			var group_3 = new cpr.controls.Container();
			// Layout
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.horizontalSeparatorWidth = 1;
			formLayout_3.verticalSeparatorWidth = 1;
			formLayout_3.setColumns(["1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr"]);
			formLayout_3.setRows(["1fr", "1fr"]);
			formLayout_3.setUseRowShade(0, true);
			group_3.setLayout(formLayout_3);
			(function(container){
				var output_28 = new cpr.controls.Output("opt28");
				output_28.value = "";
				container.addChild(output_28, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_29 = new cpr.controls.Output("opt29");
				output_29.value = "";
				container.addChild(output_29, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_30 = new cpr.controls.Output("opt30");
				output_30.value = "";
				container.addChild(output_30, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_31 = new cpr.controls.Output("opt31");
				output_31.value = "";
				container.addChild(output_31, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_32 = new cpr.controls.Output("opt32");
				output_32.value = "";
				container.addChild(output_32, {
					"colIndex": 4,
					"rowIndex": 0
				});
				var output_33 = new cpr.controls.Output("opt33");
				output_33.value = "";
				container.addChild(output_33, {
					"colIndex": 5,
					"rowIndex": 0
				});
				var output_34 = new cpr.controls.Output("opt34");
				output_34.value = "";
				container.addChild(output_34, {
					"colIndex": 6,
					"rowIndex": 0
				});
				var output_35 = new cpr.controls.Output("opt35");
				output_35.value = "";
				container.addChild(output_35, {
					"colIndex": 7,
					"rowIndex": 0
				});
				var output_36 = new cpr.controls.Output("opt36");
				output_36.value = "";
				container.addChild(output_36, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_37 = new cpr.controls.Output("opt37");
				output_37.value = "";
				container.addChild(output_37, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var output_38 = new cpr.controls.Output("opt38");
				output_38.value = "";
				container.addChild(output_38, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var output_39 = new cpr.controls.Output("opt39");
				output_39.value = "";
				container.addChild(output_39, {
					"colIndex": 3,
					"rowIndex": 1
				});
				var output_40 = new cpr.controls.Output("opt40");
				output_40.value = "";
				container.addChild(output_40, {
					"colIndex": 4,
					"rowIndex": 1
				});
				var output_41 = new cpr.controls.Output("opt41");
				output_41.value = "";
				container.addChild(output_41, {
					"colIndex": 6,
					"rowIndex": 1
				});
				var output_42 = new cpr.controls.Output("opt42");
				output_42.value = "";
				container.addChild(output_42, {
					"colIndex": 5,
					"rowIndex": 1
				});
				var output_43 = new cpr.controls.Output("opt43");
				output_43.value = "";
				container.addChild(output_43, {
					"colIndex": 7,
					"rowIndex": 1
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "541px",
				"right": "20px",
				"left": "20px",
				"height": "56px"
			});
			
			var grid_2 = new cpr.controls.Grid("grd2");
			grid_2.init({
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
							}
						}
					]
				}
			});
			container.addChild(grid_2, {
				"top": "604px",
				"right": "20px",
				"left": "20px",
				"height": "50px"
			});
		}
	});
	app.title = "현대아산 테스트";
	cpr.core.Platform.INSTANCE.register(app);
})();
