/*
 * App URI: savepoint/draftMan
 * Source Location: savepoint/draftMan.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("savepoint/draftMan", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * draftMan.js
			 * Created at 2020. 7. 30. 오후 5:45:52.
			 *
			 * @author han
			 ************************************************/
			var util = createCommonUtil();
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				var a = util.Dialog.isOpenedPop(app);
			//	console.log(a);
			//	console.log(app.getHost());
				var voHostProp = app.getHostProperty("initValue");
				var voPasteData = voHostProp["copyData"];
				
				var vcEmbApp = app.lookup("ea1");
				
				cpr.core.App.load(voHostProp["pageParam"], function(loadedApp) {
					
					vcEmbApp.app = loadedApp;
					
					vcEmbApp.addEventListener("app-ready", function(e) {
						
						var voNewAppIns = vcEmbApp.getEmbeddedAppInstance();
						voNewAppIns.getContainer().getAllRecursiveChildren().forEach(function(each) {
							each.removeAllEventListeners();
						});
						voNewAppIns.removeAllEventListeners();
						cpr.core.DeferredUpdateManager.INSTANCE.asyncExec(function(){
							
						});
						voNewAppIns.addEventListenerOnce("load", function(ev) {
							
							voPasteData.dataComponent.forEach(function(each) {
								
								var dataComponent = voNewAppIns.lookup(each.id);
								dataComponent.build(each.value);
							});
							
							voPasteData.control.forEach(function(each) {
								
								var iterCtrls = voNewAppIns.lookup(each.id);
								if(each.isBinded) {
									iterCtrls.unbind("value");
								}
								iterCtrls.putValue(each.value);
							});
							voNewAppIns.getContainer().readOnly = true;
							var voDialogManager = app.getRootAppInstance().dialogManager;
							var voDialogRect = voDialogManager.getConstraintByName(app.app.id);
							var voContentRect = app.lookup("ea1").getEmbeddedAppInstance().getContainer().getContentPaneRect();
							//dialogRect에 calc가 적용되지 않아 임시적으로 작성된 변수입니다.
			//				console.log(voContentRect);
							var dia = voDialogManager.getDialogByName(app.app.id);
							
							dia.style.css({
								top : "calc(10%)",
			//					right:"calc(10%)",
			//					bottom:"calc(10%)",
								left: "calc(10%)",
								width:"calc(80%)",
								height : "calc(80%)",
								backgroundColor : "white"
							});
							
							voNewAppIns.getContainer().getAllRecursiveChildren().forEach(function(each){
								if(each instanceof cpr.controls.TabFolder || each instanceof cpr.controls.MDIFolder) {
								 /** @type cpr.controls.TabFolder */
									var fold = each;
									
			//						fold.getAllRecursiveChildren().forEach(function(eachs){
			//							
			////							console.log(eachs);
			//							if(eachs instanceof cpr.controls.Container) {
			////								console.log(eachs);
			//								voNewAppIns.getContainer().addChild(eachs, {
			//									"width" : "400px",
			//									"height" : "300px",
			//									"autoSize":"none"
			//								});
			//							}
			//						});
									
									var Cont = new cpr.controls.Container();
									var flowL = new cpr.controls.layouts.FlowLayout();
									Cont.setLayout(flowL);
									var tem = fold.getOffsetRect();
									console.log(tem);
									voNewAppIns.getContainer().addChild(Cont, {
										"width" : tem.width+"px",
										"height": tem.height+"px",
										"left" : tem.left+"px",
										"top" : tem.right+"px"
									});
									fold.getTabItems().forEach(function(each){
										
										Cont.addChild(each.content, {
											"width" : "400px",
											"height": "300px",
											"autoSize" : "none"
										});
									});
			//						console.log(fold.getActualRect());
			//						console.log(fold.getOffsetRect());
									
			//						fold.getTabItems().forEach(function(eachs){
			//							console.log(eachs);
			//							console.log(eachs.text);
			//							var opts = new cpr.controls.Output();
			//							
			//							opts.value = eachs.text;
			//							voNewAppIns.getContainer().addChild(opts, {
			//								"width" :"400px",
			//								"height":"30px",
			//								"autoSize":"none"
			//							});
			//							voNewAppIns.getContainer().addChild(eachs.content, {
			//								"width":"400px",
			//								"height":"300px",
			//								"autoSize":"none"
			//							});
			//						});
									
									
			//						voNewAppIns.getContainer().removeChild(fold);
								
								
								}
							});
			//				dia.style.css({
			//					top : "calc(50% - "+voContentRect.height/2+"px)",
			//					left : "calc(50% - "+voContentRect.width/2+"px)",
			//					width :voContentRect.width+10+"px",
			//					height : voContentRect.height+100+"px",
			//					backgroundColor : "white"
			//				});
							
							
			//				cpr.core.DeferredUpdateManager.INSTANCE.update();
			//				console.log("돌려돌려돌림판");
			//				var vnCenterTop = voDialogRect.top - (voContentRect.height - voDialogRect.height) / 2;
			//				var vnCenterLeft = voDialogRect.left - (voContentRect.width - voDialogRect.width) / 2;
			//				
			//				app.getHostAppInstance().dialogManager.replaceConstraintByName(app.app.id, {
			//					"width": voContentRect.width + 10,
			//					"height": voContentRect.height + 100,
			//					"left": vnCenterLeft,
			//					"top": vnCenterTop
			//				})
						});
						
						
					});
				});
				
			}
			
			/*
			 * "취소" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				app.close();
			}
			
			/*
			 * "결재" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				app.close();
			}
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			container.addChild(embeddedApp_1, {
				"top": "0px",
				"right": "0px",
				"bottom": "50px",
				"left": "0px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "취소";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"right": "10px",
				"bottom": "10px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "결재";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"right": "120px",
				"bottom": "10px",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "draftMan";
	cpr.core.Platform.INSTANCE.register(app);
})();
