/*
 * App URI: 202004/subTest
 * Source Location: 202004/subTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202004/subTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * subTest.js
			 * Created at 2020. 4. 13. 오전 12:19:33.
			 *
			 * @author HANS
			 ************************************************/
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				app.lookup("sms1").send();
			//	var a = cpr.core.Platform.INSTANCE.getAllRunningAppInstances();
			//	console.log(a);
				
			//	var anObject = cpr.core.Platform.INSTANCE.lookup("202004/subTest");
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				app.lookup("sms3").send();
				
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				var sub = new cpr.protocols.Submission();
				
				sub.action = "/cisweb/getList4.do";
				sub.mediaType = "application/x-www-form-urlencoded";
				sub.responseType = "text";
				sub.async = true;
				var ds = app.lookup("dsPlan");
				var datas = ds.getRowDataRanged();
				var datas2 = app.lookup("dm1").getDatas();
				sub.setRequestObject(datas2);
				
				sub.addEventListener("before-submit", function(e){
					console.log(e.control.getRequestObject());
				});
				sub.send();
			}
			
			
			/*
			 * 파일 인풋에서 value-change 이벤트 발생 시 호출.
			 * FileInput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onFi1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.FileInput
				 */
				var fi1 = e.control;
				
				app.lookup("sms4").addFileParameter("FI1", fi1.file);
			}
			
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms3SubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms3 = e.control;
				
				var a = sms3.xhr.responseText;
				console.log(a);
				
			}
			
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				app.lookup("sms4").send();
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				
				app.lookup("ep1").getPostMethod("")
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms1SubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
			
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsPlan");
			dataSet_1.parseData({
				"alterColumnLayout": "server",
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21"},
					{"column1": "column12", "column2": "column22"},
					{"column1": "column13", "column2": "column23"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "column1",
						"defaultValue": "a"
					},
					{
						"name": "column2",
						"defaultValue": "b"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.withCredentials = false;
			submission_1.method = "post";
			submission_1.action = "/cisweb/getList.do";
			submission_1.mediaType = "application/x-www-form-urlencoded;simple";
			submission_1.responseType = "text";
			submission_1.addRequestData(dataMap_1);
			if(typeof onSms1BeforeSubmit == "function") {
				submission_1.addEventListener("before-submit", onSms1BeforeSubmit);
			}
			if(typeof onSms1SubmitProgress == "function") {
				submission_1.addEventListener("submit-progress", onSms1SubmitProgress);
			}
			if(typeof onSms1SubmitDone == "function") {
				submission_1.addEventListener("submit-done", onSms1SubmitDone);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms2");
			submission_2.action = "/cisweb/getList4.do";
			submission_2.mediaType = "application/x-www-form-urlencoded;simple";
			submission_2.responseType = "text";
			submission_2.addRequestData(dataMap_1);
			if(typeof onSms2BeforeSubmit == "function") {
				submission_2.addEventListener("before-submit", onSms2BeforeSubmit);
			}
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("sms3");
			submission_3.action = "/cisweb/getList3.do";
			submission_3.responseType = "javascript";
			if(typeof onSms3SubmitDone == "function") {
				submission_3.addEventListener("submit-done", onSms3SubmitDone);
			}
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("sms4");
			submission_4.action = "/cisweb/getList.do";
			submission_4.mediaType = "multipart/form-data;simple";
			submission_4.addRequestData(dataMap_1);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("sms5");
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("sms6");
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "89px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			inputBox_1.bind("value").toDataMap(app.lookup("dm1"), "column1");
			container.addChild(inputBox_1, {
				"top": "41px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "119px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "149px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var fileInput_1 = new cpr.controls.FileInput("fi1");
			if(typeof onFi1ValueChange == "function") {
				fileInput_1.addEventListener("value-change", onFi1ValueChange);
			}
			container.addChild(fileInput_1, {
				"top": "11px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Button";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "179px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.value = "Button";
			container.addChild(button_5, {
				"top": "209px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_6 = new cpr.controls.Button("btn6");
			button_6.value = "Button";
			if(typeof onBtn6Click == "function") {
				button_6.addEventListener("click", onBtn6Click);
			}
			container.addChild(button_6, {
				"top": "238px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var embeddedPage_1 = new cpr.controls.EmbeddedPage("ep1");
			container.addChild(embeddedPage_1, {
				"top": "11px",
				"left": "148px",
				"width": "320px",
				"height": "240px"
			});
			if(typeof onBodyScreenChange == "function"){
				app.addEventListener("screen-change", onBodyScreenChange);
			}
		}
	});
	app.title = "subTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
