/*
 * App URI: 202004/test
 * Source Location: 202004/test.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202004/test", {
		onPrepare: function(loader){
			loader.addScript("202004/abc.js");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			var utils = createCommonUtil();
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				var ipb = app.lookup("ipb2");
				
			//	ipb.setSelection({start:0,end:ipb.length});
			//	ipb.autoSelect = true;
			//	ipb.focus();
			
			//	document.execCommand("copy");
			
			//	var dummy = document.createElement("textarea");
			//	console.log(dummy);
				
				var ipbEle = document.getElementById("uuid-"+ipb.uuid);
			
			//	b.select();
			//	document.execCommand("copy");
			//	ipbEle.select();
			//	document.body.appendChild(dummy);
			//	dummy.value = ipb.value;
			//	
			//	dummy.select();
			//	document.execCommand("copy");
			//	document.body.removeChild(dummy);
				var a = new ClipboardEvent("copy",{
					dataType : "text/plain",
					data : "zz"
				});
			//	console.log(a.clipboardData.);
			//	a.clipboardData.setData("text/plain", "aa");
			//	a.clipboardData.setData("text/plain", ipb.value);
			//	app.dispatchEvent(a);
			
			//	ClipboardEvent.prototype.clipboardData.setData("text", ipb.value);
			}
			
			
			/*
			 * 인풋 박스에서 select 이벤트 발생 시 호출.
			 * 사용자가 텍스트를 선택할 때 발생하는 이벤트.
			 */
			function onIpb2Select(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb2 = e.control;
				console.log("select?");
			}
			
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				
			//	document.addEventListener("copy", function(){
			//		console.log("COPY!!!");
			//	});
			
			//app.lookup("ds1").changeRowIndex(sourceIndex, targetIndex);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{
						"name": "column4",
						"dataType": "number"
					}
				],
				"rows": [{"column1": "true", "column2": "column21", "column3": "column31", "column4": "1"}]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "label1", "value": "1", "parent": "0"},
					{"label": "label2", "value": "2", "parent": "1"},
					{"label": "label3", "value": "3", "parent": "1"},
					{"label": "label4", "value": "4", "parent": "1"}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{
					"name": "column1",
					"defaultValue": ""
				}]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "199px",
				"height": "32px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cmb1");
			(function(comboBox_1){
				comboBox_1.addItem(new cpr.controls.Item("label1", "value1"));
				comboBox_1.addItem(new cpr.controls.Item("label2", "value2"));
				comboBox_1.addItem(new cpr.controls.Item("label3", "value3"));
				comboBox_1.addItem(new cpr.controls.Item("label4", "value4"));
				comboBox_1.addItem(new cpr.controls.Item("label5", "value5"));
			})(comboBox_1);
			container.addChild(comboBox_1, {
				"top": "62px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var radioButton_1 = new cpr.controls.RadioButton("rdb1");
			(function(radioButton_1){
			})(radioButton_1);
			container.addChild(radioButton_1, {
				"top": "92px",
				"left": "20px",
				"width": "200px",
				"height": "40px"
			});
			
			var mDIFolder_1 = new cpr.controls.MDIFolder("mdi1");
			container.addChild(mDIFolder_1, {
				"top": "142px",
				"left": "20px",
				"width": "320px",
				"height": "240px"
			});
			
			var tree_1 = new cpr.controls.Tree("tre1");
			(function(tree_1){
			})(tree_1);
			container.addChild(tree_1, {
				"top": "142px",
				"left": "350px",
				"width": "200px",
				"height": "150px"
			});
			
			var listBox_1 = new cpr.controls.ListBox("lbx1");
			(function(listBox_1){
			})(listBox_1);
			container.addChild(listBox_1, {
				"top": "142px",
				"left": "560px",
				"width": "100px",
				"height": "150px"
			});
			
			var checkBoxGroup_1 = new cpr.controls.CheckBoxGroup("cbg1");
			(function(checkBoxGroup_1){
			})(checkBoxGroup_1);
			container.addChild(checkBoxGroup_1, {
				"top": "302px",
				"left": "350px",
				"width": "310px",
				"height": "80px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column4";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column4";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column4";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "20px",
				"left": "230px",
				"width": "430px",
				"height": "112px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			container.addChild(inputBox_1, {
				"top": "62px",
				"left": "119px",
				"width": "100px",
				"height": "20px"
			});
			
			var tabFolder_1 = new cpr.controls.TabFolder("tb1");
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "tab1";
				var group_1 = new cpr.controls.Container("grp1");
				// Layout
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_1.setLayout(xYLayout_2);
				(function(container){
				})(group_1);
				tabItem_1.content = group_1;
				return tabItem_1;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_1);
			tabFolder_1.setSelectedTabItem(tabItem_1);
			container.addChild(tabFolder_1, {
				"top": "20px",
				"left": "670px",
				"width": "334px",
				"height": "362px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			container.addChild(embeddedApp_1, {
				"top": "392px",
				"left": "20px",
				"width": "320px",
				"height": "240px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "423px",
				"left": "378px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "453px",
				"left": "378px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("ipb2");
			inputBox_2.value = "교교교교자";
			if(typeof onIpb2Select == "function") {
				inputBox_2.addEventListener("select", onIpb2Select);
			}
			container.addChild(inputBox_2, {
				"top": "453px",
				"left": "488px",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "밍밍밍";
	cpr.core.Platform.INSTANCE.register(app);
})();
