/*
 * App URI: 202004/tester
 * Source Location: 202004/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202004/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2020. 4. 2. 오전 9:12:01.
			 *
			 * @author HANS
			 ************************************************/
			
			var util = createCommonUtil();
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrd1SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grd1 = e.control;
			
				app.lookup("grd2").filter("pk =='"+grd1.getSelectedRow().getValue("master")+"'");
			}
			
			
			/*
			 * "디테일추가" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click4(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				app.lookup("grd2").insertRowData(app.lookup("grd2").getRowCount(), false,
				{
					"pk" : app.lookup("grd1").getSelectedRow().getValue("fromDetail")
				});
			}
			
			
			/*
			 * "저장" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				var grid = app.lookup("grd1");
				var grid2 = app.lookup("grd2");
				var aa = grid2.findAllRow("getStateString()=='I'");
				
				aa.forEach(function(each){
					var bb = each.getValue("detail");
					var rowDt = grid.getSelectedRow().getRowData();
					rowDt.fromDetail = bb;	
				
					grid.insertRowData(grid.getSelectedRow(), false, rowDt);
				});
				
				
				grid.clearSelection();
				grid2.setFilter("pk==''");
				app.lookup("grp1").redraw();
				
			}
			
			
			/*
			 * 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				cpr.core.App.load("202003/treechartSample", function(loadedApp){
					
					app.lookup("ea1").app = loadedApp;
					
					loadedApp.createNewInstance();
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsMaster");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "master",
						"dataType": "number"
					},
					{"name": "fromDetail"},
					{"name": "column3"}
				],
				"rows": [
					{"master": "1", "fromDetail": "fromDetail1", "column3": "column31"},
					{"master": "2", "fromDetail": "fromDetail2", "column3": "column32"},
					{"master": "3", "fromDetail": "fromDetail3", "column3": "column33"},
					{"master": "4", "fromDetail": "fromDetail4", "column3": "column34"},
					{"master": "5", "fromDetail": "fromDetail5", "column3": "column35"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsDetail");
			dataSet_2.parseData({
				"columns": [
					{
						"name": "pk",
						"dataType": "number"
					},
					{"name": "detail"}
				],
				"rows": [{"detail": "fromDetail1", "pk": "1"}]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "column1",
						"defaultValue": "aa"
					},
					{"name": "column2"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.responseType = "filedownload";
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = linker.grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("dsMaster"),
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "master";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "master";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "fromDetail";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "fromDetail";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "master";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "fromDetail";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						}
					]
				}
			});
			if(typeof onGrd1SelectionChange == "function") {
				grid_1.addEventListener("selection-change", onGrd1SelectionChange);
			}
			container.addChild(grid_1, {
				"top": "31px",
				"left": "20px",
				"width": "427px",
				"height": "499px"
			});
			
			var group_1 = linker.group_1 = new cpr.controls.Container("grp1");
			group_1.style.setClasses(["cl-form-group"]);
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["100px", "1fr"]);
			formLayout_1.setUseColumnShade(0, true);
			formLayout_1.setRows(["25px", "25px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt1");
				output_1.value = "master";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output("opt2");
				output_2.value = "from";
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_3 = new cpr.controls.Output("opt3");
				output_3.value = "col3";
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				inputBox_1.bind("value").toDataColumn("master");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var inputBox_2 = new cpr.controls.InputBox("ipb2");
				inputBox_2.bind("value").toDataColumn("fromDetail");
				container.addChild(inputBox_2, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var inputBox_3 = new cpr.controls.InputBox("ipb3");
				inputBox_3.bind("value").toDataColumn("column3");
				container.addChild(inputBox_3, {
					"colIndex": 1,
					"rowIndex": 2
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "31px",
				"left": "457px",
				"width": "526px",
				"height": "369px"
			});
			
			var grid_2 = new cpr.controls.Grid("grd2");
			grid_2.init({
				"dataSet": app.lookup("dsDetail"),
				"columns": [{"width": "100px"}],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [{
						"constraint": {"rowIndex": 0, "colIndex": 0},
						"configurator": function(cell){
							cell.targetColumnName = "detail";
							cell.filterable = false;
							cell.sortable = false;
							cell.text = "detail";
						}
					}]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [{
						"constraint": {"rowIndex": 0, "colIndex": 0},
						"configurator": function(cell){
							cell.columnName = "detail";
							cell.control = (function(){
								var inputBox_4 = new cpr.controls.InputBox("ipb4");
								inputBox_4.bind("value").toDataColumn("detail");
								return inputBox_4;
							})();
						}
					}]
				}
			});
			container.addChild(grid_2, {
				"top": "410px",
				"left": "457px",
				"width": "410px",
				"height": "120px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "디테일추가";
			if(typeof onBtn1Click4 == "function") {
				button_1.addEventListener("click", onBtn1Click4);
			}
			container.addChild(button_1, {
				"top": "410px",
				"left": "870px",
				"width": "113px",
				"height": "57px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "저장";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "477px",
				"left": "870px",
				"width": "113px",
				"height": "53px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			container.addChild(embeddedApp_1, {
				"top": "540px",
				"left": "20px",
				"width": "427px",
				"height": "208px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "540px",
				"left": "457px",
				"width": "100px",
				"height": "20px"
			});
			
			var textArea_1 = new cpr.controls.TextArea("txa1");
			container.addChild(textArea_1, {
				"top": "570px",
				"left": "457px",
				"width": "100px",
				"height": "178px"
			});
			
			var uIControlShell_1 = new cpr.controls.UIControlShell("shl1");
			container.addChild(uIControlShell_1, {
				"top": "540px",
				"left": "567px",
				"width": "138px",
				"height": "208px"
			});
			
			var embeddedPage_1 = new cpr.controls.EmbeddedPage("ep1");
			container.addChild(embeddedPage_1, {
				"top": "540px",
				"left": "715px",
				"width": "268px",
				"height": "208px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.group_1.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
