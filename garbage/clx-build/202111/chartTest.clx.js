/*
 * App URI: 202111/chartTest
 * Source Location: 202111/chartTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202111/chartTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * chartTest.js
			 * Created at 2021. 11. 11. 오후 5:22:48.
			 *
			 * @author HANS
			 ************************************************/
			
			var datas = [];
			var now = new Date(1997, 9, 3);
			var oneDay = 24 * 3600 * 1000;
			var value = Math.random() * 1000;
			
			function randomData() {
			  var now = new Date(+now + oneDay);
			  var value = value + Math.random() * 21 - 10;
			  return {
			    name: now.toString(),
			    value: [
			      [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),
			      Math.round(value)
			    ]
			  };
			}
			/*
			 * 쉘에서 load 이벤트 발생 시 호출.
			 */
			function onShl1Load(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.UIControlShell
				 */
				var shl1 = e.control;
				
				var voContent = e.content;
				
				var myChart = echarts.init(voContent);
				
			
			for (var i = 0; i < 1000; i++) {
			  datas.push(randomData());
			}
			var options = {
			  title: {
			    text: 'Dynamic Data & Time Axis'
			  },
			  tooltip: {
			    trigger: 'axis',
			    formatter: function (params) {
			      params = params[0];
			      var date = new Date(params.name);
			      return (
			        date.getDate() +
			        '/' +
			        (date.getMonth() + 1) +
			        '/' +
			        date.getFullYear() +
			        ' : ' +
			        params.value[1]
			      );
			    },
			    axisPointer: {
			      animation: false
			    }
			  },
			  xAxis: {
			    type: 'time',
			    splitLine: {
			      show: false
			    }
			  },
			  yAxis: {
			    type: 'value',
			    boundaryGap: [0, '100%'],
			    splitLine: {
			      show: false
			    }
			  },
			  series: [
			    {
			      name: 'Fake Data',
			      type: 'line',
			      showSymbol: false,
			      data: datas
			    }
			  ]
			};
			myChart.setOption(options);
			//setInterval(function () {
			//  for (var i = 0; i < 5; i++) {
			//    data.shift();
			//    data.push(randomData());
			//  }
			//  myChart.setOption({
			//    series: [
			//      {
			//        data: data
			//      }
			//    ]
			//  });
			//}, 1000);
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var uIControlShell_1 = new cpr.controls.UIControlShell("shl1");
			if(typeof onShl1Load == "function") {
				uIControlShell_1.addEventListener("load", onShl1Load);
			}
			container.addChild(uIControlShell_1, {
				"top": "20px",
				"left": "20px",
				"width": "984px",
				"height": "399px"
			});
		}
	});
	app.title = "chartTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
