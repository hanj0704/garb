/*
 * App URI: 202111/udcRowBindTest
 * Source Location: 202111/udcRowBindTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202111/udcRowBindTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * udcRowBindTest.js
			 * Created at 2021. 11. 12. 오후 2:51:21.
			 *
			 * @author HANS
			 ************************************************/
			cpr.core.AppConfig.INSTANCE.setControlValue("container", {
				"useCustomScrollbar" : true
			});
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var ap  = app.lookup("ha");
				var dsB = new cpr.bind.DataRowContext(app.lookup("ds1"), 0);
				ap.setBindContext(dsB);
				ap.redraw();
			}
			
			
			/*
			 * "insert" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31"},
					{"column1": "column12", "column2": "column22", "column3": "column32"},
					{"column1": "column13", "column2": "column23", "column3": "column33"},
					{"column1": "column14", "column2": "column24", "column3": "column34"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.han.test("ha");
			userDefinedControl_1.newProperty1 = "self.getParent().getChindren().indexOf(self)";
			container.addChild(userDefinedControl_1, {
				"top": "20px",
				"left": "20px",
				"width": "300px",
				"height": "300px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "330px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "50px",
				"left": "330px",
				"width": "625px",
				"height": "270px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "insert";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "20px",
				"left": "745px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "delete";
			container.addChild(button_3, {
				"top": "20px",
				"left": "855px",
				"width": "100px",
				"height": "20px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			var dataRowContext_1 = new cpr.bind.DataRowContext(app.lookup("ds1"), 2);
			group_1.setBindContext(dataRowContext_1);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				inputBox_1.bind("value").toDataColumn("column1");
				container.addChild(inputBox_1, {
					"top": "0px",
					"left": "0px",
					"width": "100px",
					"height": "20px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipb2");
				inputBox_2.bind("value").toDataColumn("column2");
				container.addChild(inputBox_2, {
					"top": "0px",
					"left": "110px",
					"width": "100px",
					"height": "20px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipb3");
				inputBox_3.bind("value").toDataColumn("column3");
				container.addChild(inputBox_3, {
					"top": "0px",
					"left": "220px",
					"width": "100px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "330px",
				"left": "492px",
				"width": "320px",
				"height": "20px"
			});
			
			var group_2 = new cpr.controls.Container("grp2");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_4 = new cpr.controls.Button("btn4");
				button_4.value = "Button";
				container.addChild(button_4, {
					"top": "500px",
					"left": "145px",
					"width": "100px",
					"height": "20px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "360px",
				"left": "172px",
				"width": "321px",
				"height": "174px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.bind("value").toDataSet(app.lookup("ds1"), "column1", 1);
			container.addChild(button_5, {
				"top": "360px",
				"left": "612px",
				"width": "91px",
				"height": "26px"
			});
		}
	});
	app.title = "udcRowBindTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
