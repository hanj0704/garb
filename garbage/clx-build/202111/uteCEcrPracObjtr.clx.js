/*
 * App URI: 202111/uteCEcrPracObjtr
 * Source Location: 202111/uteCEcrPracObjtr.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202111/uteCEcrPracObjtr", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/*************************************************
			 * 화면명    : uteCEcrPracObjtr 응급심폐소생 실습대상자
			 * 개발자    : ntk
			 * 최초작성 : 2020.07 .13
			 * 변경이력 :
			 *************************************************/
			var util = createCommonUtil();
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.s
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				// 서브미션 호출
				util.Submit.send(app, "subOnLoad", null, function(pbSuccess){
					if(pbSuccess){
						app.lookup("nbeSchYear").value = app.lookup("dmResponse").getValue("strSchYear");
						
						// 해당 학년도에 등록된 공고만큼 그리드 헤더 동적추가
						doSelectGrdHeader();
					}		
				}, true);
			}
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 * 조회 클릭 이벤트
			 */
			function onAppheader1Search(/* cpr.events.CAppEvent */ e){
				
				// 데이터 변경상태 체크
				if(util.Grid.isModified(app, "grdMain", "CRM")) return;
				
				// 조회조건 유효성 체크
				if(!util.validate(app, "grpSearch")) return;
				
				//조회 서브미션 수행
				doList();
			}
			
			/**
			 * 데이터 조회를 수행한다.
			 * @param {Function} poCallBackFunc 조회 후의 수행할 콜백함수
			 */
			function doList(psStatus) {
				util.Submit.send(app, "subList", null, function(pbSuccess){
					if(pbSuccess){
						if(psStatus == "save"){
							//갱신된 데이터가 조회되었습니다.
							util.Msg.notify(app, "INF-M005");
						}else{
							//조회되었습니다.
							util.Msg.notify(app, "INF-M001");
						}	
					}
				});
			}
			
			function doSelectGrdHeader(){
				app.lookup("dmParamGridHeader").setValue("strSchYear", app.lookup("nbeSchYear").value);
				
				//조회 서브미션 호출
			    util.Submit.send(app, "subListGrdHeader", null, function(pbSuccess){
			        if(pbSuccess) {
			        	var vnRowCnt = app.lookup("dsGrdHeader").getRowCount();
			        	var vnColIdx = 8;
			        	
			        	for(var i = 0; i < vnRowCnt; i++){
			        		// columnName 셋팅
			        		var vsColumnName = doColumnNameSet(app.lookup("dsGrdHeader").getValue(i, "SCH_YEAR"));
			        		
			        		if(i == 0){
			        			app.lookup("grdMain").addColumn({
				        			columnLayout: [{
				        				width: "100px"
				        			}],
				        			header : [{
				        				constraint: {
				        					rowIndex : 0,
				        					colIndex : vnColIdx,
				        				},
				        				configurator: function(cell){
				        					cell.text = "실습결과";
				        				}
				        			}, {
				        				constraint: {
				        					rowIndex : 1,
				        					colIndex : vnColIdx,
				        				},
				        				configurator: function(cell){
				        					cell.text =  app.lookup("dsGrdHeader").getValue(i, "SMT_NM")
				        					          + "-" + app.lookup("dsGrdHeader").getValue(i, "SEQ_NM");
				        				}
				        			}],
				        			detail: [{
				        				constraint: {
				        					rowIndex : 0,
				        					colIndex : vnColIdx        					
				        				},
				        				configurator: function(cell){
				        					cell.columnName = "";
				        					cell.style.css({"text-align" : "center"});
				        				}
				        			}]
				        		});
			        		}else{
			        			app.lookup("grdMain").addColumn({
				        			columnLayout: [{
				        				width: "100px"
				        			}],
				        			header : [{
				        				constraint: {
				        					rowIndex : 0,
				        					colIndex : vnColIdx,
				        				},
				        				configurator: function(cell){
				        					cell.text = "";
				        				}
				        			}, {
				        				constraint: {
				        					rowIndex : 1,
				        					colIndex : vnColIdx
				        				},
				        				configurator: function(cell){
				        					cell.text =  app.lookup("dsGrdHeader").getValue(i, "SMT_NM")
				        					          + "-" + app.lookup("dsGrdHeader").getValue(i, "SEQ_NM");
				        				}
				        			}],
				        			detail: [{
				        				constraint: {
				        					rowIndex : 0,
				        					colIndex : vnColIdx        					
				        				},
				        				configurator: function(cell){
				        					cell.columnName = "";
				        					cell.style.css({"text-align" : "center"});
				        				}
				        			}]
				        		});
			        		}
			        		
			        		vnColIdx = ValueUtil.fixNumber(vnColIdx) + 1;
			        	}
			        	
			        	// 동적으로 추가한 헤더의 실습결과 합치기
			        	app.lookup("grdMain").header.getColumn(8).cellProp.constraint.colSpan = vnRowCnt;
			        	app.lookup("grdMain").redraw();
			        }
			    });
			}
			
			function doColumnNameSet(vsQuestAraRcd){
				var vsColumnName = "";
				
				if(vsQuestAraRcd == "UTE013.0001"){
					vsColumnName = "ARA_RCD_01_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0002"){
					vsColumnName = "ARA_RCD_02_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0003"){
					vsColumnName = "ARA_RCD_03_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0004"){
					vsColumnName = "ARA_RCD_04_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0005"){
					vsColumnName = "ARA_RCD_05_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0006"){
					vsColumnName = "ARA_RCD_06_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0007"){
					vsColumnName = "ARA_RCD_07_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0008"){
					vsColumnName = "ARA_RCD_08_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0009"){
					vsColumnName = "ARA_RCD_09_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0010"){
					vsColumnName = "ARA_RCD_10_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0011"){
					vsColumnName = "ARA_RCD_11_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0012"){
					vsColumnName = "ARA_RCD_12_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0013"){
					vsColumnName = "ARA_RCD_13_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.0014"){
					vsColumnName = "ARA_RCD_14_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.1001"){
					vsColumnName = "ARA_RCD_15_TOT_SCORE";
				}else if(vsQuestAraRcd == "UTE013.1002"){
					vsColumnName = "ARA_RCD_16_TOT_SCORE";
				}
				
				return vsColumnName;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSmtRcd");
			dataSet_1.parseData({
				"filterCondition": "CD_USG_01 == 'Y'",
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"},
					{"name": "CD_USG_01"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsMain");
			dataSet_2.parseData({
				"info": "SCH_YEAR,SMT_RCD,QUEST_ARA_RCD",
				"columns": [
					{
						"name": "DEPT_NM",
						"dataType": "string"
					},
					{"name": "MJR_NM"},
					{
						"name": "STDNO",
						"dataType": "string"
					},
					{
						"name": "STDNM",
						"dataType": "string"
					},
					{
						"name": "CMP_SMT",
						"dataType": "string"
					},
					{
						"name": "SCH_STAT_NM",
						"dataType": "string"
					},
					{
						"name": "SEQ_01_YN",
						"dataType": "string"
					},
					{
						"name": "SEQ_02_YN",
						"dataType": "string"
					},
					{"name": "SEQ_03_YN"},
					{"name": "SEQ_04_YN"},
					{"name": "CPNO"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsQuestAraRcd");
			dataSet_3.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsMandChoiceRcd");
			dataSet_4.parseData({
				"columns" : [
					{"name": "CD_NM"},
					{"name": "CD"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsGrdHeader");
			dataSet_5.parseData({
				"columns" : [
					{"name": "SCH_YEAR"},
					{"name": "SMT_RCD"},
					{"name": "SEQ_RCD"},
					{"name": "SMT_NM"},
					{"name": "SEQ_NM"}
				]
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmParamGridHeader");
			dataMap_1.parseData({
				"columns" : [{"name": "strSchYear"}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResponse");
			dataMap_2.parseData({
				"columns" : [
					{"name": "strSchYear"},
					{"name": "strSmtRcd"}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmParam");
			dataMap_3.parseData({
				"columns" : [
					{"name": "strSchYear"},
					{"name": "strDeptCd"},
					{"name": "strExecYn"}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/UteEcrPracObjtr/onLoad.do";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/UteEcrPracObjtr/list.do";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/UteEcrPracObjtr/save.do";
			submission_3.addRequestData(dataSet_2);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListGrdHeader");
			submission_4.async = false;
			submission_4.action = "/UteEcrPracObjtr/listGrdHeader.do";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_5, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1320px)", "buis");
			app.supportMedia("all and (min-width: 1235px) and (max-width: 1319px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "5px";
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["62px", "1fr"]);
			container.setLayout(formLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.topMargin = "0px";
			formLayout_2.rightMargin = "0px";
			formLayout_2.bottomMargin = "0px";
			formLayout_2.leftMargin = "0px";
			formLayout_2.horizontalSpacing = "5px";
			formLayout_2.verticalSpacing = "5px";
			formLayout_2.setColumns(["1fr"]);
			formLayout_2.setRows(["1fr"]);
			group_1.setLayout(formLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("grp8");
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.topMargin = "0px";
				formLayout_3.rightMargin = "0px";
				formLayout_3.bottomMargin = "0px";
				formLayout_3.leftMargin = "0px";
				formLayout_3.horizontalSpacing = "5px";
				formLayout_3.verticalSpacing = "5px";
				formLayout_3.setColumns(["1fr"]);
				formLayout_3.setRows(["20px", "1fr"]);
				group_2.setLayout(formLayout_3);
				(function(container){
					var grid_1 = new cpr.controls.Grid("grdMain");
					grid_1.fieldLabel = "응급심폐소생술 대상자";
					grid_1.init({
						"dataSet": app.lookup("dsMain"),
						"autoFit": "none",
						"columns": [
							{"width": "40px"},
							{"width": "200px"},
							{"width": "200px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "100px"},
							{"width": "200px"}
						],
						"header": {
							"rows": [
								{"height": "24px"},
								{"height": "27px"}
							],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.text = "No";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.text = "연락처";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.text = "학부(과)";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.text = "이수학기";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.text = "학적상태";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.text = "성명";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.text = "학번";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2, "rowSpan": 2, "colSpan": 1},
									"configurator": function(cell){
										cell.text = "전공";
									}
								}
							]
						},
						"detail": {
							"rows": [{"height": "24px"}],
							"cells": [
								{
									"constraint": {"rowIndex": 0, "colIndex": 0},
									"configurator": function(cell){
										cell.columnType = "rowindex";
										cell.style.css({
											"text-align" : "center"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 7},
									"configurator": function(cell){
										cell.columnName = "CPNO";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 1},
									"configurator": function(cell){
										cell.columnName = "DEPT_NM";
										cell.style.css({
											"text-align" : "left"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 5},
									"configurator": function(cell){
										cell.columnName = "CMP_SMT";
										cell.style.css({
											"text-align" : "center"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 6},
									"configurator": function(cell){
										cell.columnName = "SCH_STAT_NM";
										cell.style.css({
											"text-align" : "center"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 4},
									"configurator": function(cell){
										cell.columnName = "STDNM";
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 3},
									"configurator": function(cell){
										cell.columnName = "STDNO";
										cell.style.css({
											"text-align" : "center"
										});
									}
								},
								{
									"constraint": {"rowIndex": 0, "colIndex": 2},
									"configurator": function(cell){
										cell.columnName = "MJR_NM";
									}
								}
							]
						}
					});
					grid_1.style.css({
						"text-align" : "center"
					});
					container.addChild(grid_1, {
						"colIndex": 0,
						"rowIndex": 1
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"colIndex": 0,
				"rowIndex": 1
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "응급심폐소생 실습대상자";
	cpr.core.Platform.INSTANCE.register(app);
})();
