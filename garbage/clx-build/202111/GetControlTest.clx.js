/*
 * App URI: 202111/GetControlTest
 * Source Location: 202111/GetControlTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202111/GetControlTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * GetControlTest.js
			 * Created at 2021. 10. 28. 오전 10:37:51.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				
				var vara = new cpr.geometry.Rectangle(150,40,400,400);
			
				var vaChild = app.getContainer().getAllRecursiveChildren().filter(function(each){
					var b = each.getActualRect().bottomRight;
					
					if(vara.contains(b)){
						return b;
					}
				});
				
				console.log(vaChild)
			}
			
			function createFeedback(){
				
				var vcFeedback = new cpr.controls.Output();
				
				vcFeedback.value = "";
				
				vcFeedback.style.css({
					"background-color" : "rgba(73,165,245,0.4)",
					"border" : "solid 1px #40a5f5"
				});
				
				return vcFeedback;
			}
			function createDragSource(control){
				var feedback = null;
				var rect = null;
				new cpr.controls.DragSource(control, {
					options : {
						dataType : "tex",
						threadhold : 30
					},
					onDragStart: function(context){
						
							
						context.cursor = "grabbing";
						feedback = createFeedback();
						rect = new cpr.geometry.Rectangle(context.dragStartLocation.x, context.dragStartLocation.y, 1, 1);
						app.floatControl(feedback,rect);
						var voDragStartLoca = context.dragStartLocation;
						context.source = null;
					},
					onDragMove: function(context){
						
						var start = context.dragStartLocation;
						var dragStart = context.dragStartLocation;
						var dragDelta = context.dragDelta;
						
						
						rect = new cpr.geometry.Rectangle(dragStart.x, dragStart.y, dragDelta.width, dragDelta.height);
						app.floatControl(feedback,rect);
			//			console.log(newRect);
			//			app.floatControl(feedback,newRect);
						
					},
					
					onDragEnd: function(context){
						context.cursor = "";
						feedback.dispose();
						feedback = null;
						
						console.log(rect);
						
						var vaChild = app.getContainer().getAllRecursiveChildren().filter(function(each){
							
							var br = each.getActualRect().bottomRight;
							var tl = each.getActualRect().topLeft;
							
							if(rect.contains(br) && rect.contains(tl)){
								return each;
							}
						});
						
						console.log(vaChild);
					}
				});
			}
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				createDragSource(app.getContainer());
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			xYLayout_2.scrollable = false;
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_2 = new cpr.controls.Button("btn2");
				button_2.value = "Button";
				container.addChild(button_2, {
					"top": "36px",
					"left": "58px",
					"width": "100px",
					"height": "20px"
				});
				var button_3 = new cpr.controls.Button("btn3");
				button_3.value = "Button";
				container.addChild(button_3, {
					"top": "135px",
					"left": "41px",
					"width": "100px",
					"height": "20px"
				});
				var button_4 = new cpr.controls.Button("btn4");
				button_4.value = "Button";
				container.addChild(button_4, {
					"top": "154px",
					"left": "58px",
					"width": "100px",
					"height": "20px"
				});
				var button_5 = new cpr.controls.Button("btn5");
				button_5.value = "Button";
				container.addChild(button_5, {
					"top": "184px",
					"left": "112px",
					"width": "100px",
					"height": "20px"
				});
				var button_6 = new cpr.controls.Button("btn6");
				button_6.value = "Button";
				container.addChild(button_6, {
					"top": "233px",
					"left": "211px",
					"width": "100px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "68px",
				"left": "216px",
				"width": "311px",
				"height": "309px"
			});
			
			var button_7 = new cpr.controls.Button("btn7");
			button_7.value = "Button";
			container.addChild(button_7, {
				"top": "158px",
				"left": "178px",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "GetControlTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
