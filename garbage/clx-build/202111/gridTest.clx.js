/*
 * App URI: 202111/gridTest
 * Source Location: 202111/gridTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202111/gridTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * gridTest.js
			 * Created at 2021. 11. 15. 오후 4:45:06.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				var grd = app.lookup("grd1");
				
				var a  = grd.getColumnLayout();
				
				console.log(a);
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				var grd = app.lookup("grd1");
				
				var a  = grd.getColumnLayout();
				
				console.log(a);
				
				a.header[0].colSpan = 3;
				
				grd.setColumnLayout(a);
				grd.redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
			//	console.log(app.lookup("grd1").header.getColumn(0))
			//	app.lookup("grd1").header.getColumn(0).rowSpan = 3;
			app.lookup("grd1").header.getColumn(0).cellProp.constraint.colIndex = 0;
				app.lookup("grd1").header.getColumn(0).cellProp.constraint.colSpan = 3;
				app.lookup("grd1").redraw();
				var vcGrid = app.lookup("grd1");
				
				
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var vcGrd = app.lookup("grd1");
				vcGrd.insertRowData(1, true,{
					"column1" : "111",
					"column2" : "111",
					"column3" : "111",
					"column4" : "111",
					"column5" : "111"
				});
				app.getContainer().redraw();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41", "column5": "column51"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42", "column5": "column52"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43", "column5": "column53"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44", "column5": "column54"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "column45", "column5": "column55"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "column4";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "column5";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column5";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column1";
								cell.control = (function(){
									var inputBox_1 = new cpr.controls.InputBox("ipb1");
									inputBox_1.bind("value").toDataColumn("column1");
									return inputBox_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column2";
								cell.control = (function(){
									var inputBox_2 = new cpr.controls.InputBox("ipb2");
									inputBox_2.bind("value").toDataColumn("column2");
									return inputBox_2;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column3";
								cell.control = (function(){
									var inputBox_3 = new cpr.controls.InputBox("ipb3");
									inputBox_3.bind("value").toDataColumn("column3");
									return inputBox_3;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "column4";
								cell.control = (function(){
									var inputBox_4 = new cpr.controls.InputBox("ipb4");
									inputBox_4.bind("value").toDataColumn("column4");
									return inputBox_4;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "column5";
								cell.control = (function(){
									var inputBox_5 = new cpr.controls.InputBox("ipb5");
									inputBox_5.bind("value").toDataColumn("column5");
									return inputBox_5;
								})();
							}
						}
					]
				}
			});
			grid_1.style.css({
				"background-color" : "red",
				"background-image" : "none"
			});
			grid_1.style.header.css({
				"background-image" : "none"
			});
			container.addChild(grid_1, {
				"top": "20px",
				"left": "20px",
				"width": "697px",
				"height": "273px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			group_1.style.setClasses(["cl-form-group"]);
			var dataRowContext_1 = new cpr.bind.DataRowContext(app.lookup("ds1"), 0);
			group_1.setBindContext(dataRowContext_1);
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "10px";
			formLayout_1.rightMargin = "10px";
			formLayout_1.bottomMargin = "10px";
			formLayout_1.leftMargin = "10px";
			formLayout_1.horizontalSpacing = "5px";
			formLayout_1.verticalSpacing = "5px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["1fr", "1fr", "1fr", "1fr", "1fr"]);
			formLayout_1.setRows(["30px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output("opt1");
				output_1.bind("value").toDataColumn("column1");
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output("opt2");
				output_2.bind("value").toDataColumn("column2");
				container.addChild(output_2, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_3 = new cpr.controls.Output("opt3");
				output_3.bind("value").toDataColumn("column3");
				container.addChild(output_3, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_4 = new cpr.controls.Output("opt4");
				output_4.bind("value").toDataColumn("column4");
				container.addChild(output_4, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_5 = new cpr.controls.Output("opt5");
				output_5.bind("value").toDataColumn("column5");
				container.addChild(output_5, {
					"colIndex": 4,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "317px",
				"left": "20px",
				"width": "697px",
				"height": "52px"
			});
			
			var group_2 = new cpr.controls.Container("grp2");
			group_2.style.setClasses(["cl-form-group"]);
			var dataRowContext_2 = new cpr.bind.DataRowContext(app.lookup("ds1"), 1);
			group_2.setBindContext(dataRowContext_2);
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.scrollable = false;
			formLayout_2.topMargin = "10px";
			formLayout_2.rightMargin = "10px";
			formLayout_2.bottomMargin = "10px";
			formLayout_2.leftMargin = "10px";
			formLayout_2.horizontalSpacing = "5px";
			formLayout_2.verticalSpacing = "5px";
			formLayout_2.horizontalSeparatorWidth = 1;
			formLayout_2.verticalSeparatorWidth = 1;
			formLayout_2.setColumns(["1fr", "1fr", "1fr", "1fr", "1fr"]);
			formLayout_2.setRows(["30px"]);
			group_2.setLayout(formLayout_2);
			(function(container){
				var output_6 = new cpr.controls.Output("opt6");
				output_6.bind("value").toDataColumn("column1");
				container.addChild(output_6, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_7 = new cpr.controls.Output("opt7");
				output_7.bind("value").toDataColumn("column2");
				container.addChild(output_7, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_8 = new cpr.controls.Output("opt8");
				output_8.bind("value").toDataColumn("column3");
				container.addChild(output_8, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_9 = new cpr.controls.Output("opt9");
				output_9.bind("value").toDataColumn("column4");
				container.addChild(output_9, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_10 = new cpr.controls.Output("opt10");
				output_10.bind("value").toDataColumn("column5");
				container.addChild(output_10, {
					"colIndex": 4,
					"rowIndex": 0
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "379px",
				"left": "20px",
				"width": "697px",
				"height": "52px"
			});
			
			var group_3 = new cpr.controls.Container("grp3");
			group_3.style.setClasses(["cl-form-group"]);
			var dataRowContext_3 = new cpr.bind.DataRowContext(app.lookup("ds1"), 2);
			group_3.setBindContext(dataRowContext_3);
			// Layout
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.scrollable = false;
			formLayout_3.topMargin = "10px";
			formLayout_3.rightMargin = "10px";
			formLayout_3.bottomMargin = "10px";
			formLayout_3.leftMargin = "10px";
			formLayout_3.horizontalSpacing = "5px";
			formLayout_3.verticalSpacing = "5px";
			formLayout_3.horizontalSeparatorWidth = 1;
			formLayout_3.verticalSeparatorWidth = 1;
			formLayout_3.setColumns(["1fr", "1fr", "1fr", "1fr", "1fr"]);
			formLayout_3.setRows(["30px"]);
			group_3.setLayout(formLayout_3);
			(function(container){
				var output_11 = new cpr.controls.Output("opt11");
				output_11.bind("value").toDataColumn("column1");
				container.addChild(output_11, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_12 = new cpr.controls.Output("opt12");
				output_12.bind("value").toDataColumn("column2");
				container.addChild(output_12, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_13 = new cpr.controls.Output("opt13");
				output_13.bind("value").toDataColumn("column3");
				container.addChild(output_13, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_14 = new cpr.controls.Output("opt14");
				output_14.bind("value").toDataColumn("column4");
				container.addChild(output_14, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_15 = new cpr.controls.Output("opt15");
				output_15.bind("value").toDataColumn("column5");
				container.addChild(output_15, {
					"colIndex": 4,
					"rowIndex": 0
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "441px",
				"left": "20px",
				"width": "697px",
				"height": "52px"
			});
			
			var group_4 = new cpr.controls.Container("grp4");
			group_4.style.setClasses(["cl-form-group"]);
			var dataRowContext_4 = new cpr.bind.DataRowContext(app.lookup("ds1"), 3);
			group_4.setBindContext(dataRowContext_4);
			// Layout
			var formLayout_4 = new cpr.controls.layouts.FormLayout();
			formLayout_4.scrollable = false;
			formLayout_4.topMargin = "10px";
			formLayout_4.rightMargin = "10px";
			formLayout_4.bottomMargin = "10px";
			formLayout_4.leftMargin = "10px";
			formLayout_4.horizontalSpacing = "5px";
			formLayout_4.verticalSpacing = "5px";
			formLayout_4.horizontalSeparatorWidth = 1;
			formLayout_4.verticalSeparatorWidth = 1;
			formLayout_4.setColumns(["1fr", "1fr", "1fr", "1fr", "1fr"]);
			formLayout_4.setRows(["30px"]);
			group_4.setLayout(formLayout_4);
			(function(container){
				var output_16 = new cpr.controls.Output("opt16");
				output_16.bind("value").toDataColumn("column1");
				container.addChild(output_16, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_17 = new cpr.controls.Output("opt17");
				output_17.bind("value").toDataColumn("column2");
				container.addChild(output_17, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_18 = new cpr.controls.Output("opt18");
				output_18.bind("value").toDataColumn("column3");
				container.addChild(output_18, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_19 = new cpr.controls.Output("opt19");
				output_19.bind("value").toDataColumn("column4");
				container.addChild(output_19, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_20 = new cpr.controls.Output("opt20");
				output_20.bind("value").toDataColumn("column5");
				container.addChild(output_20, {
					"colIndex": 4,
					"rowIndex": 0
				});
			})(group_4);
			container.addChild(group_4, {
				"top": "503px",
				"left": "20px",
				"width": "697px",
				"height": "52px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click2 == "function") {
				button_1.addEventListener("click", onBtn1Click2);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "727px",
				"width": "100px",
				"height": "20px"
			});
		}
	});
	app.title = "gridTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
