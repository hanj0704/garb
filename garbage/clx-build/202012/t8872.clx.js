/*
 * App URI: 202012/t8872
 * Source Location: 202012/t8872.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202012/t8872", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * t8872.js
			 * Created at 2020. 12. 18. 오후 1:47:54.
			 *
			 * @author Youminsang
			 ************************************************/
			
			cpr.expression.ExpressionEngine.INSTANCE.registerConstant("calcBgcol", function(psValue, psColNm, pcCtrl){
				
				/** @type cpr.controls.Grid*/	
				var vcGrid = pcCtrl;
				
				/** @type cpr.data.DataSet*/
				var vcDs = vcGrid.dataSet;
				
				var a = vcDs.getUnfilteredDistinctValues(psColNm);
				
				var b = a.indexOf(psValue);
				
				if(b%2 == 0){
					return "blue";
				} else {
					return "yellow";
				}
			});
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				resetGroupSeq(app.lookup("ds1"), "column1", "group_seq");
			}
			
			function resetGroupSeq(/* cpr.data.DataSet */ds, /*string*/colNm, /*string*/gsColNm) {
				var rowCnt = ds.getRowCount();
				var oldVal = null;
				var groupSeq = 0;
				for(var idx = 0; idx < rowCnt; idx++) {
					var row = ds.getRow(idx);
					var newVal = row.getValue(colNm);
					if(oldVal != newVal) {
						groupSeq++;
					}
					row.setValue(gsColNm, groupSeq);
					
					oldVal = newVal;
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "column1",
						"dataType": "number"
					},
					{"name": "column2"},
					{"name": "column3"},
					{
						"name": "group_seq",
						"displayOnly": true
					}
				],
				"rows": [
					{"column1": "1", "column2": "column21", "column3": "column31"},
					{"column1": "1", "column2": "column22", "column3": "column32"},
					{"column1": "2", "column2": "column23", "column3": "column33"},
					{"column1": "2", "column2": "column24", "column3": "column34"},
					{"column1": "2", "column2": "column25", "column3": "column35"},
					{"column1": "3", "column2": "column26", "column3": "column36"},
					{"column1": "3", "column2": "column29", "column3": "column39"},
					{"column1": "4", "column2": "column27", "column3": "column37"},
					{"column1": "5", "column2": "column28", "column3": "column38"},
					{"column1": "5", "column2": "column210", "column3": "column310"},
					{"column1": "6", "column2": "column211", "column3": "column311"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"suppressedCellType": "merged",
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "30px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
								cell.suppressible = true;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						}
					]
				}
			});
			grid_1.style.row.bind("background-color").toExpression("group_seq % 2 == 0 ? \"rgba(255, 217, 250, 0.5)\" : \"rgba(183, 240, 177, 0.5)\"");
			container.addChild(grid_1, {
				"top": "59px",
				"left": "68px",
				"width": "697px",
				"height": "379px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "t8872";
	cpr.core.Platform.INSTANCE.register(app);
})();
