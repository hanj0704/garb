/*
 * App URI: 202008/CH01
 * Source Location: 202008/CH01.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202008/CH01", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb4SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb4 = e.control;
				
				var ids = app.app.id;
				
				app.app.createNewInstance().run();
				
				app.close();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("grid01");
			dataSet_1.parseData({
				"columns" : [
					{"name": "userId"},
					{"name": "stCd"},
					{"name": "usrPosnCd"},
					{"name": "usrEngNm"},
					{"name": "usrLocalNm"},
					{"name": "blngBrNo"},
					{"name": "tmlIstBrNo"},
					{"name": "grpId"},
					{"name": "tmlDvCd"},
					{"name": "tmlTypCd"},
					{"name": "tlrNo"},
					{"name": "ipAdr"},
					{"name": "pwUpdDt"},
					{"name": "snrId"},
					{"name": "lstTrscDt"},
					{"name": "pwLckYn"},
					{"name": "expryDt"},
					{"name": "mbphNo"},
					{"name": "themeKind"},
					{"name": "emalAdr"},
					{"name": "lnggCd"},
					{"name": "bussBrUpdAlwnYn"},
					{"name": "lginPw"},
					{"name": "tlrDvCd"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("usrPsnCd");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "Manager", "value": "3"},
					{"label": "Teller", "value": "2"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("stCd");
			dataSet_3.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "LIVE", "value": "0"},
					{"label": "DELETED", "value": "1"},
					{"label": "LEAVE", "value": "2"},
					{"label": "INACTIVE", "value": "3"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("trscBrNo");
			dataSet_4.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "0888", "value": "0888"},
					{"label": "1101", "value": "1101"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("usrPosnCd");
			dataSet_5.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "CLERK", "value": "1"},
					{"label": "ASSISTANT MANAGER", "value": "2"},
					{"label": "MANAGER", "value": "3"},
					{"label": "DEPUTY GENERAL MANAGER", "value": "4"},
					{"label": "GENERAL MANAGER", "value": "5"},
					{"label": "REVIEW STAFF", "value": "6"},
					{"label": "LOAN COMMITEE", "value": "7"},
					{"label": "SYSTEM MANAGER", "value": "9"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("grpId");
			dataSet_6.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "HOPAC01", "value": "HOPAC01"},
					{"label": "HSPGA01", "value": "HSPGA01"},
					{"label": "MAKANMA", "value": "MAKANMA"},
					{"label": "BOPTELL", "value": "BOPTELL"},
					{"label": "HOODC01", "value": "HOODC01"},
					{"label": "HOODC02", "value": "HOODC02"},
					{"label": "HOPTL01", "value": "HOPTL01"},
					{"label": "HOPLN0A", "value": "HOPLN0A"},
					{"label": "HOPTR0A", "value": "HOPTR0A"},
					{"label": "HSPCS0A", "value": "HSPCS0A"},
					{"label": "HSPHR0A", "value": "HSPHR0A"},
					{"label": "HSPTL0A", "value": "HSPTL0A"},
					{"label": "SUPER01", "value": "SUPER01"},
					{"label": "BO00001", "value": "BO00001"},
					{"label": "GA00001", "value": "GA00001"},
					{"label": "CA00001", "value": "CA00001"},
					{"label": "TEST", "value": "TEST"}
				]
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("brNoTrnfYn");
			dataSet_7.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "Y", "value": "Y"},
					{"label": "N", "value": "N"}
				]
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("grid04");
			dataSet_8.parseData({
				"columns" : []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("pwdLckYn");
			dataSet_9.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "Y", "value": "Y"},
					{"label": "N", "value": "N"}
				]
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("tlrDvCD");
			dataSet_10.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "NORMAL TELLER", "value": "1"},
					{"label": "MOM TELLER", "value": "9"},
					{"label": "BATCH", "value": "2"},
					{"label": "ATM", "value": "3"}
				]
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("stCd2");
			dataSet_11.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "LIVE", "value": "0"},
					{"label": "DELETED", "value": "1"},
					{"label": "LEAVE", "value": "2"},
					{"label": "INACTIVE", "value": "3"}
				]
			});
			app.register(dataSet_11);
			var dataMap_1 = new cpr.data.DataMap("input");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "trscDvCd",
						"defaultValue": "3"
					},
					{"name": "userId"},
					{"name": "blngBrNo"},
					{"name": "usrPosnCd"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dm1");
			dataMap_2.parseData({
				"columns" : [
					{"name": "userId"},
					{"name": "stCd"},
					{"name": "usrPosnCd"},
					{"name": "usrEngNm"},
					{"name": "blngBrNo"},
					{"name": "tmlIstBrNo"},
					{"name": "grpId"},
					{"name": "tmlDvCd"},
					{"name": "tmlTypCd"},
					{"name": "ipAdr"},
					{"name": "pwUpdDt"},
					{"name": "snrId"},
					{"name": "lstTrscDt"},
					{"name": "pwLckYn"},
					{"name": "expryDt"},
					{"name": "mbphNo"},
					{"name": "themeKind"},
					{"name": "emalAdr"},
					{"name": "lnggCd"},
					{"name": "bussBrUpdAlwnYn"},
					{"name": "lginPw"},
					{"name": "tlrDvCd"},
					{"name": "usrLocalNm"}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/CHO0100A.SVC";
			submission_1.mediaType = "application/json";
			submission_1.addRequestData(dataMap_1, "input");
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var matrixSubmission_1 = new cpr.protocols.MatrixSubmission("subExec");
			matrixSubmission_1.async = true;
			matrixSubmission_1.withCredentials = false;
			matrixSubmission_1.method = "post";
			matrixSubmission_1.action = "/CHO0100A.SVC";
			matrixSubmission_1.userAttr({"isMatrixSub": "Y"});
			matrixSubmission_1.setProtocolDataModel(new cpr.protocols.matrix.MatrixDataModel({
				"request": {
					"format": "object",
					"data": {
						"input" : {
							"format": "object",
							"data": {
								"userId": {"format": "simple", "dataControl": dataMap_1, "path": "@userId"},
								"trscDvCd": {"format": "simple", "dataControl": dataMap_1, "path": "@trscDvCd"},
								"blngBrNo": {"format": "simple", "dataControl": dataMap_1, "path": "@blngBrNo"},
								"grid01": {
									"format": "array",
									"dataControl": dataSet_1,
									"data": {
										"userId": {"format": "simple", "path": "@userId"},
										"stCd": {"format": "simple", "path": "@stCd"},
										"usrPosnCd": {"format": "simple", "path": "@usrPosnCd"},
										"usrEngNm": {"format": "simple", "path": "@usrEngNm"},
										"blngBrNo": {"format": "simple", "path": "@blngBrNo"},
										"tmlIstBrNo": {"format": "simple", "path": "@tmlIstBrNo"},
										"grpId": {"format": "simple", "path": "@grpId"},
										"tmlDvCd": {"format": "simple", "path": "@tmlDvCd"},
										"tmlTypCd": {"format": "simple", "path": "@tmlTypCd"},
										"tlrNo": {"format": "simple", "path": "@tlrNo"},
										"ipAdr": {"format": "simple", "path": "@ipAdr"},
										"snrId": {"format": "simple", "path": "@snrId"},
										"pwLckYn": {"format": "simple", "path": "@pwLckYn"},
										"expryDt": {"format": "simple", "path": "@expryDt"},
										"mbphNo": {"format": "simple", "path": "@mbphNo"},
										"emalAdr": {"format": "simple", "path": "@emalAdr"},
										"lginPw": {"format": "simple", "path": "@lginPw"},
										"pwUpdDt": {"format": "simple", "path": "@pwUpdDt"},
										"bussBrUpdAlwnYn": {"format": "simple", "path": "@bussBrUpdAlwnYn"},
										"tlrDvCd": {"format": "simple", "path": "@tlrDvCd"},
										"usrLocalNm": {"format": "simple", "path": "@usrLocalNm"}
									}
								}
							}
						}
					}
				},
				"response": {
					"format": "object",
					"data": {
						"grid04" : {
							"format": "array",
							"dataControl": dataSet_8,
							"data": {}
						}
					}
				}
			}));
			app.register(matrixSubmission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDupChk");
			submission_2.action = "/CHO0100A.SVC";
			submission_2.mediaType = "application/json";
			submission_2.addRequestData(dataMap_1);
			if(typeof onSubDupChkSubmitError == "function") {
				submission_2.addEventListener("submit-error", onSubDupChkSubmitError);
			}
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subPwIntz");
			submission_3.action = "/CHO0300A.SVC";
			submission_3.mediaType = "application/json";
			submission_3.addRequestData(dataMap_1);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"min-width" : "765px",
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container();
				group_2.style.setClasses(["search-box"]);
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.topMargin = "1fr";
				formLayout_1.rightMargin = "5px";
				formLayout_1.bottomMargin = "1fr";
				formLayout_1.leftMargin = "5px";
				formLayout_1.setColumns(["100px", "1fr", "1fr", "1fr", "100px", "1fr", "1fr", "1fr", "100px", "1fr", "1fr", "1fr", "140px"]);
				formLayout_1.setRows(["25px"]);
				group_2.setLayout(formLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "Trsc Br.";
					output_1.style.setClasses(["label"]);
					container.addChild(output_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var comboBox_1 = new cpr.controls.ComboBox("cmbBlngBrNo");
					comboBox_1.bind("value").toDataMap(app.lookup("input"), "blngBrNo");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("trscBrNo"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"colIndex": 1,
						"rowIndex": 0,
						"colSpan": 3,
						"rowSpan": 1
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "Title Type";
					output_2.style.setClasses(["label"]);
					container.addChild(output_2, {
						"colIndex": 4,
						"rowIndex": 0
					});
					var comboBox_2 = new cpr.controls.ComboBox("cmb2");
					comboBox_2.bind("value").toDataMap(app.lookup("input"), "trscDvCd");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("usrPosnCd"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"colIndex": 5,
						"rowIndex": 0,
						"colSpan": 3,
						"rowSpan": 1
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "User ID";
					output_3.style.setClasses(["label"]);
					container.addChild(output_3, {
						"colIndex": 8,
						"rowIndex": 0
					});
					var searchInput_1 = new cpr.controls.SearchInput("inpUserId");
					searchInput_1.style.css({
						"font-family" : "sans-serif"
					});
					searchInput_1.bind("value").toDataMap(app.lookup("input"), "userId");
					container.addChild(searchInput_1, {
						"colIndex": 9,
						"rowIndex": 0,
						"colSpan": 3,
						"rowSpan": 1
					});
					var button_1 = new cpr.controls.Button("btn1");
					button_1.value = "Search";
					if(typeof onButtonClick == "function") {
						button_1.addEventListener("click", onButtonClick);
					}
					container.addChild(button_1, {
						"colIndex": 12,
						"rowIndex": 0,
						"horizontalAlign": "center",
						"verticalAlign": "center"
					});
				})(group_2);
				container.addChild(group_2, {
					"width": "1004px",
					"height": "45px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cmb4");
				comboBox_3.userAttr({"language": "Y"});
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("한글", "ko"));
					comboBox_3.addItem(new cpr.controls.Item("영어", "en"));
				})(comboBox_3);
				if(typeof onCmb4SelectionChange == "function") {
					comboBox_3.addEventListener("selection-change", onCmb4SelectionChange);
				}
				container.addChild(comboBox_3, {
					"width": "100px",
					"height": "20px"
				});
				var grid_1 = new cpr.controls.Grid("grd1");
				grid_1.readOnly = true;
				grid_1.init({
					"dataSet": app.lookup("grid01"),
					"resizableColumns": "all",
					"columns": [
						{"width": "100px"},
						{"width": "50px"},
						{"width": "100px"},
						{"width": "169px"},
						{"width": "64px"},
						{"width": "88px"}
					],
					"header": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.targetColumnName = "userId";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "User ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "stCd";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Status";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "usrPosnCd";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Title Type";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "usrEngNm";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "English Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "blngBrNo";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Branch No.";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "grpId";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "Group ID";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "userId";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "stCd";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("cmb1");
										comboBox_4.style.item.css({
											"padding-left" : "10px",
											"text-align" : "center"
										});
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("stCd"), {
												"label": "label",
												"value": "value"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("stCd");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "usrPosnCd";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("cmb3");
										comboBox_5.style.item.css({
											"padding-left" : "10px"
										});
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("usrPosnCd"), {
												"label": "label",
												"value": "value"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("usrPosnCd");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "usrEngNm";
									cell.style.css({
										"padding-left" : "10px",
										"text-align" : "left"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "blngBrNo";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "grpId";
								}
							}
						]
					},
					"footer": {
						"rows": [{"height": "20px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.expr = "\"User ID\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							}
						]
					}
				});
				if(typeof onGrd1SelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrd1SelectionChange);
				}
				container.addChild(grid_1, {
					"width": "1004px",
					"height": "145px"
				});
				var group_3 = new cpr.controls.Container();
				group_3.style.setClasses(["edit-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.setColumns(["1fr", "1fr", "140px", "140px"]);
				formLayout_2.setRows(["1fr"]);
				group_3.setLayout(formLayout_2);
				(function(container){
					var button_2 = new cpr.controls.Button("btnAdd");
					button_2.value = "Add";
					if(typeof onButtonClick2 == "function") {
						button_2.addEventListener("click", onButtonClick2);
					}
					container.addChild(button_2, {
						"colIndex": 2,
						"rowIndex": 0,
						"horizontalAlign": "center",
						"verticalAlign": "center"
					});
					var button_3 = new cpr.controls.Button("btnUpd");
					button_3.value = "Update";
					if(typeof onButtonClick5 == "function") {
						button_3.addEventListener("click", onButtonClick5);
					}
					container.addChild(button_3, {
						"colIndex": 3,
						"rowIndex": 0,
						"horizontalAlign": "center",
						"verticalAlign": "center"
					});
				})(group_3);
				container.addChild(group_3, {
					"width": "1004px",
					"height": "40px"
				});
				var group_4 = new cpr.controls.Container("grd2");
				group_4.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.topMargin = "5px";
				formLayout_3.rightMargin = "5px";
				formLayout_3.bottomMargin = "5px";
				formLayout_3.leftMargin = "5px";
				formLayout_3.setColumns(["180px", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "180px", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr"]);
				formLayout_3.setRows(["30px", "30px", "30px", "30px", "30px", "30px", "30px", "30px", "30px", "30px", "30px", "30px"]);
				group_4.setLayout(formLayout_3);
				(function(container){
					var output_4 = new cpr.controls.Output("lblUserId");
					output_4.value = "User ID";
					output_4.style.setClasses(["label"]);
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbUserId");
					inputBox_1.maxLength = 7;
					inputBox_1.bind("value").toDataMap(app.lookup("dm1"), "userId");
					container.addChild(inputBox_1, {
						"colIndex": 1,
						"rowIndex": 0,
						"colSpan": 6,
						"rowSpan": 1
					});
					var button_4 = new cpr.controls.Button("btnDupChk");
					button_4.value = "Duplicate Check";
					if(typeof onButtonClick4 == "function") {
						button_4.addEventListener("click", onButtonClick4);
					}
					container.addChild(button_4, {
						"colIndex": 7,
						"rowIndex": 0,
						"colSpan": 4,
						"rowSpan": 1,
						"verticalAlign": "center"
					});
					var output_5 = new cpr.controls.Output("lblUsrEngNm");
					output_5.value = "User Name (Eng)";
					output_5.style.setClasses(["label"]);
					container.addChild(output_5, {
						"colIndex": 11,
						"rowIndex": 0
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbUsrEngNm");
					inputBox_2.bind("value").toDataMap(app.lookup("dm1"), "usrEngNm");
					container.addChild(inputBox_2, {
						"colIndex": 12,
						"rowIndex": 0,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_6 = new cpr.controls.Output("lblBlngBrNo");
					output_6.value = "Transaction Branch";
					output_6.style.setClasses(["label"]);
					container.addChild(output_6, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbBlngBrNo");
					inputBox_3.bind("value").toDataMap(app.lookup("dm1"), "blngBrNo");
					container.addChild(inputBox_3, {
						"colIndex": 1,
						"rowIndex": 1,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_7 = new cpr.controls.Output();
					output_7.value = "User Name (Local)";
					output_7.style.setClasses(["label"]);
					container.addChild(output_7, {
						"colIndex": 11,
						"rowIndex": 1
					});
					var inputBox_4 = new cpr.controls.InputBox("ipb1");
					inputBox_4.bind("value").toDataMap(app.lookup("dm1"), "usrLocalNm");
					container.addChild(inputBox_4, {
						"colIndex": 12,
						"rowIndex": 1,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_8 = new cpr.controls.Output("lblTmlIstBrNo");
					output_8.value = "Terminal Branch";
					output_8.style.setClasses(["label"]);
					container.addChild(output_8, {
						"colIndex": 0,
						"rowIndex": 2
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbTmlIstBrNo");
					inputBox_5.bind("value").toDataMap(app.lookup("dm1"), "tmlIstBrNo");
					container.addChild(inputBox_5, {
						"colIndex": 1,
						"rowIndex": 2,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_9 = new cpr.controls.Output("lblMbphNo");
					output_9.value = "Mobile Phone No.";
					output_9.style.setClasses(["label"]);
					container.addChild(output_9, {
						"colIndex": 11,
						"rowIndex": 2
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbMbphNo");
					inputBox_6.bind("value").toDataMap(app.lookup("dm1"), "mbphNo");
					container.addChild(inputBox_6, {
						"colIndex": 12,
						"rowIndex": 2,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_10 = new cpr.controls.Output("lblStCd");
					output_10.value = "Status";
					output_10.style.setClasses(["label"]);
					container.addChild(output_10, {
						"colIndex": 0,
						"rowIndex": 3
					});
					var comboBox_6 = new cpr.controls.ComboBox("cmbStCd");
					comboBox_6.bind("value").toDataMap(app.lookup("dm1"), "stCd");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("stCd"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_6);
					container.addChild(comboBox_6, {
						"colIndex": 1,
						"rowIndex": 3,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_11 = new cpr.controls.Output("lblEmalAdr");
					output_11.value = "Email Address";
					output_11.style.setClasses(["label"]);
					container.addChild(output_11, {
						"colIndex": 11,
						"rowIndex": 3
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbEmalAdr");
					inputBox_7.bind("value").toDataMap(app.lookup("dm1"), "emalAdr");
					container.addChild(inputBox_7, {
						"colIndex": 12,
						"rowIndex": 3,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_12 = new cpr.controls.Output("lblGrpId");
					output_12.value = "Authority Group ID";
					output_12.style.setClasses(["label"]);
					container.addChild(output_12, {
						"colIndex": 0,
						"rowIndex": 4
					});
					var comboBox_7 = new cpr.controls.ComboBox("cmbGrpId");
					comboBox_7.bind("value").toDataMap(app.lookup("dm1"), "grpId");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("grpId"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"colIndex": 1,
						"rowIndex": 4,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_13 = new cpr.controls.Output("lblSnrId");
					output_13.value = "Senior ID";
					output_13.style.setClasses(["label"]);
					container.addChild(output_13, {
						"colIndex": 11,
						"rowIndex": 4
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbSnrId");
					inputBox_8.bind("value").toDataMap(app.lookup("dm1"), "snrId");
					container.addChild(inputBox_8, {
						"colIndex": 12,
						"rowIndex": 4,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_14 = new cpr.controls.Output("lblUsrPosnCd");
					output_14.value = "Title Type";
					output_14.style.setClasses(["label"]);
					container.addChild(output_14, {
						"colIndex": 0,
						"rowIndex": 5
					});
					var comboBox_8 = new cpr.controls.ComboBox("cmbUsrPosnCd");
					comboBox_8.bind("value").toDataMap(app.lookup("dm1"), "usrPosnCd");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("usrPosnCd"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"colIndex": 1,
						"rowIndex": 5,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_15 = new cpr.controls.Output("lblIpAdr");
					output_15.value = "IP Address";
					output_15.style.setClasses(["label"]);
					container.addChild(output_15, {
						"colIndex": 11,
						"rowIndex": 5
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbIpAdr");
					inputBox_9.bind("value").toDataMap(app.lookup("dm1"), "ipAdr");
					container.addChild(inputBox_9, {
						"colIndex": 12,
						"rowIndex": 5,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_16 = new cpr.controls.Output("lblBussBrUpdAlwnYn");
					output_16.value = "Change Branch Y/N";
					output_16.style.setClasses(["label"]);
					container.addChild(output_16, {
						"colIndex": 0,
						"rowIndex": 6
					});
					var comboBox_9 = new cpr.controls.ComboBox("cmbBussBrUpdAlwnYn");
					comboBox_9.bind("value").toDataMap(app.lookup("dm1"), "bussBrUpdAlwnYn");
					(function(comboBox_9){
						comboBox_9.setItemSet(app.lookup("brNoTrnfYn"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_9);
					container.addChild(comboBox_9, {
						"colIndex": 1,
						"rowIndex": 6,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_17 = new cpr.controls.Output("lblTmlDvCd");
					output_17.value = "\tTerminal Divison";
					output_17.style.setClasses(["label"]);
					container.addChild(output_17, {
						"colIndex": 11,
						"rowIndex": 6
					});
					var comboBox_10 = new cpr.controls.ComboBox("cmbTmlDvCd");
					comboBox_10.bind("value").toDataMap(app.lookup("dm1"), "tmlDvCd");
					(function(comboBox_10){
					})(comboBox_10);
					container.addChild(comboBox_10, {
						"colIndex": 12,
						"rowIndex": 6,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_18 = new cpr.controls.Output("lblTlrDvCd");
					output_18.value = "Accounting Teller Division";
					output_18.style.setClasses(["label"]);
					container.addChild(output_18, {
						"colIndex": 0,
						"rowIndex": 7
					});
					var comboBox_11 = new cpr.controls.ComboBox("cmbTlrDvCd");
					comboBox_11.bind("value").toDataMap(app.lookup("dm1"), "tlrDvCd");
					(function(comboBox_11){
						comboBox_11.setItemSet(app.lookup("tlrDvCD"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_11);
					container.addChild(comboBox_11, {
						"colIndex": 1,
						"rowIndex": 7,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_19 = new cpr.controls.Output("lblTmlTypCd");
					output_19.value = "\tTerminal Type Code";
					output_19.style.setClasses(["label"]);
					container.addChild(output_19, {
						"colIndex": 11,
						"rowIndex": 7
					});
					var comboBox_12 = new cpr.controls.ComboBox("cmbTmlTypCd");
					comboBox_12.bind("value").toDataMap(app.lookup("dm1"), "tmlTypCd");
					(function(comboBox_12){
					})(comboBox_12);
					container.addChild(comboBox_12, {
						"colIndex": 12,
						"rowIndex": 7,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_20 = new cpr.controls.Output("lblExpryDt");
					output_20.value = "Expiry Date";
					output_20.style.setClasses(["label"]);
					container.addChild(output_20, {
						"colIndex": 0,
						"rowIndex": 8
					});
					var dateInput_1 = new cpr.controls.DateInput("dtiExpryDt");
					dateInput_1.bind("value").toDataMap(app.lookup("dm1"), "expryDt");
					container.addChild(dateInput_1, {
						"colIndex": 1,
						"rowIndex": 8,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_21 = new cpr.controls.Output("lblPwLckYn");
					output_21.value = "Password Lock";
					output_21.style.setClasses(["label"]);
					container.addChild(output_21, {
						"colIndex": 11,
						"rowIndex": 8
					});
					var comboBox_13 = new cpr.controls.ComboBox("cmbPwLckYn");
					comboBox_13.bind("value").toDataMap(app.lookup("dm1"), "pwLckYn");
					(function(comboBox_13){
						comboBox_13.setItemSet(app.lookup("pwdLckYn"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_13);
					container.addChild(comboBox_13, {
						"colIndex": 12,
						"rowIndex": 8,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_22 = new cpr.controls.Output("lblLstTrscDt");
					output_22.value = "Last Transaction Date";
					output_22.style.setClasses(["label"]);
					container.addChild(output_22, {
						"colIndex": 0,
						"rowIndex": 9
					});
					var dateInput_2 = new cpr.controls.DateInput("dtiLstTrscDt");
					dateInput_2.bind("value").toDataMap(app.lookup("dm1"), "lstTrscDt");
					container.addChild(dateInput_2, {
						"colIndex": 1,
						"rowIndex": 9,
						"colSpan": 10,
						"rowSpan": 1
					});
					var output_23 = new cpr.controls.Output("lblPwUpdDt");
					output_23.value = "PW Updated Date";
					output_23.style.setClasses(["label"]);
					container.addChild(output_23, {
						"colIndex": 11,
						"rowIndex": 9
					});
					var dateInput_3 = new cpr.controls.DateInput("dtiPwUpdDt");
					dateInput_3.bind("value").toDataMap(app.lookup("dm1"), "pwUpdDt");
					container.addChild(dateInput_3, {
						"colIndex": 12,
						"rowIndex": 9,
						"colSpan": 10,
						"rowSpan": 1
					});
					var inputBox_10 = new cpr.controls.InputBox("ipbLginPw");
					inputBox_10.visible = false;
					inputBox_10.bind("value").toDataMap(app.lookup("dm1"), "lginPw");
					container.addChild(inputBox_10, {
						"colIndex": 11,
						"rowIndex": 10
					});
					var button_5 = new cpr.controls.Button("btnIntz");
					button_5.value = "Initialize Password";
					if(typeof onButtonClick7 == "function") {
						button_5.addEventListener("click", onButtonClick7);
					}
					container.addChild(button_5, {
						"colIndex": 16,
						"rowIndex": 10,
						"colSpan": 6,
						"rowSpan": 1,
						"verticalAlign": "center"
					});
					var button_6 = new cpr.controls.Button();
					button_6.value = "Save";
					if(typeof onButtonClick6 == "function") {
						button_6.addEventListener("click", onButtonClick6);
					}
					container.addChild(button_6, {
						"colIndex": 19,
						"rowIndex": 11,
						"colSpan": 3,
						"rowSpan": 1
					});
				})(group_4);
				container.addChild(group_4, {
					"width": "1004px",
					"height": "427px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "10px",
				"right": "10px",
				"left": "10px",
				"height": "750px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "CH01";
	cpr.core.Platform.INSTANCE.register(app);
})();
