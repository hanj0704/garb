/*
 * App URI: 202008/youTest
 * Source Location: 202008/youTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202008/youTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * youTest.js
			 * Created at 2020. 8. 24. 오전 11:51:47.
			 *
			 * @author han
			 ************************************************/
			
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
			
				var opt = app.lookup("opts");
				console.log(opt.propertyIsEnumerable("value"));
				console.log(opt.hasOwnProperty("value"));
				
				var grp = app.lookup("grp1");
				
				console.log(grp.propertyIsEnumerable("value"));
				console.log(grp.hasOwnProperty("value"));
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "label1", "value": "value1", "parent": ""},
					{"label": "label2", "value": "value2", "parent": ""},
					{"label": "label3", "value": "value3", "parent": ""},
					{"label": "label4", "value": "value4", "parent": ""},
					{"label": "label5", "value": "value5", "parent": ""},
					{"label": "label6", "value": "value6", "parent": ""},
					{"label": "label7", "value": "value7", "parent": ""},
					{"label": "label8", "value": "value8", "parent": ""}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["cl-form-group"]);
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output("opts");
			output_1.value = "Output";
			container.addChild(output_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "65px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var menu_1 = new cpr.controls.Menu();
				(function(menu_1){
					menu_1.addItem(new cpr.controls.MenuItem("label1", "value1", null));
					menu_1.addItem(new cpr.controls.MenuItem("label2", "value2", null));
					menu_1.addItem(new cpr.controls.MenuItem("label3", "value3", null));
					menu_1.addItem(new cpr.controls.MenuItem("label4", "value4", null));
					menu_1.addItem(new cpr.controls.MenuItem("label5", "value5", null));
					menu_1.addItem(new cpr.controls.MenuItem("label6", "value6", null));
					menu_1.addItem(new cpr.controls.MenuItem("label7", "value7", null));
					menu_1.addItem(new cpr.controls.MenuItem("label8", "value8", null));
					menu_1.addItem(new cpr.controls.MenuItem("label9", "value9", null));
					menu_1.addItem(new cpr.controls.MenuItem("label10", "value10", null));
					menu_1.addItem(new cpr.controls.MenuItem("label11", "value11", null));
				})(menu_1);
				container.addChild(menu_1, {
					"autoSize": "none",
					"width": "130px",
					"height": "99px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "20px",
				"left": "151px",
				"width": "386px",
				"height": "140px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "youTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
