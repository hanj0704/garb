/*
 * App URI: 202008/ExmTest
 * Source Location: 202008/ExmTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202008/ExmTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************************************
			 * ExmGuideBindParentRowM.js
			 * @프로그램설명 : bindParentRow API에 대한 예제이다.
			 *
			 * @작성일자 :  2020. 8. 14. 
			 * @작성자	  1074023
			 * 
			 * @수정이력 :  수정일자 (수정자) 수정내용 
			 *                      
			 ************************************************************************/ 
			 
			 
			/************************************************************************
			 ** 글로벌 변수, 상수변수
			 ************************************************************************/ 
			
			
			/************************************************************************
			 ** 글로벌 함수
			 ************************************************************************/ 
			/**
			* 화면 초기 로딩  혹은 메뉴 클릭시에 로딩하는 함수로 async 형태로 호출됨. 
			* @param {any} oInitValue   
			*/
			exports.init = function(oInitValue){
				// 초기로딩시 호출하는 구문 작성
			}
			
			
			/************************************************************************
			 ** 파일내 로컬변수 선언  
			 ************************************************************************/ 
			//var util = new ComUtil(app);
			
			
			/************************************************************************
			 ** 사용자 정의 자바스크립트 함수를 기술 
			 ************************************************************************/ 
			 
			
			/************************************************************************
			 ** 자동으로 생성되는 이벤트 자바스크립트 함수를 배치
			 ** (이벤트 생성시 자동으로 스크립트 함수가 하위에 표시됩니다. ) 
			 ************************************************************************/ 
			
			
			
			/*
			 * "조회" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 * 2020. 8. 14.
			 * <r>E-NAME:
			 * <r>E-DOC:조회한다.
			 * <r>E-PARAM:
			 * <r>E-RR-UI-NAME: 
			 * <r>E-CALL-SRV-NAME:
			 * <r>E-REP:
			 * <r>E-REMARK:
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
			//	util.Submit.send("sub_Inqury",  function(pbSuccess){
			//		if(pbSuccess) {
			//			util.Control.redraw("grpMain");
			//		};
			//	});
				app.lookup("sub_Inqury").send();
			}
			
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 * 2020. 8. 14.
			 */
			function onGrid1SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grid1     = e.control;
			//	var dsIncvInurList = app.lookup("dsIncvInurList2");
				var dsIncvInurList = app.lookup("dsIncvInurList");
				
				var rowId = dsIncvInurList.getBindedParentRowId()
				var row   = dsIncvInurList.findParentRow(rowId);	// row를 찍었을 시 자식 데이터셋의 row가 나옴
				debugger;
				
				var poDataSet = grid1.dataSet;
				dsIncvInurList.bindParentRow(poDataSet.getRow(grid1.getSelectedRowIndex()));
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsIncvDtoList");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "agmtId",
						"dataType": "decimal"
					},
					{
						"name": "agmtNo",
						"dataType": "string"
					},
					{
						"name": "agmtVrsn",
						"dataType": "string"
					},
					{
						"name": "prodTypeCode",
						"dataType": "string"
					},
					{
						"name": "prodTypeNm",
						"dataType": "string"
					},
					{
						"name": "prodTypeDetlCode",
						"dataType": "string"
					},
					{
						"name": "prodTypeDetlNm",
						"dataType": "string"
					},
					{
						"name": "prodCode",
						"dataType": "string"
					},
					{
						"name": "prodDetlCode",
						"dataType": "string"
					},
					{
						"name": "prodNm",
						"dataType": "string"
					},
					{
						"name": "agmtStts",
						"dataType": "string"
					},
					{
						"name": "agmtSttsDetl",
						"dataType": "string"
					},
					{
						"name": "frstCtdt",
						"dataType": "string"
					},
					{
						"name": "ctdt",
						"dataType": "string"
					},
					{
						"name": "mtrtDate",
						"dataType": "string"
					},
					{
						"name": "trmnPrcsDate",
						"dataType": "string"
					},
					{
						"name": "lastLapsDate",
						"dataType": "string"
					},
					{
						"name": "paymTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "paymTermDvsnNm",
						"dataType": "string"
					},
					{
						"name": "paymTerm",
						"dataType": "number"
					},
					{
						"name": "acpyTerm",
						"dataType": "number"
					},
					{
						"name": "isrnTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "isrnTermDvsnNm",
						"dataType": "string"
					},
					{
						"name": "isrnTerm",
						"dataType": "number"
					},
					{
						"name": "actlIsrnTerm",
						"dataType": "number"
					},
					{
						"name": "witmYn",
						"dataType": "string"
					},
					{
						"name": "isrnFamt",
						"dataType": "decimal"
					},
					{
						"name": "orglPrem",
						"dataType": "decimal"
					},
					{
						"name": "prem",
						"dataType": "decimal"
					},
					{
						"name": "dsctExcgPrem",
						"dataType": "decimal"
					},
					{
						"name": "premAplbYymm",
						"dataType": "string"
					},
					{
						"name": "paymCyclCode",
						"dataType": "string"
					},
					{
						"name": "paymCyclNm",
						"dataType": "string"
					},
					{
						"name": "lmttPycn",
						"dataType": "number"
					},
					{
						"name": "fpinStrtDvsnCode",
						"dataType": "string"
					},
					{
						"name": "fpinStrtDvsnVal",
						"dataType": "number"
					},
					{
						"name": "spinStrtDvsnCode",
						"dataType": "string"
					},
					{
						"name": "spinStrtDvsnVal",
						"dataType": "number"
					},
					{
						"name": "tpinStrtDvsnCode",
						"dataType": "string"
					},
					{
						"name": "tpinStrtDvsnVal",
						"dataType": "number"
					},
					{
						"name": "premAplyDvsnCode",
						"dataType": "string"
					},
					{
						"name": "premAplyDvsnNm",
						"dataType": "string"
					},
					{
						"name": "wdngClbrDate",
						"dataType": "string"
					},
					{
						"name": "asgnHvofDay",
						"dataType": "string"
					},
					{
						"name": "extsIsrnTerm",
						"dataType": "number"
					},
					{
						"name": "extsIsrnTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "extsIsrnTermDvsnNm",
						"dataType": "string"
					},
					{
						"name": "lvlhMneyOtpyStrtDate",
						"dataType": "string"
					},
					{
						"name": "frstAnutOtpyStrtDate",
						"dataType": "string"
					},
					{
						"name": "acctCnvrDate",
						"dataType": "string"
					},
					{
						"name": "istlOtpyStrtRqstDate",
						"dataType": "string"
					},
					{
						"name": "mngtAmtGurtTerm",
						"dataType": "number"
					},
					{
						"name": "iramIsrnTerm",
						"dataType": "number"
					},
					{
						"name": "dutyPaymTerm",
						"dataType": "number"
					},
					{
						"name": "rnwlTmth",
						"dataType": "number"
					},
					{
						"name": "cnvrAqxpAmrtNbmn",
						"dataType": "number"
					},
					{
						"name": "incvRnwlElapNbyr",
						"dataType": "number"
					},
					{
						"name": "mdtmIamtDfrmTerm",
						"dataType": "number"
					},
					{
						"name": "mdtmIamtOtpyTerm",
						"dataType": "number"
					},
					{
						"name": "prsnPmmiSpnsYn",
						"dataType": "string"
					},
					{
						"name": "acctCnvrDvsnCode",
						"dataType": "string"
					},
					{
						"name": "acctCnvrDvsnNm",
						"dataType": "string"
					},
					{
						"name": "iramIsrnTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "bypdPrcsDvsnCode",
						"dataType": "string"
					},
					{
						"name": "bypdPrcsDvsnNm",
						"dataType": "string"
					},
					{
						"name": "acltMthoCode",
						"dataType": "string"
					},
					{
						"name": "acltMthoNm",
						"dataType": "string"
					},
					{
						"name": "acvlMgivAcctDvsnCode",
						"dataType": "string"
					},
					{
						"name": "acvlMgivAcctDvsnNm",
						"dataType": "string"
					},
					{
						"name": "premPaymFormCode",
						"dataType": "string"
					},
					{
						"name": "premPaymFormNm",
						"dataType": "string"
					},
					{
						"name": "lgamCntcDsctAcltDvsnCode",
						"dataType": "string"
					},
					{
						"name": "lgamCntcDsctAcltDvsnNm",
						"dataType": "string"
					},
					{
						"name": "cntcCntgYymm",
						"dataType": "string"
					},
					{
						"name": "cnvrAqxp",
						"dataType": "decimal"
					},
					{
						"name": "dethIamtPprt",
						"dataType": "decimal"
					}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsIncvInurList");
			dataSet_2.parseData({
				"columns" : [
					{
						"name": "custNo",
						"dataType": "string"
					},
					{
						"name": "custNm",
						"dataType": "string"
					},
					{
						"name": "custRfrnNo",
						"dataType": "string"
					},
					{
						"name": "joinGndrCode",
						"dataType": "string"
					},
					{
						"name": "joinGndrCodeNm",
						"dataType": "string"
					},
					{
						"name": "inurCode",
						"dataType": "string"
					},
					{
						"name": "inurCodeNm",
						"dataType": "string"
					},
					{
						"name": "inurNo",
						"dataType": "string"
					},
					{
						"name": "acdtInurCode",
						"dataType": "string"
					},
					{
						"name": "dethResnDate",
						"dataType": "string"
					},
					{
						"name": "joinAg",
						"dataType": "number"
					},
					{
						"name": "custRoleCode",
						"dataType": "string"
					},
					{
						"name": "custRoleCodeNm",
						"dataType": "string"
					},
					{
						"name": "minuRltsCode",
						"dataType": "string"
					},
					{
						"name": "minuRltsCodeNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dmCltnInfo");
			dataSet_3.parseData({
				"columns" : [
					{
						"name": "prem",
						"dataType": "decimal"
					},
					{
						"name": "orglPrem",
						"dataType": "decimal"
					},
					{
						"name": "dsctExcgPrem",
						"dataType": "decimal"
					},
					{
						"name": "paymSttsCode",
						"dataType": "string"
					},
					{
						"name": "paymSttsNm",
						"dataType": "string"
					},
					{
						"name": "paymCyclCode",
						"dataType": "string"
					},
					{
						"name": "paymCyclNm",
						"dataType": "string"
					},
					{
						"name": "premAplbYymm",
						"dataType": "string"
					},
					{
						"name": "lmttPycn",
						"dataType": "number"
					},
					{
						"name": "lastPycn",
						"dataType": "number"
					},
					{
						"name": "lastPaymYymm",
						"dataType": "string"
					},
					{
						"name": "lastPmknMnth",
						"dataType": "string"
					},
					{
						"name": "lastRfdt",
						"dataType": "string"
					},
					{
						"name": "lastPrcsDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsIncvDtoList2");
			dataSet_4.parseData({
				"columns" : [
					{
						"name": "agmtId",
						"dataType": "decimal"
					},
					{
						"name": "agmtNo",
						"dataType": "string"
					},
					{
						"name": "prodNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsIncvInurList2");
			dataSet_5.parseData({
				"columns" : [
					{
						"name": "custNo",
						"dataType": "string"
					},
					{
						"name": "custRfrnNo",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dmCltnInfo2");
			dataSet_6.parseData({
				"columns" : [
					{
						"name": "prem",
						"dataType": "decimal"
					},
					{
						"name": "orglPrem",
						"dataType": "decimal"
					},
					{
						"name": "dsctExcgPrem",
						"dataType": "decimal"
					},
					{
						"name": "paymSttsCode",
						"dataType": "string"
					},
					{
						"name": "paymSttsNm",
						"dataType": "string"
					},
					{
						"name": "premAplbYymm",
						"dataType": "string"
					},
					{
						"name": "lmttPycn",
						"dataType": "number"
					},
					{
						"name": "lastPycn",
						"dataType": "number"
					},
					{
						"name": "lastPaymYymm",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dmInqyBaseDto");
			dataSet_7.parseData({
				"columns" : [
					{
						"name": "polyNo",
						"dataType": "string"
					},
					{
						"name": "valdDate",
						"dataType": "string"
					},
					{
						"name": "agmtId",
						"dataType": "decimal"
					}
				]
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmResTest");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "agmtId",
						"dataType": "decimal"
					},
					{
						"name": "agmtNo",
						"dataType": "string"
					},
					{
						"name": "agmtVrsn",
						"dataType": "string"
					},
					{
						"name": "prodTypeCode",
						"dataType": "string"
					},
					{
						"name": "prodTypeNm",
						"dataType": "string"
					},
					{
						"name": "prodTypeDetlCode",
						"dataType": "string"
					},
					{
						"name": "prodTypeDetlNm",
						"dataType": "string"
					},
					{
						"name": "prodCode",
						"dataType": "string"
					},
					{
						"name": "prodDetlCode",
						"dataType": "string"
					},
					{
						"name": "prodNm",
						"dataType": "string"
					},
					{
						"name": "agmtStts",
						"dataType": "string"
					},
					{
						"name": "agmtSttsDetl",
						"dataType": "string"
					},
					{
						"name": "frstCtdt",
						"dataType": "string"
					},
					{
						"name": "ctdt",
						"dataType": "string"
					},
					{
						"name": "mtrtDate",
						"dataType": "string"
					},
					{
						"name": "trmnPrcsDate",
						"dataType": "string"
					},
					{
						"name": "lastLapsDate",
						"dataType": "string"
					},
					{
						"name": "paymTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "paymTermDvsnNm",
						"dataType": "string"
					},
					{
						"name": "paymTerm",
						"dataType": "number"
					},
					{
						"name": "acpyTerm",
						"dataType": "number"
					},
					{
						"name": "isrnTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "isrnTermDvsnNm",
						"dataType": "string"
					},
					{
						"name": "isrnTerm",
						"dataType": "number"
					},
					{
						"name": "actlIsrnTerm",
						"dataType": "number"
					},
					{
						"name": "witmYn",
						"dataType": "string"
					},
					{
						"name": "isrnFamt",
						"dataType": "decimal"
					},
					{
						"name": "orglPrem",
						"dataType": "decimal"
					},
					{
						"name": "prem",
						"dataType": "decimal"
					},
					{
						"name": "dsctExcgPrem",
						"dataType": "decimal"
					},
					{
						"name": "premAplbYymm",
						"dataType": "string"
					},
					{
						"name": "paymCyclCode",
						"dataType": "string"
					},
					{
						"name": "paymCyclNm",
						"dataType": "string"
					},
					{
						"name": "lmttPycn",
						"dataType": "number"
					},
					{
						"name": "fpinStrtDvsnCode",
						"dataType": "string"
					},
					{
						"name": "fpinStrtDvsnVal",
						"dataType": "number"
					},
					{
						"name": "spinStrtDvsnCode",
						"dataType": "string"
					},
					{
						"name": "spinStrtDvsnVal",
						"dataType": "number"
					},
					{
						"name": "tpinStrtDvsnCode",
						"dataType": "string"
					},
					{
						"name": "tpinStrtDvsnVal",
						"dataType": "number"
					},
					{
						"name": "premAplyDvsnCode",
						"dataType": "string"
					},
					{
						"name": "premAplyDvsnNm",
						"dataType": "string"
					},
					{
						"name": "wdngClbrDate",
						"dataType": "string"
					},
					{
						"name": "asgnHvofDay",
						"dataType": "string"
					},
					{
						"name": "extsIsrnTerm",
						"dataType": "number"
					},
					{
						"name": "extsIsrnTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "extsIsrnTermDvsnNm",
						"dataType": "string"
					},
					{
						"name": "lvlhMneyOtpyStrtDate",
						"dataType": "string"
					},
					{
						"name": "frstAnutOtpyStrtDate",
						"dataType": "string"
					},
					{
						"name": "acctCnvrDate",
						"dataType": "string"
					},
					{
						"name": "istlOtpyStrtRqstDate",
						"dataType": "string"
					},
					{
						"name": "mngtAmtGurtTerm",
						"dataType": "number"
					},
					{
						"name": "iramIsrnTerm",
						"dataType": "number"
					},
					{
						"name": "dutyPaymTerm",
						"dataType": "number"
					},
					{
						"name": "rnwlTmth",
						"dataType": "number"
					},
					{
						"name": "cnvrAqxpAmrtNbmn",
						"dataType": "number"
					},
					{
						"name": "incvRnwlElapNbyr",
						"dataType": "number"
					},
					{
						"name": "mdtmIamtDfrmTerm",
						"dataType": "number"
					},
					{
						"name": "mdtmIamtOtpyTerm",
						"dataType": "number"
					},
					{
						"name": "prsnPmmiSpnsYn",
						"dataType": "string"
					},
					{
						"name": "acctCnvrDvsnCode",
						"dataType": "string"
					},
					{
						"name": "acctCnvrDvsnNm",
						"dataType": "string"
					},
					{
						"name": "iramIsrnTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "bypdPrcsDvsnCode",
						"dataType": "string"
					},
					{
						"name": "bypdPrcsDvsnNm",
						"dataType": "string"
					},
					{
						"name": "acltMthoCode",
						"dataType": "string"
					},
					{
						"name": "acltMthoNm",
						"dataType": "string"
					},
					{
						"name": "acvlMgivAcctDvsnCode",
						"dataType": "string"
					},
					{
						"name": "acvlMgivAcctDvsnNm",
						"dataType": "string"
					},
					{
						"name": "premPaymFormCode",
						"dataType": "string"
					},
					{
						"name": "premPaymFormNm",
						"dataType": "string"
					},
					{
						"name": "lgamCntcDsctAcltDvsnCode",
						"dataType": "string"
					},
					{
						"name": "lgamCntcDsctAcltDvsnNm",
						"dataType": "string"
					},
					{
						"name": "cntcCntgYymm",
						"dataType": "string"
					},
					{
						"name": "cnvrAqxp",
						"dataType": "decimal"
					},
					{
						"name": "dethIamtPprt",
						"dataType": "decimal"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqTest");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "agmtId",
						"dataType": "decimal"
					},
					{
						"name": "agmtNo",
						"dataType": "string"
					},
					{
						"name": "agmtVrsn",
						"dataType": "string"
					},
					{
						"name": "prodTypeCode",
						"dataType": "string"
					},
					{
						"name": "prodTypeNm",
						"dataType": "string"
					},
					{
						"name": "prodTypeDetlCode",
						"dataType": "string"
					},
					{
						"name": "prodTypeDetlNm",
						"dataType": "string"
					},
					{
						"name": "prodCode",
						"dataType": "string"
					},
					{
						"name": "prodDetlCode",
						"dataType": "string"
					},
					{
						"name": "prodNm",
						"dataType": "string"
					},
					{
						"name": "agmtStts",
						"dataType": "string"
					},
					{
						"name": "agmtSttsDetl",
						"dataType": "string"
					},
					{
						"name": "frstCtdt",
						"dataType": "string"
					},
					{
						"name": "ctdt",
						"dataType": "string"
					},
					{
						"name": "mtrtDate",
						"dataType": "string"
					},
					{
						"name": "trmnPrcsDate",
						"dataType": "string"
					},
					{
						"name": "lastLapsDate",
						"dataType": "string"
					},
					{
						"name": "paymTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "paymTermDvsnNm",
						"dataType": "string"
					},
					{
						"name": "paymTerm",
						"dataType": "number"
					},
					{
						"name": "acpyTerm",
						"dataType": "number"
					},
					{
						"name": "isrnTermDvsnCode",
						"dataType": "string"
					},
					{
						"name": "isrnTermDvsnNm",
						"dataType": "string"
					},
					{
						"name": "isrnTerm",
						"dataType": "number"
					},
					{
						"name": "actlIsrnTerm",
						"dataType": "number"
					},
					{
						"name": "witmYn",
						"dataType": "string"
					},
					{
						"name": "isrnFamt",
						"dataType": "decimal"
					},
					{
						"name": "orglPrem",
						"dataType": "decimal"
					},
					{
						"name": "prem",
						"dataType": "decimal"
					},
					{
						"name": "dsctExcgPrem",
						"dataType": "decimal"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqTest2");
			dataMap_3.parseData({
				"columns" : []
			});
			app.register(dataMap_3);
			var matrixSubmission_1 = new cpr.protocols.MatrixSubmission("sub1");
			matrixSubmission_1.async = true;
			matrixSubmission_1.withCredentials = false;
			matrixSubmission_1.method = "post";
			matrixSubmission_1.action = "base/jsondata/00.json";
			matrixSubmission_1.userAttr({
				"itfNm": "가입상품정보조회",
				"itfId": "HLIWUI07327",
				"serviceId": "ibcIncvInqyPSI001r",
				"trnmSysCode": "WUI",
				"rcveSysCode": "IBC"
			});
			matrixSubmission_1.setProtocolDataModel(new cpr.protocols.matrix.MatrixDataModel({
				"request": {
					"format": "object",
					"data": {
						"payload" : {
							"format": "object",
							"dataControl": dataMap_2,
							"data": {}
						}
					}
				},
				"response": {
					"format": "object",
					"data": {
						"payload" : {
							"format": "object",
							"dataControl": dataMap_2,
							"data": {
								"agmtId": {"format": "simple", "path": "@agmtId"},
								"agmtNo": {"format": "simple", "path": "@agmtNo"},
								"agmtVrsn": {"format": "simple", "path": "@agmtVrsn"},
								"prodTypeCode": {"format": "simple", "path": "@prodTypeCode"},
								"prodTypeNm": {"format": "simple", "path": "@prodTypeNm"},
								"prodTypeDetlCode": {"format": "simple", "path": "@prodTypeDetlCode"},
								"prodTypeDetlNm": {"format": "simple", "path": "@prodTypeDetlNm"},
								"prodCode": {"format": "simple", "path": "@prodCode"},
								"prodDetlCode": {"format": "simple", "path": "@prodDetlCode"},
								"prodNm": {"format": "simple", "path": "@prodNm"},
								"agmtStts": {"format": "simple", "path": "@agmtStts"},
								"agmtSttsDetl": {"format": "simple", "path": "@agmtSttsDetl"},
								"frstCtdt": {"format": "simple", "path": "@frstCtdt"},
								"ctdt": {"format": "simple", "path": "@ctdt"},
								"mtrtDate": {"format": "simple", "path": "@mtrtDate"},
								"trmnPrcsDate": {"format": "simple", "path": "@trmnPrcsDate"},
								"lastLapsDate": {"format": "simple", "path": "@lastLapsDate"},
								"paymTermDvsnCode": {"format": "simple", "path": "@paymTermDvsnCode"},
								"paymTermDvsnNm": {"format": "simple", "path": "@paymTermDvsnNm"},
								"paymTerm": {"format": "simple", "path": "@paymTerm"},
								"acpyTerm": {"format": "simple", "path": "@acpyTerm"},
								"isrnTermDvsnCode": {"format": "simple", "path": "@isrnTermDvsnCode"},
								"isrnTermDvsnNm": {"format": "simple", "path": "@isrnTermDvsnNm"},
								"isrnTerm": {"format": "simple", "path": "@isrnTerm"},
								"actlIsrnTerm": {"format": "simple", "path": "@actlIsrnTerm"},
								"witmYn": {"format": "simple", "path": "@witmYn"},
								"isrnFamt": {"format": "simple", "path": "@isrnFamt"},
								"orglPrem": {"format": "simple", "path": "@orglPrem"},
								"prem": {"format": "simple", "path": "@prem"},
								"dsctExcgPrem": {"format": "simple", "path": "@dsctExcgPrem"},
								"dsIncvDtoList": {
									"format": "array",
									"dataControl": dataSet_1,
									"data": {
										"cltnInfo": {
											"format": "object",
											"dataControl": dataSet_3,
											"data": {
												"prem": {"format": "simple", "path": "@prem"},
												"orglPrem": {"format": "simple", "path": "@orglPrem"},
												"dsctExcgPrem": {"format": "simple", "path": "@dsctExcgPrem"},
												"paymSttsCode": {"format": "simple", "path": "@paymSttsCode"},
												"paymSttsNm": {"format": "simple", "path": "@paymSttsNm"},
												"paymCyclCode": {"format": "simple", "path": "@paymCyclCode"},
												"paymCyclNm": {"format": "simple", "path": "@paymCyclNm"},
												"premAplbYymm": {"format": "simple", "path": "@premAplbYymm"},
												"lmttPycn": {"format": "simple", "path": "@lmttPycn"},
												"lastPycn": {"format": "simple", "path": "@lastPycn"},
												"lastPaymYymm": {"format": "simple", "path": "@lastPaymYymm"},
												"lastPmknMnth": {"format": "simple", "path": "@lastPmknMnth"},
												"lastRfdt": {"format": "simple", "path": "@lastRfdt"},
												"lastPrcsDate": {"format": "simple", "path": "@lastPrcsDate"}
											}
										},
										"incvInurList": {
											"format": "array",
											"dataControl": dataSet_2,
											"payload": "all",
											"data": {
												"custNo": {"format": "simple", "path": "@custNo"},
												"custNm": {"format": "simple", "path": "@custNm"},
												"custRfrnNo": {"format": "simple", "path": "@custRfrnNo"},
												"joinGndrCode": {"format": "simple", "path": "@joinGndrCode"},
												"joinGndrCodeNm": {"format": "simple", "path": "@joinGndrCodeNm"},
												"inurCode": {"format": "simple", "path": "@inurCode"},
												"inurCodeNm": {"format": "simple", "path": "@inurCodeNm"},
												"inurNo": {"format": "simple", "path": "@inurNo"},
												"acdtInurCode": {"format": "simple", "path": "@acdtInurCode"},
												"dethResnDate": {"format": "simple", "path": "@dethResnDate"},
												"joinAg": {"format": "simple", "path": "@joinAg"},
												"custRoleCode": {"format": "simple", "path": "@custRoleCode"},
												"custRoleCodeNm": {"format": "simple", "path": "@custRoleCodeNm"},
												"minuRltsCode": {"format": "simple", "path": "@minuRltsCode"},
												"minuRltsCodeNm": {"format": "simple", "path": "@minuRltsCodeNm"}
											}
										},
										"cnvrAqxp": {"format": "simple", "path": "@cnvrAqxp"},
										"cntcCntgYymm": {"format": "simple", "path": "@cntcCntgYymm"},
										"dethIamtPprt": {"format": "simple", "path": "@dethIamtPprt"},
										"lgamCntcDsctAcltDvsnNm": {"format": "simple", "path": "@lgamCntcDsctAcltDvsnNm"},
										"lgamCntcDsctAcltDvsnCode": {"format": "simple", "path": "@lgamCntcDsctAcltDvsnCode"},
										"premPaymFormNm": {"format": "simple", "path": "@premPaymFormNm"},
										"premPaymFormCode": {"format": "simple", "path": "@premPaymFormCode"},
										"acvlMgivAcctDvsnNm": {"format": "simple", "path": "@acvlMgivAcctDvsnNm"},
										"acvlMgivAcctDvsnCode": {"format": "simple", "path": "@acvlMgivAcctDvsnCode"},
										"acltMthoNm": {"format": "simple", "path": "@acltMthoNm"},
										"acltMthoCode": {"format": "simple", "path": "@acltMthoCode"},
										"bypdPrcsDvsnNm": {"format": "simple", "path": "@bypdPrcsDvsnNm"},
										"bypdPrcsDvsnCode": {"format": "simple", "path": "@bypdPrcsDvsnCode"},
										"iramIsrnTermDvsnCode": {"format": "simple", "path": "@iramIsrnTermDvsnCode"},
										"acctCnvrDvsnNm": {"format": "simple", "path": "@acctCnvrDvsnNm"},
										"acctCnvrDvsnCode": {"format": "simple", "path": "@acctCnvrDvsnCode"},
										"prsnPmmiSpnsYn": {"format": "simple", "path": "@prsnPmmiSpnsYn"},
										"mdtmIamtOtpyTerm": {"format": "simple", "path": "@mdtmIamtOtpyTerm"},
										"mdtmIamtDfrmTerm": {"format": "simple", "path": "@mdtmIamtDfrmTerm"},
										"incvRnwlElapNbyr": {"format": "simple", "path": "@incvRnwlElapNbyr"},
										"rnwlTmth": {"format": "simple", "path": "@rnwlTmth"},
										"cnvrAqxpAmrtNbmn": {"format": "simple", "path": "@cnvrAqxpAmrtNbmn"},
										"istlOtpyStrtRqstDate": {"format": "simple", "path": "@istlOtpyStrtRqstDate"},
										"dutyPaymTerm": {"format": "simple", "path": "@dutyPaymTerm"},
										"mngtAmtGurtTerm": {"format": "simple", "path": "@mngtAmtGurtTerm"},
										"iramIsrnTerm": {"format": "simple", "path": "@iramIsrnTerm"},
										"acctCnvrDate": {"format": "simple", "path": "@acctCnvrDate"},
										"frstAnutOtpyStrtDate": {"format": "simple", "path": "@frstAnutOtpyStrtDate"},
										"lvlhMneyOtpyStrtDate": {"format": "simple", "path": "@lvlhMneyOtpyStrtDate"},
										"extsIsrnTermDvsnNm": {"format": "simple", "path": "@extsIsrnTermDvsnNm"},
										"extsIsrnTermDvsnCode": {"format": "simple", "path": "@extsIsrnTermDvsnCode"},
										"extsIsrnTerm": {"format": "simple", "path": "@extsIsrnTerm"},
										"asgnHvofDay": {"format": "simple", "path": "@asgnHvofDay"},
										"wdngClbrDate": {"format": "simple", "path": "@wdngClbrDate"},
										"premAplyDvsnNm": {"format": "simple", "path": "@premAplyDvsnNm"},
										"premAplyDvsnCode": {"format": "simple", "path": "@premAplyDvsnCode"},
										"tpinStrtDvsnVal": {"format": "simple", "path": "@tpinStrtDvsnVal"},
										"tpinStrtDvsnCode": {"format": "simple", "path": "@tpinStrtDvsnCode"},
										"spinStrtDvsnVal": {"format": "simple", "path": "@spinStrtDvsnVal"},
										"spinStrtDvsnCode": {"format": "simple", "path": "@spinStrtDvsnCode"},
										"fpinStrtDvsnVal": {"format": "simple", "path": "@fpinStrtDvsnVal"},
										"fpinStrtDvsnCode": {"format": "simple", "path": "@fpinStrtDvsnCode"},
										"lmttPycn": {"format": "simple", "path": "@lmttPycn"},
										"paymCyclNm": {"format": "simple", "path": "@paymCyclNm"},
										"paymCyclCode": {"format": "simple", "path": "@paymCyclCode"},
										"premAplbYymm": {"format": "simple", "path": "@premAplbYymm"}
									}
								}
							}
						}
					}
				}
			}));
			app.register(matrixSubmission_1);
			
			var matrixSubmission_2 = new cpr.protocols.MatrixSubmission("sub3");
			matrixSubmission_2.async = true;
			matrixSubmission_2.withCredentials = false;
			matrixSubmission_2.method = "post";
			matrixSubmission_2.action = "base/jsondata/01.json";
			matrixSubmission_2.userAttr({
				"itfNm": "가입상품정보조회",
				"itfId": "HLIWUI07327",
				"serviceId": "ibcIncvInqyPSI001r",
				"trnmSysCode": "WUI",
				"rcveSysCode": "IBC"
			});
			matrixSubmission_2.setProtocolDataModel(new cpr.protocols.matrix.MatrixDataModel({
				"request": {
					"format": "object",
					"data": {
						"payload" : {
							"format": "object",
							"dataControl": dataMap_2,
							"data": {}
						}
					}
				},
				"response": {
					"format": "object",
					"data": {
						"payload" : {
							"format": "object",
							"dataControl": dataMap_3,
							"data": {
								"dsIncvDtoList" : {
									"format": "array",
									"dataControl": dataSet_4,
									"data": {
										"cltnInfo": {
											"format": "object",
											"dataControl": dataSet_6,
											"data": {
												"prem": {"format": "simple", "path": "@prem"},
												"orglPrem": {"format": "simple", "path": "@orglPrem"},
												"dsctExcgPrem": {"format": "simple", "path": "@dsctExcgPrem"},
												"paymSttsCode": {"format": "simple", "path": "@paymSttsCode"},
												"paymSttsNm": {"format": "simple", "path": "@paymSttsNm"},
												"premAplbYymm": {"format": "simple", "path": "@premAplbYymm"},
												"lmttPycn": {"format": "simple", "path": "@lmttPycn"},
												"lastPycn": {"format": "simple", "path": "@lastPycn"},
												"lastPaymYymm": {"format": "simple", "path": "@lastPaymYymm"}
											}
										},
										"incvInurList": {
											"format": "array",
											"dataControl": dataSet_5,
											"payload": "all",
											"data": {
												"custNo": {"format": "simple", "path": "@custNo"},
												"custRfrnNo": {"format": "simple", "path": "@custRfrnNo"}
											}
										},
										"agmtNo": {"format": "simple", "path": "@agmtNo"},
										"agmtId": {"format": "simple", "path": "@agmtId"}
									}
								}
							}
						}
					}
				}
			}));
			app.register(matrixSubmission_2);
			
			var matrixSubmission_3 = new cpr.protocols.MatrixSubmission("sub4");
			matrixSubmission_3.async = true;
			matrixSubmission_3.withCredentials = false;
			matrixSubmission_3.method = "post";
			matrixSubmission_3.action = "base/jsondata/01.json";
			matrixSubmission_3.userAttr({
				"itfNm": "가입상품정보조회",
				"itfId": "HLIWUI07327",
				"serviceId": "ibcIncvInqyPSI001r",
				"trnmSysCode": "WUI",
				"rcveSysCode": "IBC"
			});
			matrixSubmission_3.setProtocolDataModel(new cpr.protocols.matrix.MatrixDataModel({
				"request": {
					"format": "object",
					"data": {
						"payload" : {
							"format": "object",
							"dataControl": dataMap_2,
							"data": {}
						}
					}
				},
				"response": {
					"format": "object",
					"data": {
						"payload" : {
							"format": "array",
							"dataControl": dataSet_4,
							"data": {
								"cltnInfo": {
									"format": "object",
									"dataControl": dataSet_6,
									"data": {
										"prem": {"format": "simple", "path": "@prem"},
										"orglPrem": {"format": "simple", "path": "@orglPrem"},
										"dsctExcgPrem": {"format": "simple", "path": "@dsctExcgPrem"},
										"paymSttsCode": {"format": "simple", "path": "@paymSttsCode"},
										"paymSttsNm": {"format": "simple", "path": "@paymSttsNm"},
										"premAplbYymm": {"format": "simple", "path": "@premAplbYymm"},
										"lmttPycn": {"format": "simple", "path": "@lmttPycn"},
										"lastPycn": {"format": "simple", "path": "@lastPycn"},
										"lastPaymYymm": {"format": "simple", "path": "@lastPaymYymm"}
									}
								},
								"incvInurList": {
									"format": "array",
									"dataControl": dataSet_5,
									"payload": "all",
									"data": {
										"custNo": {"format": "simple", "path": "@custNo"},
										"custRfrnNo": {"format": "simple", "path": "@custRfrnNo"}
									}
								},
								"agmtNo": {"format": "simple", "path": "@agmtNo"},
								"agmtId": {"format": "simple", "path": "@agmtId"}
							}
						}
					}
				}
			}));
			app.register(matrixSubmission_3);
			
			var matrixSubmission_4 = new cpr.protocols.MatrixSubmission("sub_Inqury");
			matrixSubmission_4.async = true;
			matrixSubmission_4.withCredentials = false;
			matrixSubmission_4.method = "post";
			matrixSubmission_4.action = "base/jsondata/00.json";
			matrixSubmission_4.userAttr({
				"itfId": "HLIWUI07327",
				"itfNm": "가입상품정보조회",
				"serviceId": "ibcIncvInqyPSI001r",
				"trnmSysCode": "WUI",
				"rcveSysCode": "IBC"
			});
			matrixSubmission_4.setProtocolDataModel(new cpr.protocols.matrix.MatrixDataModel({
				"request": {
					"format": "object",
					"data": {
						"payload" : {
							"format": "object",
							"dataControl": dataSet_7,
							"data": {
								"polyNo": {"format": "simple", "path": "@polyNo"},
								"valdDate": {"format": "simple", "path": "@valdDate"},
								"agmtId": {"format": "simple", "path": "@agmtId"}
							}
						}
					}
				},
				"response": {
					"format": "object",
					"data": {
						"payload" : {
							"linked": false,
							"format": "array",
							"dataControl": dataSet_1,
							"data": {
								"agmtId": {"format": "simple", "path": "@agmtId"},
								"agmtNo": {"format": "simple", "path": "@agmtNo"},
								"agmtVrsn": {"format": "simple", "path": "@agmtVrsn"},
								"prodTypeCode": {"format": "simple", "path": "@prodTypeCode"},
								"prodTypeNm": {"format": "simple", "path": "@prodTypeNm"},
								"prodTypeDetlCode": {"format": "simple", "path": "@prodTypeDetlCode"},
								"prodTypeDetlNm": {"format": "simple", "path": "@prodTypeDetlNm"},
								"prodCode": {"format": "simple", "path": "@prodCode"},
								"prodDetlCode": {"format": "simple", "path": "@prodDetlCode"},
								"prodNm": {"format": "simple", "path": "@prodNm"},
								"agmtStts": {"format": "simple", "path": "@agmtStts"},
								"agmtSttsDetl": {"format": "simple", "path": "@agmtSttsDetl"},
								"frstCtdt": {"format": "simple", "path": "@frstCtdt"},
								"ctdt": {"format": "simple", "path": "@ctdt"},
								"mtrtDate": {"format": "simple", "path": "@mtrtDate"},
								"trmnPrcsDate": {"format": "simple", "path": "@trmnPrcsDate"},
								"lastLapsDate": {"format": "simple", "path": "@lastLapsDate"},
								"paymTermDvsnCode": {"format": "simple", "path": "@paymTermDvsnCode"},
								"paymTermDvsnNm": {"format": "simple", "path": "@paymTermDvsnNm"},
								"paymTerm": {"format": "simple", "path": "@paymTerm"},
								"acpyTerm": {"format": "simple", "path": "@acpyTerm"},
								"isrnTermDvsnCode": {"format": "simple", "path": "@isrnTermDvsnCode"},
								"isrnTermDvsnNm": {"format": "simple", "path": "@isrnTermDvsnNm"},
								"isrnTerm": {"format": "simple", "path": "@isrnTerm"},
								"actlIsrnTerm": {"format": "simple", "path": "@actlIsrnTerm"},
								"witmYn": {"format": "simple", "path": "@witmYn"},
								"isrnFamt": {"format": "simple", "path": "@isrnFamt"},
								"orglPrem": {"format": "simple", "path": "@orglPrem"},
								"prem": {"format": "simple", "path": "@prem"},
								"dsctExcgPrem": {"format": "simple", "path": "@dsctExcgPrem"},
								"premAplbYymm": {"format": "simple", "path": "@premAplbYymm"},
								"paymCyclCode": {"format": "simple", "path": "@paymCyclCode"},
								"paymCyclNm": {"format": "simple", "path": "@paymCyclNm"},
								"lmttPycn": {"format": "simple", "path": "@lmttPycn"},
								"fpinStrtDvsnCode": {"format": "simple", "path": "@fpinStrtDvsnCode"},
								"fpinStrtDvsnVal": {"format": "simple", "path": "@fpinStrtDvsnVal"},
								"spinStrtDvsnCode": {"format": "simple", "path": "@spinStrtDvsnCode"},
								"spinStrtDvsnVal": {"format": "simple", "path": "@spinStrtDvsnVal"},
								"tpinStrtDvsnCode": {"format": "simple", "path": "@tpinStrtDvsnCode"},
								"tpinStrtDvsnVal": {"format": "simple", "path": "@tpinStrtDvsnVal"},
								"premAplyDvsnCode": {"format": "simple", "path": "@premAplyDvsnCode"},
								"premAplyDvsnNm": {"format": "simple", "path": "@premAplyDvsnNm"},
								"wdngClbrDate": {"format": "simple", "path": "@wdngClbrDate"},
								"asgnHvofDay": {"format": "simple", "path": "@asgnHvofDay"},
								"extsIsrnTerm": {"format": "simple", "path": "@extsIsrnTerm"},
								"extsIsrnTermDvsnCode": {"format": "simple", "path": "@extsIsrnTermDvsnCode"},
								"extsIsrnTermDvsnNm": {"format": "simple", "path": "@extsIsrnTermDvsnNm"},
								"lvlhMneyOtpyStrtDate": {"format": "simple", "path": "@lvlhMneyOtpyStrtDate"},
								"frstAnutOtpyStrtDate": {"format": "simple", "path": "@frstAnutOtpyStrtDate"},
								"acctCnvrDate": {"format": "simple", "path": "@acctCnvrDate"},
								"istlOtpyStrtRqstDate": {"format": "simple", "path": "@istlOtpyStrtRqstDate"},
								"mngtAmtGurtTerm": {"format": "simple", "path": "@mngtAmtGurtTerm"},
								"iramIsrnTerm": {"format": "simple", "path": "@iramIsrnTerm"},
								"dutyPaymTerm": {"format": "simple", "path": "@dutyPaymTerm"},
								"rnwlTmth": {"format": "simple", "path": "@rnwlTmth"},
								"cnvrAqxpAmrtNbmn": {"format": "simple", "path": "@cnvrAqxpAmrtNbmn"},
								"incvRnwlElapNbyr": {"format": "simple", "path": "@incvRnwlElapNbyr"},
								"mdtmIamtDfrmTerm": {"format": "simple", "path": "@mdtmIamtDfrmTerm"},
								"mdtmIamtOtpyTerm": {"format": "simple", "path": "@mdtmIamtOtpyTerm"},
								"prsnPmmiSpnsYn": {"format": "simple", "path": "@prsnPmmiSpnsYn"},
								"acctCnvrDvsnCode": {"format": "simple", "path": "@acctCnvrDvsnCode"},
								"acctCnvrDvsnNm": {"format": "simple", "path": "@acctCnvrDvsnNm"},
								"iramIsrnTermDvsnCode": {"format": "simple", "path": "@iramIsrnTermDvsnCode"},
								"bypdPrcsDvsnCode": {"format": "simple", "path": "@bypdPrcsDvsnCode"},
								"bypdPrcsDvsnNm": {"format": "simple", "path": "@bypdPrcsDvsnNm"},
								"acltMthoCode": {"format": "simple", "path": "@acltMthoCode"},
								"acltMthoNm": {"format": "simple", "path": "@acltMthoNm"},
								"acvlMgivAcctDvsnCode": {"format": "simple", "path": "@acvlMgivAcctDvsnCode"},
								"acvlMgivAcctDvsnNm": {"format": "simple", "path": "@acvlMgivAcctDvsnNm"},
								"premPaymFormCode": {"format": "simple", "path": "@premPaymFormCode"},
								"premPaymFormNm": {"format": "simple", "path": "@premPaymFormNm"},
								"lgamCntcDsctAcltDvsnCode": {"format": "simple", "path": "@lgamCntcDsctAcltDvsnCode"},
								"lgamCntcDsctAcltDvsnNm": {"format": "simple", "path": "@lgamCntcDsctAcltDvsnNm"},
								"cntcCntgYymm": {"format": "simple", "path": "@cntcCntgYymm"},
								"cnvrAqxp": {"format": "simple", "path": "@cnvrAqxp"},
								"dethIamtPprt": {"format": "simple", "path": "@dethIamtPprt"},
								"incvInurList": {
									"format": "array",
									"dataControl": dataSet_2,
									"payload": "all",
									"data": {
										"custNo": {"format": "simple", "path": "@custNo"},
										"custNm": {"format": "simple", "path": "@custNm"},
										"custRfrnNo": {"format": "simple", "path": "@custRfrnNo"},
										"joinGndrCode": {"format": "simple", "path": "@joinGndrCode"},
										"joinGndrCodeNm": {"format": "simple", "path": "@joinGndrCodeNm"},
										"inurCode": {"format": "simple", "path": "@inurCode"},
										"inurCodeNm": {"format": "simple", "path": "@inurCodeNm"},
										"inurNo": {"format": "simple", "path": "@inurNo"},
										"acdtInurCode": {"format": "simple", "path": "@acdtInurCode"},
										"dethResnDate": {"format": "simple", "path": "@dethResnDate"},
										"joinAg": {"format": "simple", "path": "@joinAg"},
										"custRoleCode": {"format": "simple", "path": "@custRoleCode"},
										"custRoleCodeNm": {"format": "simple", "path": "@custRoleCodeNm"},
										"minuRltsCode": {"format": "simple", "path": "@minuRltsCode"},
										"minuRltsCodeNm": {"format": "simple", "path": "@minuRltsCodeNm"}
									}
								},
								"cltnInfo": {
									"format": "object",
									"dataControl": dataSet_3,
									"data": {
										"prem": {"format": "simple", "path": "@prem"},
										"orglPrem": {"format": "simple", "path": "@orglPrem"},
										"dsctExcgPrem": {"format": "simple", "path": "@dsctExcgPrem"},
										"paymSttsCode": {"format": "simple", "path": "@paymSttsCode"},
										"paymSttsNm": {"format": "simple", "path": "@paymSttsNm"},
										"paymCyclCode": {"format": "simple", "path": "@paymCyclCode"},
										"paymCyclNm": {"format": "simple", "path": "@paymCyclNm"},
										"premAplbYymm": {"format": "simple", "path": "@premAplbYymm"},
										"lmttPycn": {"format": "simple", "path": "@lmttPycn"},
										"lastPycn": {"format": "simple", "path": "@lastPycn"},
										"lastPaymYymm": {"format": "simple", "path": "@lastPaymYymm"},
										"lastPmknMnth": {"format": "simple", "path": "@lastPmknMnth"},
										"lastRfdt": {"format": "simple", "path": "@lastRfdt"},
										"lastPrcsDate": {"format": "simple", "path": "@lastPrcsDate"}
									}
								}
							}
						}
					}
				}
			}));
			app.register(matrixSubmission_4);
			
			app.supportMedia("all and (min-width: 3160px)", "Hlicp-WIDE");
			app.supportMedia("all and (min-width: 1600px) and (max-width: 3159px)", "Hlicp-FULL");
			app.supportMedia("all and (min-width: 790px) and (max-width: 1599px)", "Hlicp-DIV");
			app.supportMedia("all and (max-width: 789px)", "Hlicp-POP");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["grid-window-body"]);
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpMain");
			group_1.style.setClasses(["grid-content-body"]);
			// Layout
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("grp2");
				// Layout
				var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_3.spacing = 10;
				group_2.setLayout(verticalLayout_3);
				(function(container){
					var group_3 = new cpr.controls.Container("grp3");
					group_3.style.setClasses(["search-box"]);
					// Layout
					var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
					group_3.setLayout(verticalLayout_4);
					(function(container){
						var group_4 = new cpr.controls.Container("grp4");
						group_4.style.setClasses(["search-area"]);
						// Layout
						var formLayout_1 = new cpr.controls.layouts.FormLayout();
						formLayout_1.scrollable = false;
						formLayout_1.horizontalSpacing = "20px";
						formLayout_1.verticalSpacing = "6px";
						formLayout_1.setColumns(["120px", "3fr", "92px"]);
						formLayout_1.setColumnAutoSizing(0, true);
						formLayout_1.setColumnAutoSizing(2, true);
						formLayout_1.setRows(["26px"]);
						group_4.setLayout(formLayout_1);
						(function(container){
							var group_5 = new cpr.controls.Container("grp5");
							group_5.style.setClasses(["btn-flow-area"]);
							group_5.style.css({
								"vertical-align" : "middle"
							});
							// Layout
							var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
							flowLayout_1.scrollable = false;
							flowLayout_1.horizontalSpacing = 5;
							flowLayout_1.verticalSpacing = 5;
							flowLayout_1.lineWrap = false;
							flowLayout_1.leftMargin = 0;
							flowLayout_1.rightMargin = 0;
							flowLayout_1.topMargin = 0;
							group_5.setLayout(flowLayout_1);
							(function(container){
								var button_1 = new cpr.controls.Button("btn1");
								button_1.value = "조회";
								button_1.style.setClasses(["btn-search"]);
								if(typeof onBtn1Click == "function") {
									button_1.addEventListener("click", onBtn1Click);
								}
								container.addChild(button_1, {
									"autoSize": "none",
									"width": "40px",
									"height": "26px"
								});
								var button_2 = new cpr.controls.Button("btn2");
								button_2.style.setClasses(["btn-reset"]);
								container.addChild(button_2, {
									"autoSize": "none",
									"width": "26px",
									"height": "26px"
								});
							})(group_5);
							container.addChild(group_5, {
								"colIndex": 2,
								"rowIndex": 0
							});
						})(group_4);
						container.addChild(group_4, {
							"autoSize": "height",
							"width": "1280px",
							"height": "35px"
						});
					})(group_3);
					container.addChild(group_3, {
						"autoSize": "height",
						"width": "1596px",
						"height": "40px"
					});
				})(group_2);
				container.addChild(group_2, {
					"autoSize": "height",
					"width": "3116px",
					"height": "40px"
				});
				var group_6 = new cpr.controls.Container("grp43");
				group_6.style.setClasses(["button-table-area"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.scrollable = false;
				formLayout_2.horizontalSpacing = "0px";
				formLayout_2.verticalSpacing = "0px";
				formLayout_2.setColumns(["300px", "1fr"]);
				formLayout_2.setColumnAutoSizing(0, true);
				formLayout_2.setRows(["25px"]);
				formLayout_2.setRowAutoSizing(0, true);
				group_6.setLayout(formLayout_2);
				(function(container){
					var group_7 = new cpr.controls.Container("grp44");
					group_7.style.setClasses(["button-table-top-area"]);
					// Layout
					var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
					flowLayout_2.scrollable = false;
					flowLayout_2.horizontalSpacing = 5;
					flowLayout_2.verticalSpacing = 5;
					flowLayout_2.horizontalAlign = "right";
					flowLayout_2.lineWrap = false;
					group_7.setLayout(flowLayout_2);
					(function(container){
					})(group_7);
					container.addChild(group_7, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var group_8 = new cpr.controls.Container("grp45");
					group_8.style.setClasses(["title-box"]);
					// Layout
					var verticalLayout_5 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_5.spacing = 0;
					group_8.setLayout(verticalLayout_5);
					(function(container){
						var output_1 = new cpr.controls.Output("opt9");
						output_1.value = ">> bindParentRow 데이터셋";
						output_1.style.setClasses(["title"]);
						container.addChild(output_1, {
							"autoSize": "height",
							"width": "800px",
							"height": "25px"
						});
					})(group_8);
					container.addChild(group_8, {
						"colIndex": 0,
						"rowIndex": 0
					});
				})(group_6);
				container.addChild(group_6, {
					"autoSize": "none",
					"width": "1600px",
					"height": "25px"
				});
				var group_9 = new cpr.controls.Container("grp42");
				group_9.style.setClasses(["division-area"]);
				// Layout
				var formLayout_3 = new cpr.controls.layouts.FormLayout();
				formLayout_3.setColumns(["1fr", "1fr"]);
				formLayout_3.setColumnMinWidth(0, 200);
				formLayout_3.setColumnMinWidth(1, 200);
				formLayout_3.setRows(["1fr"]);
				formLayout_3.setRowMinHeight(0, 300);
				group_9.setLayout(formLayout_3);
				(function(container){
					var group_10 = new cpr.controls.Container("grp47");
					// Layout
					var verticalLayout_6 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_6.spacing = 0;
					group_10.setLayout(verticalLayout_6);
					(function(container){
						var group_11 = new cpr.controls.Container("grp11");
						group_11.style.setClasses(["grid-box"]);
						// Layout
						var verticalLayout_7 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_7.spacing = 10;
						group_11.setLayout(verticalLayout_7);
						(function(container){
							var group_12 = new cpr.controls.Container("grp12");
							group_12.style.setClasses(["button-table-area"]);
							// Layout
							var formLayout_4 = new cpr.controls.layouts.FormLayout();
							formLayout_4.scrollable = false;
							formLayout_4.horizontalSpacing = "0px";
							formLayout_4.verticalSpacing = "0px";
							formLayout_4.setColumns(["300px", "1fr"]);
							formLayout_4.setColumnAutoSizing(0, true);
							formLayout_4.setRows(["25px"]);
							formLayout_4.setRowAutoSizing(0, true);
							group_12.setLayout(formLayout_4);
							(function(container){
								var group_13 = new cpr.controls.Container("grp13");
								group_13.style.setClasses(["button-table-top-area"]);
								// Layout
								var flowLayout_3 = new cpr.controls.layouts.FlowLayout();
								flowLayout_3.scrollable = false;
								flowLayout_3.horizontalSpacing = 5;
								flowLayout_3.verticalSpacing = 5;
								flowLayout_3.horizontalAlign = "right";
								flowLayout_3.lineWrap = false;
								group_13.setLayout(flowLayout_3);
								(function(container){
								})(group_13);
								container.addChild(group_13, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var group_14 = new cpr.controls.Container("grp14");
								group_14.style.setClasses(["title-box"]);
								// Layout
								var verticalLayout_8 = new cpr.controls.layouts.VerticalLayout();
								verticalLayout_8.spacing = 0;
								group_14.setLayout(verticalLayout_8);
								(function(container){
									var output_2 = new cpr.controls.Output("opt8");
									output_2.value = "dsEmp";
									output_2.style.setClasses(["title"]);
									container.addChild(output_2, {
										"autoSize": "height",
										"width": "800px",
										"height": "25px"
									});
								})(group_14);
								container.addChild(group_14, {
									"colIndex": 0,
									"rowIndex": 0
								});
							})(group_12);
							container.addChild(group_12, {
								"autoSize": "height",
								"width": "1556px",
								"height": "25px"
							});
							var grid_1 = new cpr.controls.Grid("grid1");
							grid_1.init({
								"dataSet": app.lookup("dsIncvDtoList"),
								"columnMovable": true,
								"resizableColumns": "all",
								"columns": [
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"},
									{"width": "100px"}
								],
								"header": {
									"rows": [{"height": "31px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.targetColumnName = "agmtId";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "agmtId";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.targetColumnName = "agmtNo";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "agmtNo";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.targetColumnName = "agmtVrsn";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "agmtVrsn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.targetColumnName = "prodTypeCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "prodTypeCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.targetColumnName = "prodTypeNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "prodTypeNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.targetColumnName = "prodTypeDetlCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "prodTypeDetlCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 6},
											"configurator": function(cell){
												cell.targetColumnName = "prodTypeDetlNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "prodTypeDetlNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 7},
											"configurator": function(cell){
												cell.targetColumnName = "prodCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "prodCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 8},
											"configurator": function(cell){
												cell.targetColumnName = "prodDetlCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "prodDetlCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 9},
											"configurator": function(cell){
												cell.targetColumnName = "prodNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "prodNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 10},
											"configurator": function(cell){
												cell.targetColumnName = "agmtStts";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "agmtStts";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 11},
											"configurator": function(cell){
												cell.targetColumnName = "agmtSttsDetl";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "agmtSttsDetl";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 12},
											"configurator": function(cell){
												cell.targetColumnName = "frstCtdt";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "frstCtdt";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 13},
											"configurator": function(cell){
												cell.targetColumnName = "ctdt";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "ctdt";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 14},
											"configurator": function(cell){
												cell.targetColumnName = "mtrtDate";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "mtrtDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 15},
											"configurator": function(cell){
												cell.targetColumnName = "trmnPrcsDate";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "trmnPrcsDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 16},
											"configurator": function(cell){
												cell.targetColumnName = "lastLapsDate";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "lastLapsDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 17},
											"configurator": function(cell){
												cell.targetColumnName = "paymTermDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "paymTermDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 18},
											"configurator": function(cell){
												cell.targetColumnName = "paymTermDvsnNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "paymTermDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 19},
											"configurator": function(cell){
												cell.targetColumnName = "paymTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "paymTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 20},
											"configurator": function(cell){
												cell.targetColumnName = "acpyTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "acpyTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 21},
											"configurator": function(cell){
												cell.targetColumnName = "isrnTermDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "isrnTermDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 22},
											"configurator": function(cell){
												cell.targetColumnName = "isrnTermDvsnNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "isrnTermDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 23},
											"configurator": function(cell){
												cell.targetColumnName = "isrnTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "isrnTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 24},
											"configurator": function(cell){
												cell.targetColumnName = "actlIsrnTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "actlIsrnTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 25},
											"configurator": function(cell){
												cell.targetColumnName = "witmYn";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "witmYn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 26},
											"configurator": function(cell){
												cell.targetColumnName = "isrnFamt";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "isrnFamt";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 27},
											"configurator": function(cell){
												cell.targetColumnName = "orglPrem";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "orglPrem";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 28},
											"configurator": function(cell){
												cell.targetColumnName = "prem";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "prem";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 29},
											"configurator": function(cell){
												cell.targetColumnName = "dsctExcgPrem";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "dsctExcgPrem";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 30},
											"configurator": function(cell){
												cell.targetColumnName = "premAplbYymm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "premAplbYymm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 31},
											"configurator": function(cell){
												cell.targetColumnName = "paymCyclCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "paymCyclCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 32},
											"configurator": function(cell){
												cell.targetColumnName = "paymCyclNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "paymCyclNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 33},
											"configurator": function(cell){
												cell.targetColumnName = "lmttPycn";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "lmttPycn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 34},
											"configurator": function(cell){
												cell.targetColumnName = "fpinStrtDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "fpinStrtDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 35},
											"configurator": function(cell){
												cell.targetColumnName = "fpinStrtDvsnVal";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "fpinStrtDvsnVal";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 36},
											"configurator": function(cell){
												cell.targetColumnName = "spinStrtDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "spinStrtDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 37},
											"configurator": function(cell){
												cell.targetColumnName = "spinStrtDvsnVal";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "spinStrtDvsnVal";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 38},
											"configurator": function(cell){
												cell.targetColumnName = "tpinStrtDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "tpinStrtDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 39},
											"configurator": function(cell){
												cell.targetColumnName = "tpinStrtDvsnVal";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "tpinStrtDvsnVal";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 40},
											"configurator": function(cell){
												cell.targetColumnName = "premAplyDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "premAplyDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 41},
											"configurator": function(cell){
												cell.targetColumnName = "premAplyDvsnNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "premAplyDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 42},
											"configurator": function(cell){
												cell.targetColumnName = "wdngClbrDate";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "wdngClbrDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 43},
											"configurator": function(cell){
												cell.targetColumnName = "asgnHvofDay";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "asgnHvofDay";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 44},
											"configurator": function(cell){
												cell.targetColumnName = "extsIsrnTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "extsIsrnTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 45},
											"configurator": function(cell){
												cell.targetColumnName = "extsIsrnTermDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "extsIsrnTermDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 46},
											"configurator": function(cell){
												cell.targetColumnName = "extsIsrnTermDvsnNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "extsIsrnTermDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 47},
											"configurator": function(cell){
												cell.targetColumnName = "lvlhMneyOtpyStrtDate";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "lvlhMneyOtpyStrtDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 48},
											"configurator": function(cell){
												cell.targetColumnName = "frstAnutOtpyStrtDate";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "frstAnutOtpyStrtDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 49},
											"configurator": function(cell){
												cell.targetColumnName = "acctCnvrDate";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "acctCnvrDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 50},
											"configurator": function(cell){
												cell.targetColumnName = "istlOtpyStrtRqstDate";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "istlOtpyStrtRqstDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 51},
											"configurator": function(cell){
												cell.targetColumnName = "mngtAmtGurtTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "mngtAmtGurtTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 52},
											"configurator": function(cell){
												cell.targetColumnName = "iramIsrnTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "iramIsrnTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 53},
											"configurator": function(cell){
												cell.targetColumnName = "dutyPaymTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "dutyPaymTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 54},
											"configurator": function(cell){
												cell.targetColumnName = "rnwlTmth";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "rnwlTmth";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 55},
											"configurator": function(cell){
												cell.targetColumnName = "cnvrAqxpAmrtNbmn";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "cnvrAqxpAmrtNbmn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 56},
											"configurator": function(cell){
												cell.targetColumnName = "incvRnwlElapNbyr";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "incvRnwlElapNbyr";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 57},
											"configurator": function(cell){
												cell.targetColumnName = "mdtmIamtDfrmTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "mdtmIamtDfrmTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 58},
											"configurator": function(cell){
												cell.targetColumnName = "mdtmIamtOtpyTerm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "mdtmIamtOtpyTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 59},
											"configurator": function(cell){
												cell.targetColumnName = "prsnPmmiSpnsYn";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "prsnPmmiSpnsYn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 60},
											"configurator": function(cell){
												cell.targetColumnName = "acctCnvrDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "acctCnvrDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 61},
											"configurator": function(cell){
												cell.targetColumnName = "acctCnvrDvsnNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "acctCnvrDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 62},
											"configurator": function(cell){
												cell.targetColumnName = "iramIsrnTermDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "iramIsrnTermDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 63},
											"configurator": function(cell){
												cell.targetColumnName = "bypdPrcsDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "bypdPrcsDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 64},
											"configurator": function(cell){
												cell.targetColumnName = "bypdPrcsDvsnNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "bypdPrcsDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 65},
											"configurator": function(cell){
												cell.targetColumnName = "acltMthoCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "acltMthoCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 66},
											"configurator": function(cell){
												cell.targetColumnName = "acltMthoNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "acltMthoNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 67},
											"configurator": function(cell){
												cell.targetColumnName = "acvlMgivAcctDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "acvlMgivAcctDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 68},
											"configurator": function(cell){
												cell.targetColumnName = "acvlMgivAcctDvsnNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "acvlMgivAcctDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 69},
											"configurator": function(cell){
												cell.targetColumnName = "premPaymFormCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "premPaymFormCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 70},
											"configurator": function(cell){
												cell.targetColumnName = "premPaymFormNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "premPaymFormNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 71},
											"configurator": function(cell){
												cell.targetColumnName = "lgamCntcDsctAcltDvsnCode";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "lgamCntcDsctAcltDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 72},
											"configurator": function(cell){
												cell.targetColumnName = "lgamCntcDsctAcltDvsnNm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "lgamCntcDsctAcltDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 73},
											"configurator": function(cell){
												cell.targetColumnName = "cntcCntgYymm";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "cntcCntgYymm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 74},
											"configurator": function(cell){
												cell.targetColumnName = "cnvrAqxp";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "cnvrAqxp";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 75},
											"configurator": function(cell){
												cell.targetColumnName = "dethIamtPprt";
												cell.filterable = false;
												cell.sortable = false;
												cell.text = "dethIamtPprt";
											}
										}
									]
								},
								"detail": {
									"rows": [{"height": "31px"}],
									"cells": [
										{
											"constraint": {"rowIndex": 0, "colIndex": 0},
											"configurator": function(cell){
												cell.columnName = "agmtId";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 1},
											"configurator": function(cell){
												cell.columnName = "agmtNo";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 2},
											"configurator": function(cell){
												cell.columnName = "agmtVrsn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 3},
											"configurator": function(cell){
												cell.columnName = "prodTypeCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 4},
											"configurator": function(cell){
												cell.columnName = "prodTypeNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 5},
											"configurator": function(cell){
												cell.columnName = "prodTypeDetlCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 6},
											"configurator": function(cell){
												cell.columnName = "prodTypeDetlNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 7},
											"configurator": function(cell){
												cell.columnName = "prodCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 8},
											"configurator": function(cell){
												cell.columnName = "prodDetlCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 9},
											"configurator": function(cell){
												cell.columnName = "prodNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 10},
											"configurator": function(cell){
												cell.columnName = "agmtStts";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 11},
											"configurator": function(cell){
												cell.columnName = "agmtSttsDetl";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 12},
											"configurator": function(cell){
												cell.columnName = "frstCtdt";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 13},
											"configurator": function(cell){
												cell.columnName = "ctdt";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 14},
											"configurator": function(cell){
												cell.columnName = "mtrtDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 15},
											"configurator": function(cell){
												cell.columnName = "trmnPrcsDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 16},
											"configurator": function(cell){
												cell.columnName = "lastLapsDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 17},
											"configurator": function(cell){
												cell.columnName = "paymTermDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 18},
											"configurator": function(cell){
												cell.columnName = "paymTermDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 19},
											"configurator": function(cell){
												cell.columnName = "paymTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 20},
											"configurator": function(cell){
												cell.columnName = "acpyTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 21},
											"configurator": function(cell){
												cell.columnName = "isrnTermDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 22},
											"configurator": function(cell){
												cell.columnName = "isrnTermDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 23},
											"configurator": function(cell){
												cell.columnName = "isrnTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 24},
											"configurator": function(cell){
												cell.columnName = "actlIsrnTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 25},
											"configurator": function(cell){
												cell.columnName = "witmYn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 26},
											"configurator": function(cell){
												cell.columnName = "isrnFamt";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 27},
											"configurator": function(cell){
												cell.columnName = "orglPrem";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 28},
											"configurator": function(cell){
												cell.columnName = "prem";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 29},
											"configurator": function(cell){
												cell.columnName = "dsctExcgPrem";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 30},
											"configurator": function(cell){
												cell.columnName = "premAplbYymm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 31},
											"configurator": function(cell){
												cell.columnName = "paymCyclCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 32},
											"configurator": function(cell){
												cell.columnName = "paymCyclNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 33},
											"configurator": function(cell){
												cell.columnName = "lmttPycn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 34},
											"configurator": function(cell){
												cell.columnName = "fpinStrtDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 35},
											"configurator": function(cell){
												cell.columnName = "fpinStrtDvsnVal";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 36},
											"configurator": function(cell){
												cell.columnName = "spinStrtDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 37},
											"configurator": function(cell){
												cell.columnName = "spinStrtDvsnVal";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 38},
											"configurator": function(cell){
												cell.columnName = "tpinStrtDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 39},
											"configurator": function(cell){
												cell.columnName = "tpinStrtDvsnVal";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 40},
											"configurator": function(cell){
												cell.columnName = "premAplyDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 41},
											"configurator": function(cell){
												cell.columnName = "premAplyDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 42},
											"configurator": function(cell){
												cell.columnName = "wdngClbrDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 43},
											"configurator": function(cell){
												cell.columnName = "asgnHvofDay";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 44},
											"configurator": function(cell){
												cell.columnName = "extsIsrnTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 45},
											"configurator": function(cell){
												cell.columnName = "extsIsrnTermDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 46},
											"configurator": function(cell){
												cell.columnName = "extsIsrnTermDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 47},
											"configurator": function(cell){
												cell.columnName = "lvlhMneyOtpyStrtDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 48},
											"configurator": function(cell){
												cell.columnName = "frstAnutOtpyStrtDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 49},
											"configurator": function(cell){
												cell.columnName = "acctCnvrDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 50},
											"configurator": function(cell){
												cell.columnName = "istlOtpyStrtRqstDate";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 51},
											"configurator": function(cell){
												cell.columnName = "mngtAmtGurtTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 52},
											"configurator": function(cell){
												cell.columnName = "iramIsrnTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 53},
											"configurator": function(cell){
												cell.columnName = "dutyPaymTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 54},
											"configurator": function(cell){
												cell.columnName = "rnwlTmth";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 55},
											"configurator": function(cell){
												cell.columnName = "cnvrAqxpAmrtNbmn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 56},
											"configurator": function(cell){
												cell.columnName = "incvRnwlElapNbyr";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 57},
											"configurator": function(cell){
												cell.columnName = "mdtmIamtDfrmTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 58},
											"configurator": function(cell){
												cell.columnName = "mdtmIamtOtpyTerm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 59},
											"configurator": function(cell){
												cell.columnName = "prsnPmmiSpnsYn";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 60},
											"configurator": function(cell){
												cell.columnName = "acctCnvrDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 61},
											"configurator": function(cell){
												cell.columnName = "acctCnvrDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 62},
											"configurator": function(cell){
												cell.columnName = "iramIsrnTermDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 63},
											"configurator": function(cell){
												cell.columnName = "bypdPrcsDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 64},
											"configurator": function(cell){
												cell.columnName = "bypdPrcsDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 65},
											"configurator": function(cell){
												cell.columnName = "acltMthoCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 66},
											"configurator": function(cell){
												cell.columnName = "acltMthoNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 67},
											"configurator": function(cell){
												cell.columnName = "acvlMgivAcctDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 68},
											"configurator": function(cell){
												cell.columnName = "acvlMgivAcctDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 69},
											"configurator": function(cell){
												cell.columnName = "premPaymFormCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 70},
											"configurator": function(cell){
												cell.columnName = "premPaymFormNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 71},
											"configurator": function(cell){
												cell.columnName = "lgamCntcDsctAcltDvsnCode";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 72},
											"configurator": function(cell){
												cell.columnName = "lgamCntcDsctAcltDvsnNm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 73},
											"configurator": function(cell){
												cell.columnName = "cntcCntgYymm";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 74},
											"configurator": function(cell){
												cell.columnName = "cnvrAqxp";
											}
										},
										{
											"constraint": {"rowIndex": 0, "colIndex": 75},
											"configurator": function(cell){
												cell.columnName = "dethIamtPprt";
											}
										}
									]
								}
							});
							grid_1.style.setClasses(["list-normal"]);
							if(typeof onGrid1SelectionChange == "function") {
								grid_1.addEventListener("selection-change", onGrid1SelectionChange);
							}
							container.addChild(grid_1, {
								"autoSize": "none",
								"width": "1560px",
								"height": "280px"
							});
						})(group_11);
						container.addChild(group_11, {
							"autoSize": "height",
							"width": "517px",
							"height": "560px"
						});
					})(group_10);
					container.addChild(group_10, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var group_15 = new cpr.controls.Container("grp21");
					group_15.style.setClasses(["grid-box"]);
					// Layout
					var verticalLayout_9 = new cpr.controls.layouts.VerticalLayout();
					verticalLayout_9.spacing = 10;
					group_15.setLayout(verticalLayout_9);
					(function(container){
						var group_16 = new cpr.controls.Container("grp22");
						group_16.style.setClasses(["button-table-area"]);
						// Layout
						var formLayout_5 = new cpr.controls.layouts.FormLayout();
						formLayout_5.scrollable = false;
						formLayout_5.horizontalSpacing = "0px";
						formLayout_5.verticalSpacing = "0px";
						formLayout_5.setColumns(["300px", "1fr"]);
						formLayout_5.setColumnAutoSizing(0, true);
						formLayout_5.setRows(["25px"]);
						formLayout_5.setRowAutoSizing(0, true);
						group_16.setLayout(formLayout_5);
						(function(container){
							var group_17 = new cpr.controls.Container("grp23");
							group_17.style.setClasses(["button-table-top-area"]);
							// Layout
							var flowLayout_4 = new cpr.controls.layouts.FlowLayout();
							flowLayout_4.scrollable = false;
							flowLayout_4.horizontalSpacing = 5;
							flowLayout_4.verticalSpacing = 5;
							flowLayout_4.horizontalAlign = "right";
							flowLayout_4.lineWrap = false;
							group_17.setLayout(flowLayout_4);
							(function(container){
							})(group_17);
							container.addChild(group_17, {
								"colIndex": 1,
								"rowIndex": 0
							});
							var group_18 = new cpr.controls.Container("grp24");
							group_18.style.setClasses(["title-box"]);
							// Layout
							var verticalLayout_10 = new cpr.controls.layouts.VerticalLayout();
							verticalLayout_10.spacing = 0;
							group_18.setLayout(verticalLayout_10);
							(function(container){
								var output_3 = new cpr.controls.Output("opt13");
								output_3.value = "dsProject";
								output_3.style.setClasses(["title"]);
								container.addChild(output_3, {
									"autoSize": "height",
									"width": "800px",
									"height": "25px"
								});
							})(group_18);
							container.addChild(group_18, {
								"colIndex": 0,
								"rowIndex": 0
							});
						})(group_16);
						container.addChild(group_16, {
							"autoSize": "height",
							"width": "1556px",
							"height": "25px"
						});
						var grid_2 = new cpr.controls.Grid("grid2");
						grid_2.init({
							"dataSet": app.lookup("dsIncvInurList"),
							"columnMovable": true,
							"resizableColumns": "all",
							"columns": [
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.targetColumnName = "custNo";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "custNo";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.targetColumnName = "custNm";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "custNm";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.targetColumnName = "custRfrnNo";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "custRfrnNo";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.targetColumnName = "joinGndrCode";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "joinGndrCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.targetColumnName = "joinGndrCodeNm";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "joinGndrCodeNm";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.targetColumnName = "inurCode";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "inurCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.targetColumnName = "inurCodeNm";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "inurCodeNm";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.targetColumnName = "inurNo";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "inurNo";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.targetColumnName = "acdtInurCode";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "acdtInurCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.targetColumnName = "dethResnDate";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "dethResnDate";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.targetColumnName = "joinAg";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "joinAg";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.targetColumnName = "custRoleCode";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "custRoleCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.targetColumnName = "custRoleCodeNm";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "custRoleCodeNm";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.targetColumnName = "minuRltsCode";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "minuRltsCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.targetColumnName = "minuRltsCodeNm";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "minuRltsCodeNm";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "31px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "custNo";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "custNm";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "custRfrnNo";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "joinGndrCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "joinGndrCodeNm";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "inurCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "inurCodeNm";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "inurNo";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "acdtInurCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "dethResnDate";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "joinAg";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "custRoleCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "custRoleCodeNm";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "minuRltsCode";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.columnName = "minuRltsCodeNm";
										}
									}
								]
							}
						});
						grid_2.style.setClasses(["list-normal"]);
						container.addChild(grid_2, {
							"autoSize": "none",
							"width": "1560px",
							"height": "280px"
						});
					})(group_15);
					container.addChild(group_15, {
						"colIndex": 1,
						"rowIndex": 0
					});
				})(group_9);
				container.addChild(group_9, {
					"autoSize": "height",
					"width": "1600px",
					"height": "540px"
				});
				var group_19 = new cpr.controls.Container("grp46");
				group_19.style.setClasses(["guide-stnr-box"]);
				// Layout
				var verticalLayout_11 = new cpr.controls.layouts.VerticalLayout();
				group_19.setLayout(verticalLayout_11);
				(function(container){
					var output_4 = new cpr.controls.Output("opt1");
					output_4.value = "'조회'버튼 클릭 시 nDepth 형태의 데이터를 읽어온다.";
					output_4.style.setClasses(["guide-stnr", "left"]);
					container.addChild(output_4, {
						"autoSize": "height",
						"width": "800px",
						"height": "15px"
					});
					var output_5 = new cpr.controls.Output("opt6");
					output_5.value = "상단의 그리드들은 원본 데이터셋, 하단의 그리드들은 부모 데이터셋 바인딩으로 인하여 구조가 변경되는 데이터셋이다.";
					output_5.style.setClasses(["guide-stnr", "left"]);
					container.addChild(output_5, {
						"autoSize": "height",
						"width": "1520px",
						"height": "15px"
					});
					var output_6 = new cpr.controls.Output("opt10");
					output_6.value = "하단 dsEmp 그리드의 row 클릭 시 bindParentRow API를 사용하여 dsProject, dsTask에 부모 데이터셋의 행을 바인딩한다.";
					output_6.style.setClasses(["guide-stnr", "left"]);
					container.addChild(output_6, {
						"autoSize": "height",
						"width": "800px",
						"height": "15px"
					});
					var output_7 = new cpr.controls.Output("opt11");
					output_7.value = "(사용예제)\r\nvar poDataSet = grid1.dataSet;\r\ndsProject.bindParentRow(poDataSet.getRow(grid1.getSelectedRowIndex()));";
					output_7.style.setClasses(["guide-stnr", "left"]);
					container.addChild(output_7, {
						"autoSize": "height",
						"width": "800px",
						"height": "15px"
					});
				})(group_19);
				container.addChild(group_19, {
					"autoSize": "height",
					"width": "1600px",
					"height": "98px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "140px",
				"height": "100%"
			});
		}
	});
	app.title = "bindParentRow API 예제";
	cpr.core.Platform.INSTANCE.register(app);
})();
