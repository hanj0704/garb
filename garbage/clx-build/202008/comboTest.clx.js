/*
 * App URI: 202008/comboTest
 * Source Location: 202008/comboTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202008/comboTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * comboTest.js
			 * Created at 2020. 8. 3. 오후 4:55:32.
			 *
			 * @author han
			 ************************************************/
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				var nb = app.lookup("nbe1");
				
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.distribution = "leading";
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var listBox_1 = new cpr.controls.ListBox("lbx1");
			(function(listBox_1){
				listBox_1.addItem(new cpr.controls.Item("label1", "value1"));
				listBox_1.addItem(new cpr.controls.Item("label2", "value2"));
			})(listBox_1);
			container.addChild(listBox_1, {
				"autoSize": "both",
				"width": "88px",
				"height": "104px"
			});
		}
	});
	app.title = "comboTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
