/*
 * App URI: 202008/tree
 * Source Location: 202008/tree.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202008/tree", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tree.js
			 * Created at 2020. 8. 5. 오후 2:15:10.
			 *
			 * @author daye
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				var vcTree = app.lookup("tre1");
			
				var voLan = cpr.I18N.INSTANCE.getLocaleData(app.lookup("cmb1").value);
				
				vcTree.getItems().forEach(function(each){
					
					var vsLan = voLan[each.row.getValue("label2")];
					
					if(vsLan != null) {
						each.label = vsLan;
					}
				
				});
				
				app.lookup("tre1").redraw();
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				app.lookup("sms1").send();
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms1SubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
				app.lookup("tre1").redraw();
			}
			
			
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCmb1SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb1 = e.control;
				
				app.app.createNewInstance().run();
				
				app.close();
			}
			
			
			
			/*
			 * 트리에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onTre1ItemClick(/* cpr.events.CItemEvent */ e){
				/** 
				 * @type cpr.controls.Tree
				 */
				var tre1 = e.control;
				
				var pa = e.item.row.getValue("parent");
			
				app.lookup("mdi1").addItemWithApp(pa,true,function(tabItem,app) {
					tabItem.text = e.item.label;
					
				});
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "HEADER_NM"},
					{"name": "HEADER_ID"},
					{"name": "PARENT_HDRID"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"},
					{"name": "label2"}
				],
				"rows": [
					{"label": "User ID", "value": "User ID", "parent": "202008/tab1", "label2": "User ID"},
					{"label": "Transaction Branch", "value": "Transaction Branch", "parent": "202008/tab2", "label2": "Transaction Branch"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("ds3");
			dataSet_3.parseData({
				"columns" : [
					{
						"name": "column1",
						"dataType": "number"
					},
					{
						"name": "column2",
						"dataType": "number"
					},
					{
						"name": "column3",
						"dataType": "number"
					}
				]
			});
			app.register(dataSet_3);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "202008/treeData.json";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onSms1SubmitDone == "function") {
				submission_1.addEventListener("submit-done", onSms1SubmitDone);
			}
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var tree_1 = new cpr.controls.Tree("tre1");
			(function(tree_1){
				tree_1.setItemSet(app.lookup("ds2"), {
					"label": "label",
					"value": "value"
				});
			})(tree_1);
			if(typeof onTre1SelectionChange == "function") {
				tree_1.addEventListener("selection-change", onTre1SelectionChange);
			}
			if(typeof onTre1ItemClick == "function") {
				tree_1.addEventListener("item-click", onTre1ItemClick);
			}
			container.addChild(tree_1, {
				"top": "0px",
				"bottom": "0px",
				"left": "0px",
				"width": "200px"
			});
			
			var group_1 = new cpr.controls.Container();
			group_1.style.css({
				"background-color" : "white",
				"background-image" : "none"
			});
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var comboBox_1 = new cpr.controls.ComboBox("cmb1");
				comboBox_1.userAttr({"language": "Y"});
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("ko", "ko"));
					comboBox_1.addItem(new cpr.controls.Item("en", "en"));
				})(comboBox_1);
				if(typeof onCmb1SelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCmb1SelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "16px",
					"right": "130px",
					"width": "100px",
					"height": "20px"
				});
				var button_1 = new cpr.controls.Button("btn1");
				button_1.value = "click";
				if(typeof onButtonClick == "function") {
					button_1.addEventListener("click", onButtonClick);
				}
				container.addChild(button_1, {
					"top": "12px",
					"right": "20px",
					"width": "100px",
					"height": "28px"
				});
				var output_1 = new cpr.controls.Output();
				output_1.value = "User ID";
				container.addChild(output_1, {
					"top": "16px",
					"left": "20px",
					"width": "100px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"right": "0px",
				"left": "200px",
				"height": "54px"
			});
			
			var mDIFolder_1 = new cpr.controls.MDIFolder("mdi1");
			container.addChild(mDIFolder_1, {
				"top": "53px",
				"right": "0px",
				"bottom": "100px",
				"left": "200px"
			});
			
			var group_2 = new cpr.controls.Container();
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
			})(group_2);
			container.addChild(group_2, {
				"top": "667px",
				"left": "200px",
				"width": "825px",
				"height": "101px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "tree";
	cpr.core.Platform.INSTANCE.register(app);
})();
