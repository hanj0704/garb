/*
 * App URI: 202008/tester
 * Source Location: 202008/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202008/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2020. 7. 30. 오전 10:21:10.
			 *
			 * @author han
			 ************************************************/
			
			//var copyKit = createCopyKit();
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
			//		var a = copyKit.copyPage(app);
					
					
					var b = new cpr.protocols.HttpPostMethod("202008/capture3.jsp", "_blank");
					
					b.addParameter("body", "가나다라마바사");
			//		b.setParameters("data", a);
			//		b.setParameters("initValue", a);
					b.submit();
					b.dispose();
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				var a = {
					"AQ": {
						
					"q" : {"Z":1,"x":2,"c":3},
					"w" : [{"Z":1,"x":2,"c":3},{"Z":4,"x":5,"c":6},{"Z":7,"x":8,"c":9}]
					}
				}
				
				var b = Object.keys(a);
				b = b.map(function(each){
					return a[each];
				});
				b.forEach(function(each){
					console.log(each.hasOwnProperty("q"));
				});
				
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
			//	app.lookup("sms1").ti
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
			//	var dataSet = new cpr.data.DataSet();
			//	
			//	dataSet.parseData({
			//				"columns": [
			//					{
			//						"label": "label",
			//						"dataType": "string"
			//					},
			//					{
			//						"label": "value",
			//						"dataType": "number"
			//					}
			//				],
			//				"rows": [
			//					{"label": "label1", "value": "1"},
			//					{"label": "label2", "value": "2"},
			//					{"label": "label3", "value": "3"},
			//					{"label": "label4", "value": "4"},
			//					{"label": "label5", "value": "5"},
			//					{"label": "label6", "value": "6"}
			//				]
			//			});
			//	
			//	var allRow = dataSet.findAllRow("value >= 4");
			//	
			//	allRow.forEach(function(/*cpr.data.Row*/each){
			//		app.lookup("cmb1").addItem(new cpr.controls.Item(each.getValue("label"), each.getValue("value")));
			//	});
			//	var allRow2 = dataSet.findAllRow("value < 4");
			//	
			//	allRow2.forEach(function(/*cpr.data.Row*/each){
			//		app.lookup("cmb2").addItem(new cpr.controls.Item(each.getValue("label"), each.getValue("value")));
			//	});
			//	dataSet.dispose();	
			//	
			//	
			//	var dataView = new cpr.data.DataView("ASD", app.lookup("ds1"));
			//	dataView.setFilter("filter=='1'");
			//	app.lookup("sms2").send();
			//	app.lookup("sms1").send();
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms1SubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
				var dataView = new cpr.data.DataView(app.lookup("cmb2").uuid, app.lookup("cmbOutGrid"));
				dataView.setFilter("filter=='"+app.lookup("cmb2").userAttr("filt")+"'");
				
				app.lookup("cmb2").setItemSet(dataView, {
					"label": "label",
					"value": "value"
				});
				
				var dataView2 = new cpr.data.DataView("asd", app.lookup("dsMan"));
				dataView2.setFilter("filter == '"+app.lookup("cmb2").userAttr("filt")+"'");
				app.lookup("cmb1").setItemSet(dataView2, {
					"label": "label",
					"value": "value"
				});
				
				
			//	var dataView3 = new cpr.data.DataView("aa",app.lookup("ds1"));
			//	dataView3.setFilter("filter == '1'");
			//	app.lookup("cmb3").setItemSet(dataView3, {
			//		"label": "label",
			//		"value": "value"
			//	});
				
			}
			
			var util = createCommonUtil();
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
			//	var copyMan = copyKit.copyPage(app);
			//	app.openDialog("202008/draftMan", {width : 400, height : 300}, function(dialog){
			//		dialog.ready(function(dialogApp){
			//		dialog.initValue = {
			//			"pageParam" : "202008/tester",
			//			"copyData" : copyMan
			//		}	
			//		});
			//	}).then(function(returnValue){
			//		;
			//	});
			//	util.Dialog.open(app, "202008/draftMan", , height, handler);
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				
				console.log("ㅁㅁㅁ");
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				app.lookup("btn5").removeEventListeners("click");
			}
			
			
			/*
			 * "Button" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn8 = e.control;
				app.lookup("cmb4").displayExp = "label +', '+ value";
			}	
			
			
			/*
			 * "Button" 버튼(btn9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn9Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn9 = e.control;
				
				var cmb = app.lookup("cmb4");
				
				cmb.selectItemByLabel("label1");
			}
			
			
			/*
			 * "서브미션동적생성" 버튼(btn10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn10Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn10 = e.control;
				
				var submission = new cpr.protocols.Submission("abc");
				
				submission.action = "data/FXFIG2.json";
				submission.send();
			
			}
			
			
			/*
			 * "서브미션경찰" 버튼(btn11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn11Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn11 = e.control;
				
				
				var allDataControls = app.getAllDataControls();
				console.log(allDataControls);
			}
			
			
			/*
			 * "데이터뷰 생성" 버튼(btn12)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn12Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn12 = e.control;
				
			var dataView1 = new cpr.data.DataView("asdf",app.lookup("ds3"));
				dataView1.userData("parentDs", app.lookup("ds3"));
				dataView1.setFilter("column1 >  3");
					
				app.lookup("cmb5").setItemSet(dataView1, {
					"label" : "label",
					"value" : "value"
					});
				app.lookup("cmb5").dataSet.dispose();
				var a = app.lookup("cmb5").dataSet;
				a.dispose();
				app.lookup("ds3").dispose();
			//	console.log(app.lookup("cmb5").dataSet);	
			}
			
			
			/*
			 * "데이터뷰 경찰" 버튼(btn13)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn13Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn13 = e.control;
			//	app.getAllDataControls().forEach(function(each){
			//		console.log(each);
			//	});
				
				var cmb = app.lookup("cmb6");
				cmb.dataSet.dispose();
				app.lookup("ds3").dispose();
				
				cmb.redraw();
				
			}
			
			
			/*
			 * "경찰2" 버튼(btn14)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn14Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn14 = e.control;
			//	app.lookup("dti1").	
				var a= moment();
				console.log(a);
			}	
			
			
			/*
			 * "upp" 버튼(btn15)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn15Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn15 = e.control;
				
				var a = app.lookup("ipb9").value
				
				console.log(a.toUpperCase());
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "filter"},
					{"name": "value"},
					{"name": "label"}
				],
				"rows": [
					{"filter": "1", "value": "2", "label": "name1"},
					{"filter": "1", "value": "3", "label": "name2"},
					{"filter": "1", "value": "4", "label": "name3"},
					{"filter": "1", "value": "5", "label": "name4"},
					{"filter": "1", "value": "6", "label": "name5"},
					{"filter": "1", "value": "7", "label": "name6"},
					{"filter": "1", "value": "8", "label": "name7"},
					{"filter": "1", "value": "9", "label": "name8"},
					{"filter": "1", "value": "2", "label": "name1"},
					{"filter": "1", "value": "3", "label": "name2"},
					{"filter": "1", "value": "4", "label": "name3"},
					{"filter": "1", "value": "5", "label": "name4"},
					{"filter": "1", "value": "6", "label": "name5"},
					{"filter": "1", "value": "7", "label": "name6"},
					{"filter": "1", "value": "8", "label": "name7"},
					{"filter": "1", "value": "9", "label": "name8"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("cmbOutGrid");
			dataSet_2.parseData({
				"columns" : [
					{"name": "filter"},
					{"name": "label"},
					{"name": "value"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsMan");
			dataSet_3.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "filter"},
					{
						"name": "column1",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "label +\", \"+ value"
					},
					{"name": "column2"}
				],
				"rows": [
					{"label": "label1", "value": "value1", "filter": "filter1", "column2": "dk1"},
					{"label": "label2", "value": "value2", "filter": "filter2", "column2": "sl2"},
					{"label": "label3", "value": "value3", "filter": "filter3", "column2": "z3"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("ds2");
			dataSet_4.parseData({
				"columns": [{"name": "column1"}],
				"rows": [
					{"column1": "column11"},
					{"column1": "column12"},
					{"column1": "column13"},
					{"column1": "column14"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("ds3");
			dataSet_5.parseData({
				"columns": [
					{
						"name": "column1",
						"dataType": "number"
					},
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"column1": "1", "label": "l1", "value": "v1"},
					{"column1": "2", "label": "l2", "value": "v2"},
					{"column1": "3", "label": "l3", "value": "v3"},
					{"column1": "4", "label": "l4", "value": "v4"},
					{"column1": "5", "label": "l5", "value": "v5"},
					{"column1": "6", "label": "l6", "value": "v6"},
					{"column1": "7", "label": "l7", "value": "v7v"},
					{"column1": "8", "label": "l8", "value": "v8"},
					{"column1": "9", "label": "l9", "value": "v9"}
				]
			});
			if(typeof onDs3Update == "function") {
				dataSet_5.addEventListener("update", onDs3Update);
			}
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [{
					"name": "column1",
					"defaultValue": "답변사항\t담당자\t샘플화"
				}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "data/FXFIG3.json";
			submission_1.addResponseData(dataSet_2, false);
			if(typeof onSms1SubmitDone == "function") {
				submission_1.addEventListener("submit-done", onSms1SubmitDone);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms2");
			submission_2.action = "data/FXFIG4.json";
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.readOnly = true;
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "377px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "347px",
				"left": "548px",
				"width": "100px",
				"height": "20px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cmb1");
			(function(comboBox_1){
				comboBox_1.setItemSet(app.lookup("dsMan"), {
					"label": "label",
					"value": "value"
				});
			})(comboBox_1);
			container.addChild(comboBox_1, {
				"top": "438px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var comboBox_2 = new cpr.controls.ComboBox("cmb2");
			comboBox_2.userAttr({"filt": "XPNT_CD:2"});
			(function(comboBox_2){
			})(comboBox_2);
			container.addChild(comboBox_2, {
				"top": "468px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var comboBox_3 = new cpr.controls.ComboBox("cmb3");
			(function(comboBox_3){
				comboBox_3.setItemSet(app.lookup("ds1"), {
					"label": "label",
					"value": "value"
				});
			})(comboBox_3);
			container.addChild(comboBox_3, {
				"top": "498px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.readOnly = true;
			button_4.value = "Button";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "407px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.value = "Button";
			if(typeof onBtn5Click == "function") {
				button_5.addEventListener("click", onBtn5Click);
			}
			container.addChild(button_5, {
				"top": "50px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_6 = new cpr.controls.Button("btn6");
			button_6.value = "Button";
			if(typeof onBtn6Click == "function") {
				button_6.addEventListener("click", onBtn6Click);
			}
			container.addChild(button_6, {
				"top": "80px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var mDIFolder_1 = new cpr.controls.MDIFolder("mdi1");
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "tab 1";
				var group_1 = new cpr.controls.Container();
				// Layout
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_1.setLayout(xYLayout_2);
				(function(container){
					var inputBox_1 = new cpr.controls.InputBox("ipb1");
					container.addChild(inputBox_1, {
						"top": "20px",
						"left": "20px",
						"width": "100px",
						"height": "20px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipb2");
					container.addChild(inputBox_2, {
						"top": "50px",
						"left": "20px",
						"width": "100px",
						"height": "20px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipb3");
					container.addChild(inputBox_3, {
						"top": "80px",
						"left": "20px",
						"width": "100px",
						"height": "20px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipb4");
					container.addChild(inputBox_4, {
						"top": "110px",
						"left": "20px",
						"width": "100px",
						"height": "20px"
					});
				})(group_1);
				tabItem_1.content = group_1;
				return tabItem_1;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_1);
			
			var tabItem_2 = (function(tabFolder){
				var tabItem_2 = new cpr.controls.TabItem();
				tabItem_2.text = "testerMan";
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
				cpr.core.App.load("202008/testerMan", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				tabItem_2.content = embeddedApp_1;
				return tabItem_2;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_2);
			
			var tabItem_3 = (function(tabFolder){
				var tabItem_3 = new cpr.controls.TabItem();
				tabItem_3.text = "tab 3";
				var group_2 = new cpr.controls.Container();
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var inputBox_5 = new cpr.controls.InputBox("ipb5");
					inputBox_5.value = "";
					container.addChild(inputBox_5, {
						"top": "20px",
						"left": "20px",
						"width": "100px",
						"height": "20px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipb6");
					inputBox_6.value = "";
					container.addChild(inputBox_6, {
						"top": "71px",
						"left": "79px",
						"width": "100px",
						"height": "20px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipb7");
					inputBox_7.value = "";
					container.addChild(inputBox_7, {
						"top": "115px",
						"left": "140px",
						"width": "100px",
						"height": "20px"
					});
				})(group_2);
				tabItem_3.content = group_2;
				return tabItem_3;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_3);
			mDIFolder_1.setSelectedTabItem(tabItem_1);
			container.addChild(mDIFolder_1, {
				"top": "99px",
				"left": "20px",
				"width": "628px",
				"height": "240px"
			});
			
			var grid_1 = linker.grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds2"),
				"columns": [
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.control = (function(){
									var button_7 = new cpr.controls.Button("btn7");
									button_7.value = "Button";
									return button_7;
								})();
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "360px",
				"left": "130px",
				"width": "374px",
				"height": "175px"
			});
			
			var inputBox_8 = linker.inputBox_8 = new cpr.controls.InputBox("ipb8");
			inputBox_8.bind("value").toDataColumn("column1");
			container.addChild(inputBox_8, {
				"top": "545px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var userDefinedControl_1 = new udc.test();
			userDefinedControl_1.btn1Value = "1234";
			container.addChild(userDefinedControl_1, {
				"top": "377px",
				"left": "514px",
				"width": "300px",
				"height": "30px"
			});
			
			var comboBox_4 = new cpr.controls.ComboBox("cmb4");
			comboBox_4.displayExp = "value";
			(function(comboBox_4){
				comboBox_4.setItemSet(app.lookup("dsMan"), {
					"label": "label",
					"value": "value"
				});
			})(comboBox_4);
			container.addChild(comboBox_4, {
				"top": "110px",
				"left": "658px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_8 = new cpr.controls.Button("btn8");
			button_8.value = "Button";
			if(typeof onBtn8Click == "function") {
				button_8.addEventListener("click", onBtn8Click);
			}
			container.addChild(button_8, {
				"top": "110px",
				"left": "768px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_9 = new cpr.controls.Button("btn9");
			button_9.value = "Button";
			if(typeof onBtn9Click == "function") {
				button_9.addEventListener("click", onBtn9Click);
			}
			container.addChild(button_9, {
				"top": "140px",
				"left": "768px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_10 = new cpr.controls.Button("btn10");
			button_10.readOnly = true;
			button_10.value = "서브미션동적생성";
			if(typeof onBtn10Click == "function") {
				button_10.addEventListener("click", onBtn10Click);
			}
			container.addChild(button_10, {
				"top": "631px",
				"left": "20px",
				"width": "128px",
				"height": "20px"
			});
			
			var button_11 = new cpr.controls.Button("btn11");
			button_11.readOnly = true;
			button_11.value = "서브미션경찰";
			if(typeof onBtn11Click == "function") {
				button_11.addEventListener("click", onBtn11Click);
			}
			container.addChild(button_11, {
				"top": "661px",
				"left": "20px",
				"width": "128px",
				"height": "20px"
			});
			
			var button_12 = new cpr.controls.Button("btn12");
			button_12.readOnly = true;
			button_12.value = "데이터뷰 생성";
			if(typeof onBtn12Click == "function") {
				button_12.addEventListener("click", onBtn12Click);
			}
			container.addChild(button_12, {
				"top": "631px",
				"left": "158px",
				"width": "128px",
				"height": "20px"
			});
			
			var button_13 = new cpr.controls.Button("btn13");
			button_13.readOnly = true;
			button_13.value = "데이터뷰 경찰";
			if(typeof onBtn13Click == "function") {
				button_13.addEventListener("click", onBtn13Click);
			}
			container.addChild(button_13, {
				"top": "661px",
				"left": "158px",
				"width": "128px",
				"height": "20px"
			});
			
			var comboBox_5 = new cpr.controls.ComboBox("cmb5");
			(function(comboBox_5){
			})(comboBox_5);
			container.addChild(comboBox_5, {
				"top": "631px",
				"left": "296px",
				"width": "100px",
				"height": "20px"
			});
			
			var comboBox_6 = new cpr.controls.ComboBox("cmb6");
			(function(comboBox_6){
				comboBox_6.setItemSet(app.lookup("ds3"), {
					"label": "label",
					"value": "value"
				});
			})(comboBox_6);
			container.addChild(comboBox_6, {
				"top": "631px",
				"left": "404px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_14 = new cpr.controls.Button("btn14");
			button_14.readOnly = true;
			button_14.value = "경찰2";
			if(typeof onBtn14Click == "function") {
				button_14.addEventListener("click", onBtn14Click);
			}
			container.addChild(button_14, {
				"top": "661px",
				"left": "296px",
				"width": "100px",
				"height": "20px"
			});
			
			var dateInput_1 = new cpr.controls.DateInput("dti1");
			container.addChild(dateInput_1, {
				"top": "498px",
				"left": "514px",
				"width": "100px",
				"height": "20px"
			});
			
			var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
			numberEditor_1.spinButton = false;
			container.addChild(numberEditor_1, {
				"top": "661px",
				"left": "404px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_9 = new cpr.controls.InputBox("ipb9");
			container.addChild(inputBox_9, {
				"top": "575px",
				"left": "503px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_15 = new cpr.controls.Button("btn15");
			button_15.readOnly = true;
			button_15.value = "upp";
			if(typeof onBtn15Click == "function") {
				button_15.addEventListener("click", onBtn15Click);
			}
			container.addChild(button_15, {
				"top": "575px",
				"left": "614px",
				"width": "100px",
				"height": "20px"
			});
			
			var listBox_1 = new cpr.controls.ListBox("lbx2");
			listBox_1.displayExp = "label + \"[\"+column2+\"]\"";
			(function(listBox_1){
				listBox_1.setItemSet(app.lookup("dsMan"), {
					"label": "label",
					"value": "value"
				})
			})(listBox_1);
			container.addChild(listBox_1, {
				"top": "170px",
				"left": "779px",
				"width": "159px",
				"height": "150px"
			});
			
			var listBox_2 = new cpr.controls.ListBox("lbx1");
			(function(listBox_2){
			})(listBox_2);
			container.addChild(listBox_2, {
				"top": "170px",
				"left": "669px",
				"width": "100px",
				"height": "150px"
			});
			
			var inputBox_10 = new cpr.controls.InputBox("ipb10");
			container.addChild(inputBox_10, {
				"top": "31px",
				"left": "693px",
				"width": "100px",
				"height": "20px"
			});
			
			var calendar_1 = new cpr.controls.Calendar();
			calendar_1.showAnniversary = true;
			(function(calendar_1){
			})(calendar_1);
			container.addChild(calendar_1, {
				"top": "438px",
				"left": "724px",
				"width": "240px",
				"height": "270px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.inputBox_8.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
