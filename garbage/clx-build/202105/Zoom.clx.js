/*
 * App URI: 202105/Zoom
 * Source Location: 202105/Zoom.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202105/Zoom", {
		onPrepare: function(loader){
			loader.addCSS("202105/zoom.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Zoom.js
			 * Created at 2021. 5. 17. 오후 1:45:41.
			 *
			 * @author ryu54
			 ************************************************/
			
			/**
			 * 글자 크기 조정 최대/최소 값
			 */
			var maZmSize = [90, 120];
			
			/**
			 * 글자 크기 조정 간격
			 */
			var mnZmUnit = 5;
			
			/**
			 * 현재 글자 크기
			 */
			var mnCurrentZmSize = 100;
			
			/**
			 * 글자 크기 확대하거나 축소합니다.
			 * @param {"in" | "out"} psZoom
			 */
			function zoomFontSize(psZoom) {
				var vnZmSize = psZoom == "in" ? mnCurrentZmSize + mnZmUnit : mnCurrentZmSize - mnZmUnit;
				if (vnZmSize < maZmSize[0]){
					alert("최소 축소입니다.");
					return;
				} else if (vnZmSize > maZmSize[1]) {
					alert("최대 확대입니다.");
					return;
				}
				
				/* 브라우저마다 zoom을 해석하는 방식이 달라 다음과 같이 처리 */
				//app.lookup("eaCn").style.css("zoom", vnZmSize + "%");
				
				var vcEaCn = app.lookup("ea1");
				var voEaAppIns = vcEaCn.getEmbeddedAppInstance();
				if (!voEaAppIns){
					return;
				}
				
				var vcEaCont = voEaAppIns.getContainer();
				vcEaCont.style.removeClass("zoom-" + mnCurrentZmSize);
				vcEaCont.style.addClass("zoom-" + vnZmSize);
				
				mnCurrentZmSize = vnZmSize;
			}
			
			/*
			 * "+" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				zoomFontSize("in");
			}
			
			
			/*
			 * "-" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				zoomFontSize("out");
			}
			
			
			/*
			 * 임베디드 앱에서 load 이벤트 발생 시 호출.
			 * 임베디드 앱이 준비되고 그려진 후에 디스패치 되는 이벤트.
			 */
			function onEa1Load(/* cpr.events.CEvent */ e){
				/** 
				 * @type cpr.controls.EmbeddedApp
				 */
				var ea = e.control;
				
				var voEaAppIns = ea.getEmbeddedAppInstance();
				if (voEaAppIns){
					var container = voEaAppIns.getContainer();
					container.childCombinatorClass = "cl-out";
				}
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 0;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button();
				button_1.value = "+";
				if(typeof onButtonClick == "function") {
					button_1.addEventListener("click", onButtonClick);
				}
				container.addChild(button_1, {
					"left": "32px",
					"width": "30px",
					"height": "30px",
					"top": "calc(50% - 15px)"
				});
				var button_2 = new cpr.controls.Button();
				button_2.value = "-";
				if(typeof onButtonClick2 == "function") {
					button_2.addEventListener("click", onButtonClick2);
				}
				container.addChild(button_2, {
					"left": "67px",
					"width": "30px",
					"height": "30px",
					"top": "calc(50% - 15px)"
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "1024px",
				"height": "50px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			if(typeof onEa1Load == "function") {
				embeddedApp_1.addEventListener("load", onEa1Load);
			}
			cpr.core.App.load("202105/ZoomSub", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"autoSize": "height",
				"width": "320px",
				"height": "718px"
			});
		}
	});
	app.title = "Zoom";
	cpr.core.Platform.INSTANCE.register(app);
})();
