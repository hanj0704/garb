/*
 * App URI: 202105/treeTest
 * Source Location: 202105/treeTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202105/treeTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * treeTest.js
			 * Created at 2021. 5. 7. 오전 9:27:17.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * 트리에서 drop 이벤트 발생 시 호출.
			 * 마우스로 소스 컨트롤을 드래그 중 타겟 컨트롤에 소스 컨트롤을 드롭할 때 발생하는 이벤트.
			 */
			function onTre1Drop(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Tree
				 */
				var tre1 = e.control;
				
				var a = e.dataTransfer.getData("text");
				
				var b = e.targetObject.item;
				
				a = JSON.parse(a);
				console.log(a);
				console.log(b);
				e.preventDefault();
				/** @type cpr.controls.Tree */
				var tre = app.lookup(a.from.id);
				var item = tre.getDataSetIndexByValue(a.content[0].value);
				console.log(item);
				tre.dataSet.deleteRow(item);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "1", "value": "1", "parent": ""},
					{"label": "11", "value": "11", "parent": "1"},
					{"label": "12", "value": "12", "parent": "1"},
					{"label": "13", "value": "13", "parent": "1"},
					{"label": "14", "value": "14", "parent": "1"},
					{"label": "2", "value": "2", "parent": ""},
					{"label": "21", "value": "21", "parent": "2"},
					{"label": "22", "value": "22", "parent": "2"},
					{"label": "23", "value": "23", "parent": "2"},
					{"label": "3", "value": "3", "parent": ""},
					{"label": "31", "value": "31", "parent": "3"},
					{"label": "32", "value": "32", "parent": "3"},
					{"label": "33", "value": "33", "parent": "3"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "4", "value": "4", "parent": ""},
					{"label": "41", "value": "41", "parent": "4"},
					{"label": "42", "value": "42", "parent": "4"},
					{"label": "43", "value": "43", "parent": "4"},
					{"label": "44", "value": "44", "parent": "4"},
					{"label": "5", "value": "5", "parent": ""},
					{"label": "51", "value": "51", "parent": "5"},
					{"label": "52", "value": "52", "parent": "5"},
					{"label": "53", "value": "53", "parent": "5"},
					{"label": "6", "value": "6", "parent": ""},
					{"label": "61", "value": "61", "parent": "6"},
					{"label": "62", "value": "62", "parent": "6"},
					{"label": "63", "value": "63", "parent": "6"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var tree_1 = new cpr.controls.Tree("tre1");
			tree_1.draggableItem = true;
			tree_1.allowDrop = true;
			(function(tree_1){
				tree_1.setItemSet(app.lookup("ds1"), {
					"label": "label",
					"value": "value",
					"parentValue": "parent"
				});
			})(tree_1);
			if(typeof onTre1Drop == "function") {
				tree_1.addEventListener("drop", onTre1Drop);
			}
			container.addChild(tree_1, {
				"top": "20px",
				"left": "20px",
				"width": "243px",
				"height": "496px"
			});
			
			var tree_2 = new cpr.controls.Tree("tre2");
			tree_2.draggableItem = true;
			tree_2.allowDrop = true;
			(function(tree_2){
				tree_2.setItemSet(app.lookup("ds2"), {
					"label": "label",
					"value": "value",
					"parentValue": "parent"
				});
			})(tree_2);
			if(typeof onTre1Drop == "function") {
				tree_2.addEventListener("drop", onTre1Drop);
			}
			container.addChild(tree_2, {
				"top": "20px",
				"left": "273px",
				"width": "243px",
				"height": "496px"
			});
		}
	});
	app.title = "treeTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
