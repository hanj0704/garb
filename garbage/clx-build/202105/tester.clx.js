/*
 * App URI: 202105/tester
 * Source Location: 202105/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202105/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2021. 5. 3. 오전 10:07:50.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
			//	app.lookup("btn2")
			
			//	app.lookup("grp1").scrollTo(1600,0,0.8,cpr.animation.TimingFunction.EASE_OUT);
				var ani = new cpr.animation.Animator(0.8, cpr.animation.TimingFunction.EASE_OUT);
				
				ani.addTask(function(p){
					
					app.lookup("grp1").scrollTo(p*1600, 0);
				});
				
				ani.run().then(function(input){
					
					console.log("JOB DONE");
				});
			}
			
			
			
			/*
			 * 트리에서 drop 이벤트 발생 시 호출.
			 * 마우스로 소스 컨트롤을 드래그 중 타겟 컨트롤에 소스 컨트롤을 드롭할 때 발생하는 이벤트.
			 */
			function onTre1Drop(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Tree
				 */
				var tre1 = e.control;
				var data = JSON.parse(e.dataTransfer.getData("text"));
				
				var item = tre1.getItemByValue(data.content[0].value);
				item.parentValue = e.targetObject.item.value; 
				tre1.redraw();
				e.preventDefault();
				
			}
			
			
			
			
			/*
			 * "->" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				console.log(btn2.getActualRect());
			}
			
			
			/*
			 * "Button" 버튼(btn17)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn17Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn17 = e.control;
				
			//	console.log(window.top);
			//	console.log(window.screenTop);
			//	console.log(window.innerHeight);
			//	console.log(window.outerHeight);
				app.lookup("sms1").send().then(function(input){
					console.log("ㅋㅋ");
					console.log(input);
					var a = input.control;
					console.log(a);
					console.log(app.lookup("sms1").xhr);
				});
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms1SubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
					console.log("쿄쿄");
					console.log(e);
					var a = e.control;
					console.log(a);
					console.log(app.lookup("sms1").xhr);
			}
			
			
			/*
			 * "Button" 버튼(btn19)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn19Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn19 = e.control;
				
			//	var ds = app.lookup("ds2")
			//	var cn = ds.getHeaders();
			//	var a = app.lookup("ds2").getRowDataRanged();
			//	console.log(a);
			//	console.log(typeof a);
			//	a.forEach(function(eachRow){
			//		
			//		cn.forEach(function(each){
			//			
			//			eachRow[each.getInfo()] = eachRow[each.getName()];
			//			delete eachRow[each.getName()];
			//		});
			//	
			//	});
			//	
				var sms = app.lookup("sms2");
				sms.setResponseDecoder(_response);
				sms.send();
				
			}
			
			function _response(sub,resData) {
				
				var res = resData;
				
				var jso = JSON.parse(res);
				
			/** @type Array */
				var ds2 = jso["ds2"];
				var ds = app.lookup("ds2");
				var va = ds.getHeaders();
				
				ds2.forEach(function(each){
					
					va.forEach(function(eachH){
						
						each[eachH.getName()] = each[eachH.getInfo()];
						delete each[eachH.getInfo()]
					});
				});
				console.log(JSON.stringify(jso));
				return {
					contentType : "application/json",
					content : jso
				}
			
			}
			
			
			
			
			
			
			
			
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms2SubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms2 = e.control;
				
				app.lookup("grd1").redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn20)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn20Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn20 = e.control;
				
				var a = Object.create(btn20);
				
				console.log(a);
				
				a.id = "aa";
				
				app.getContainer().addChild(a, {
					"left" : "700px",
					"top" :"700px",
					"width" : "100px",
					"height" : "30px"
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "column11", "column2": "1", "column3": ""},
					{"column1": "column12", "column2": "2", "column3": ""},
					{"column1": "column13", "column2": "3", "column3": ""},
					{"column1": "column14", "column2": "4", "column3": ""},
					{"column1": "column15", "column2": "5", "column3": ""},
					{"column1": "column16", "column2": "6", "column3": ""}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{
						"name": "column1",
						"info": "a"
					},
					{
						"name": "column2",
						"info": "q"
					}
				],
				"rows": [
					{"column1": "column11", "column2": "column21"},
					{"column1": "column12", "column2": "column22"},
					{"column1": "column13", "column2": "column23"}
				]
			});
			app.register(dataSet_2);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "data/d1.json";
			if(typeof onSms1SubmitDone == "function") {
				submission_1.addEventListener("submit-done", onSms1SubmitDone);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms2");
			submission_2.action = "202105/dm.json";
			submission_2.addResponseData(dataSet_2, false);
			if(typeof onSms2SubmitDone == "function") {
				submission_2.addEventListener("submit-done", onSms2SubmitDone);
			}
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "309px",
				"width": "100px",
				"height": "20px"
			});
			
			var tree_1 = new cpr.controls.Tree("tre1");
			tree_1.draggableItem = true;
			tree_1.allowDrop = true;
			(function(tree_1){
				tree_1.setItemSet(app.lookup("ds1"), {
					"label": "column1",
					"value": "column2",
					"parentValue": "column3"
				});
			})(tree_1);
			if(typeof onTre1Drop == "function") {
				tree_1.addEventListener("drop", onTre1Drop);
			}
			container.addChild(tree_1, {
				"top": "50px",
				"left": "20px",
				"width": "466px",
				"height": "395px"
			});
			
			var group_1 = new cpr.controls.Container("grp2");
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var button_2 = new cpr.controls.Button("btn3");
				button_2.value = "Button";
				container.addChild(button_2, {
					"width": "100px",
					"height": "20px"
				});
				var button_3 = new cpr.controls.Button("btn4");
				button_3.value = "Button";
				container.addChild(button_3, {
					"width": "10px",
					"height": "11px"
				});
				var button_4 = new cpr.controls.Button("btn5");
				button_4.value = "Button";
				container.addChild(button_4, {
					"width": "100px",
					"height": "20px"
				});
				var button_5 = new cpr.controls.Button("btn6");
				button_5.value = "Button";
				container.addChild(button_5, {
					"width": "100px",
					"height": "20px"
				});
				var button_6 = new cpr.controls.Button("btn7");
				button_6.value = "Button";
				container.addChild(button_6, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_7 = new cpr.controls.Button("btn8");
				button_7.value = "Button";
				container.addChild(button_7, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_8 = new cpr.controls.Button("btn9");
				button_8.value = "Button";
				container.addChild(button_8, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_9 = new cpr.controls.Button("btn10");
				button_9.value = "Button";
				container.addChild(button_9, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_10 = new cpr.controls.Button("btn11");
				button_10.value = "Button";
				container.addChild(button_10, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_11 = new cpr.controls.Button("btn12");
				button_11.value = "Button";
				container.addChild(button_11, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_12 = new cpr.controls.Button("btn13");
				button_12.value = "Button";
				container.addChild(button_12, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_13 = new cpr.controls.Button("btn14");
				button_13.value = "Button";
				container.addChild(button_13, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_14 = new cpr.controls.Button("btn15");
				button_14.value = "Button";
				container.addChild(button_14, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_15 = new cpr.controls.Button("btn16");
				button_15.value = "Button";
				container.addChild(button_15, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
				var button_16 = new cpr.controls.Button("btn17");
				button_16.value = "Button";
				if(typeof onBtn17Click == "function") {
					button_16.addEventListener("click", onBtn17Click);
				}
				container.addChild(button_16, {
					"autoSize": "none",
					"width": "244px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "62px",
				"left": "477px",
				"width": "244px",
				"height": "395px"
			});
			
			var group_2 = new cpr.controls.Container("grp1");
			group_2.style.setClasses(["hanCont"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_2);
			(function(container){
				var button_17 = new cpr.controls.Button("btn2");
				button_17.value = "->";
				if(typeof onBtn2Click == "function") {
					button_17.addEventListener("click", onBtn2Click);
				}
				container.addChild(button_17, {
					"top": "112px",
					"left": "60px",
					"width": "253px",
					"height": "307px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "615px",
				"left": "158px",
				"width": "261px",
				"height": "292px"
			});
			
			var button_18 = new cpr.controls.Button("btn18");
			button_18.value = "->";
			button_18.style.setClasses(["hanCont"]);
			container.addChild(button_18, {
				"top": "187px",
				"left": "679px",
				"width": "100px",
				"height": "100px"
			});
			
			var button_19 = new cpr.controls.Button("btn19");
			button_19.tooltip = "qq";
			button_19.value = "Button";
			if(typeof onBtn19Click == "function") {
				button_19.addEventListener("click", onBtn19Click);
			}
			container.addChild(button_19, {
				"top": "456px",
				"left": "20px",
				"width": "158px",
				"height": "66px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds2"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column2";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "467px",
				"left": "378px",
				"width": "390px",
				"height": "138px"
			});
			
			var button_20 = new cpr.controls.Button("btn20");
			button_20.value = "Button";
			if(typeof onBtn20Click == "function") {
				button_20.addEventListener("click", onBtn20Click);
			}
			container.addChild(button_20, {
				"top": "532px",
				"left": "20px",
				"width": "158px",
				"height": "73px"
			});
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
