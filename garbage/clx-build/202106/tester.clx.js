/*
 * App URI: 202106/tester
 * Source Location: 202106/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202106/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2021. 6. 1. 오후 1:30:08.
			 *
			 * @author HANS
			 ************************************************/
			
			
			cpr.expression.ExpressionEngine.INSTANCE.registerFunction("getChamberWaferName", function(evev){
				
				console.log(evev);
			});
			
			
			//	var util = createCommonUtil();
			var a = 0 ;
			var b = 0;
			var c = 0;
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				if( a == 0 && b == 0){
					a = moment().valueOf();
				}
				 else if(a != 0 && b == 0) {
				 	
				 	b = moment().valueOf();
				 } else {
				 	c = moment.duration(b-a)/1;
				 	
				 }
				 if(c != 0) {
				 	
					 console.log(c);
				 }
				 
			}
			var q ;
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				
				q = setInterval(function(args){
					app.lookup("btn1").click();
				}, 1000)
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				clearInterval(q);
			}
			
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				
				app.lookup("sms1").send();
			}
			
			
			/*
			 * 파일 인풋에서 value-change 이벤트 발생 시 호출.
			 * FileInput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onFi1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.FileInput
				 */
				var fi1 = e.control;
				
				var a = fi1.file;
				var b = new FileReader();;
				
				app.lookup("sms1").addFileParameter("FI1", a);
				
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				
				
				var dm = app.lookup("dm1");
				dm.setValue("AA_BB","A");
				dm.setValue("AAA__BBB","N");
				dm.setValue("column3","C");
				dm.setValue("column4","D");
				dm.setValue("column5","E");
				dm.setValue("column6","F");
				
				app.lookup("ud1").binders();
			}
			
			
			/*
			 * "Button" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				
				var dm = app.lookup("dm1");
				dm.setValue("AA_BB","B");
				dm.setValue("AAA__BBB","C");
				dm.setValue("column3","D");
				dm.setValue("column4","E");
				dm.setValue("column5","F");
				dm.setValue("column6","G");
				
				app.lookup("ud1").binders();
			}
			
			
			/*
			 * 데이터맵에서 load 이벤트 발생 시 호출.
			 * build 메소드에 의해 데이터 구조가 재구성될 때 발생하는 이벤트. 초기 생성시에도 발생합니다.
			 */
			function onDm1Load(/* cpr.events.CDataEvent */ e){
				/** 
				 * @type cpr.data.DataMap
				 */
				var dm1 = e.control;
				
			}
			
			
			/*
			 * "Button" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn8 = e.control;
				console.log("TMC.Simlop.sim_LP2_MPLine1".toLowerCase());
				console.log("TMC.SimIop.sim_LP2_MPLine2".toLowerCase());
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				
				var a = "AAA__BBB";
				
				var  b = a.replace("__", ".");
				
				console.log(b);	
			}
			
			
			/*
			 * "Button" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				var ds = app.lookup("ds1");
				
				var a =ds.getHeader("A.B");
				console.log(a.getName());
				console.log(a.getColumnType());
				console.log(a.getDataType());
				a.userAttr("abc","zzz");
				console.log(a.userAttr("abc"));
				a.setInfo("dpqpqp");
				console.log(a.getInfo());
				
				console.log(ds.getRowDataRanged());
				ds.forEachOfUnfilteredRows(function(dataRow){
					console.log(dataRow.getValue("A.B"));
					console.log(dataRow.getValue("C.D"));
					console.log(dataRow.getNumber("C.D"));
				});
				
				console.log(ds.isDisplayColumn("A.B"));
				console.log(ds.isExistColumn("A.B"));
				console.log(ds.getMax("getValue('C.D')"));
				console.log(ds.getMin("C.D"));
				console.log(ds.getMax("column1"));
				console.log(ds.getMin("column1"));
			}
			
			
			/*
			 * "Button" 버튼(btn11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn11Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn11 = e.control;
				
				var ds = app.lookup("ds1");
			
				var a = ds.findAllRow("C.D > 2");
				console.log(a);
				
				var b = ds.findAllRow("getValue(\"C.D\") > 3");
				console.log(b);
				
				var c = ds.findAllRow("\"C.D\" > 3");
				console.log(c);
				
				var d = ds.findAllRow("Number(\"C.D\") > 2");
				console.log(d);
				
			}
			
			
			/*
			 * "Button" 버튼(btn10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn10Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn10 = e.control;
				var dm = app.lookup("dm2");
				
				console.log(dm.getValue("E.R"));
				
				
			}
			/*
			 * "Button" 버튼(btn12)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn12Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn12 = e.control;
			//	util.Msg.alert("zzz");
				console.log("ㅋㅋ");
			}
			
			
			/*
			 * "Button" 버튼(btn18)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn18Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn18 = e.control;
				
				
				app.getContainer().redraw();
			}
			
			
			/*
			 * "Button" 버튼(btn19)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn19Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn19 = e.control;
				
			//	console.log(isNaN(0));
			//	console.log(isNaN(1));
			//	console.log(isNaN("true"));
			//	console.log(isNaN("false"));
			//	console.log(isNaN());
			//	console.log(isNaN(undefined));
			//	console.log(isNaN(null));
				console.log(Boolean(0));
				console.log(Boolean(1));
				console.log(Boolean("true"));
				console.log(Boolean("false"));
				console.log(Boolean(undefined));
				console.log(Boolean(null));
				console.log("ㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁ");
				console.log(!!0);
				console.log(!!1);
				console.log(!!"true");
				console.log(!!"false");
				console.log(!!undefined);
				console.log(!!null)
			}
			
			
			/*
			 * "Button" 버튼(btn27)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn27Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn27 = e.control;
				window.close();
			}
			
			
			
			//setTimeout(function(){
			//		window.close();
			//	} ,2000)
			
			
			/*
			 * "Button" 버튼(btn29)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn29Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn29 = e.control;
				
				var aqq = app.getContainer().getChildren().filter(function(each){
					return each.userAttr("isHan") =="Y"
				});
				console.log(aqq);
			}
			
			
			/*
			 * "tester" 버튼(btn28)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn28Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn28 = e.control;
				console.log(app.lookup("btn30").getActualRect());
			}
			
			
			/*
			 * "Button" 버튼(btn31)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn31Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn31 = e.control;
				
				var q = {};
				var a = "";
				
				for(var i = 1 ; i <= 900 ; i++) {
					var res = 'app.lookup("sub'+i+'").send();\n'
					a += res;
				}
				
				console.log(a);
			//	q["aa"] = a;
			//	
			//	console.log(JSON.stringify(q));
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"sortCondition": "column1 desc",
				"columns": [
					{"name": "A.B"},
					{
						"name": "C.D",
						"dataType": "number",
						"displayOnly": false
					},
					{
						"name": "column1",
						"dataType": "number"
					}
				],
				"rows": [
					{"A.B": "A.B1", "C.D": "1", "column1": "1"},
					{"A.B": "A.B2", "C.D": "2", "column1": "2"},
					{"A.B": "A.B3", "C.D": "3", "column1": "3"},
					{"A.B": "A.B4", "C.D": "4", "column1": "4"},
					{"A.B": "A.B5", "C.D": "5", "column1": "5"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "AA_BB"},
					{"name": "AAA__BBB"}
				],
				"rows": [
					{"AA_BB": "AA_BB1", "AAA__BBB": "AAA__BBB1"},
					{"AA_BB": "AA_BB2", "AAA__BBB": "AAA__BBB2"},
					{"AA_BB": "AA_BB3", "AAA__BBB": "AAA__BBB3"}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{"name": "column6"}
				]
			});
			if(typeof onDm1Load == "function") {
				dataMap_1.addEventListener("load", onDm1Load);
			}
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dm2");
			dataMap_2.parseData({
				"columns" : [
					{"name": "Q.W"},
					{"name": "E.R"}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dm3");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "column1",
						"dataType": "number",
						"defaultValue": "1"
					},
					{
						"name": "column2",
						"dataType": "number",
						"defaultValue": "0"
					},
					{
						"name": "column3",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "getChamberWaferName(self)"
					},
					{
						"name": "column4",
						"defaultValue": "true"
					},
					{
						"name": "column5",
						"dataType": "string",
						"defaultValue": "false"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "/cisweb/upload.do";
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "20px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "20px",
				"left": "252px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Button";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "92px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var fileInput_1 = new cpr.controls.FileInput("fi1");
			if(typeof onFi1ValueChange == "function") {
				fileInput_1.addEventListener("value-change", onFi1ValueChange);
			}
			container.addChild(fileInput_1, {
				"top": "62px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.value = "Button";
			if(typeof onBtn5Click == "function") {
				button_5.addEventListener("click", onBtn5Click);
			}
			container.addChild(button_5, {
				"top": "62px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_6 = new cpr.controls.Button("btn8");
			button_6.value = "Button";
			if(typeof onBtn8Click == "function") {
				button_6.addEventListener("click", onBtn8Click);
			}
			container.addChild(button_6, {
				"top": "161px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_7 = new cpr.controls.Button("btn9");
			button_7.value = "Button";
			container.addChild(button_7, {
				"top": "180px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "A.B";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "A.B";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "C.D";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "C.D";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "CQ";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "A.B";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "C.D";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						}
					]
				},
				"footer": {
					"rows": [
						{"height": "20px"},
						{"height": "20px"}
					],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.expr = "getSum(Number(\"C.D\"))";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.expr = "getSum(getValue(\"C.D\"))";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.expr = "getSum(\"CQ\")";
							}
						},
						{
							"constraint": {"rowIndex": 1, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 1, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 1, "colIndex": 2},
							"configurator": function(cell){
								cell.expr = "round(getAvg(getValue(\"C.D\")))";
							}
						},
						{
							"constraint": {"rowIndex": 1, "colIndex": 3},
							"configurator": function(cell){
								cell.expr = "round(getAvg(\"CQ\"))";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "68px",
				"left": "229px",
				"width": "477px",
				"height": "205px"
			});
			
			var button_8 = new cpr.controls.Button("btn6");
			button_8.value = "Button";
			if(typeof onBtn6Click2 == "function") {
				button_8.addEventListener("click", onBtn6Click2);
			}
			container.addChild(button_8, {
				"top": "122px",
				"left": "20px",
				"width": "39px",
				"height": "29px"
			});
			
			var button_9 = new cpr.controls.Button("btn7");
			button_9.value = "Button";
			if(typeof onBtn7Click2 == "function") {
				button_9.addEventListener("click", onBtn7Click2);
			}
			container.addChild(button_9, {
				"top": "293px",
				"left": "240px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_10 = new cpr.controls.Button("btn10");
			button_10.value = "Button";
			if(typeof onBtn10Click == "function") {
				button_10.addEventListener("click", onBtn10Click);
			}
			container.addChild(button_10, {
				"top": "299px",
				"left": "362px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_11 = new cpr.controls.Button("btn11");
			button_11.value = "Button";
			if(typeof onBtn11Click == "function") {
				button_11.addEventListener("click", onBtn11Click);
			}
			container.addChild(button_11, {
				"top": "329px",
				"left": "240px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_12 = new cpr.controls.Button("btn12");
			button_12.value = "Button";
			if(typeof onBtn12Click == "function") {
				button_12.addEventListener("click", onBtn12Click);
			}
			container.addChild(button_12, {
				"top": "394px",
				"left": "333px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_13 = new cpr.controls.Button("btn13");
			button_13.bind("visible").toExpression("#dm3.getValue(\"column1\") == 0 ? false : true");
			button_13.bind("value").toDataMap(app.lookup("dm3"), "column3");
			container.addChild(button_13, {
				"top": "299px",
				"left": "547px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_14 = new cpr.controls.Button("btn14");
			button_14.value = "Button";
			button_14.bind("visible").toExpression("#dm3.getValue(\"column2\") == 0 ? false : true");
			container.addChild(button_14, {
				"top": "329px",
				"left": "547px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "Output";
			output_1.userAttr({"isHan": "Y"});
			output_1.style.bindClass().toExpression("\"tarCol\" + #dm3.getValue(\"column1\")");
			container.addChild(output_1, {
				"top": "111px",
				"left": "736px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_2 = new cpr.controls.Output("opt2");
			output_2.value = "Output";
			output_2.style.bindClass().toExpression("\"tarCol\" + #dm3.getValue(\"column2\")");
			container.addChild(output_2, {
				"top": "141px",
				"left": "736px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_15 = new cpr.controls.Button("btn15");
			button_15.bind("visible").toDataMap(app.lookup("dm3"), "column1");
			container.addChild(button_15, {
				"top": "375px",
				"left": "485px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_16 = new cpr.controls.Button("btn16");
			button_16.value = "Button";
			button_16.bind("visible").toDataMap(app.lookup("dm3"), "column2");
			container.addChild(button_16, {
				"top": "413px",
				"left": "493px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_17 = new cpr.controls.Button("btn17");
			button_17.value = "Button";
			button_17.bind("visible").toExpression("#dm3.geValue(\"column4\") == \"true\" ? true : false");
			container.addChild(button_17, {
				"top": "435px",
				"left": "493px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_18 = new cpr.controls.Button("btn18");
			button_18.value = "Button";
			button_18.bind("visible").toDataMap(app.lookup("dm3"), "column5");
			if(typeof onBtn18Click == "function") {
				button_18.addEventListener("click", onBtn18Click);
			}
			container.addChild(button_18, {
				"top": "465px",
				"left": "493px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_3 = new cpr.controls.Output("opt3");
			output_3.bind("value").toExpression("Boolean(#dm3.getValue(\"column1\"))");
			container.addChild(output_3, {
				"top": "253px",
				"left": "736px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_4 = new cpr.controls.Output("opt4");
			output_4.bind("value").toExpression("Boolean(#dm3.getValue(\"column2\"))");
			container.addChild(output_4, {
				"top": "272px",
				"left": "736px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_5 = new cpr.controls.Output("opt5");
			output_5.bind("value").toExpression("Boolean(#dm3.getValue(\"column4\"))");
			container.addChild(output_5, {
				"top": "293px",
				"left": "736px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_6 = new cpr.controls.Output("opt6");
			output_6.bind("value").toExpression("Boolean(#dm3.getValue(\"column5\"))");
			container.addChild(output_6, {
				"top": "329px",
				"left": "736px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_19 = new cpr.controls.Button("btn19");
			button_19.value = "Button";
			if(typeof onBtn19Click == "function") {
				button_19.addEventListener("click", onBtn19Click);
			}
			container.addChild(button_19, {
				"top": "413px",
				"left": "141px",
				"width": "100px",
				"height": "20px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var button_20 = new cpr.controls.Button("btn20");
				button_20.bind("value").toExpression("Boolean()");
				container.addChild(button_20, {
					"width": "100px",
					"height": "20px"
				});
				var button_21 = new cpr.controls.Button("btn21");
				button_21.bind("value").toExpression("Boolean(undefined)");
				container.addChild(button_21, {
					"width": "100px",
					"height": "20px"
				});
				var button_22 = new cpr.controls.Button("btn22");
				button_22.bind("value").toExpression("Boolean(null)");
				container.addChild(button_22, {
					"width": "100px",
					"height": "20px"
				});
				var button_23 = new cpr.controls.Button("btn23");
				button_23.value = "Button";
				container.addChild(button_23, {
					"width": "100px",
					"height": "20px"
				});
				var button_24 = new cpr.controls.Button("btn24");
				button_24.value = "Button";
				container.addChild(button_24, {
					"width": "100px",
					"height": "20px"
				});
				var button_25 = new cpr.controls.Button("btn25");
				button_25.value = "Button";
				container.addChild(button_25, {
					"width": "100px",
					"height": "20px"
				});
				var button_26 = new cpr.controls.Button("btn26");
				button_26.value = "Button";
				container.addChild(button_26, {
					"width": "100px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "359px",
				"left": "622px",
				"width": "245px",
				"height": "209px"
			});
			
			var button_27 = new cpr.controls.Button("btn27");
			button_27.value = "Button";
			if(typeof onBtn27Click == "function") {
				button_27.addEventListener("click", onBtn27Click);
			}
			container.addChild(button_27, {
				"top": "465px",
				"left": "141px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_28 = new cpr.controls.Button("btn28");
			button_28.value = "tester";
			if(typeof onBtn28Click == "function") {
				button_28.addEventListener("click", onBtn28Click);
			}
			container.addChild(button_28, {
				"top": "32px",
				"left": "774px",
				"width": "128px",
				"height": "50px"
			});
			
			var button_29 = new cpr.controls.Button("btn29");
			button_29.value = "Button";
			if(typeof onBtn29Click == "function") {
				button_29.addEventListener("click", onBtn29Click);
			}
			container.addChild(button_29, {
				"top": "253px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_30 = new cpr.controls.Button("btn30");
			button_30.value = "Button";
			container.addChild(button_30, {
				"top": "1197px",
				"left": "547px",
				"width": "200px",
				"height": "51px"
			});
			
			var button_31 = new cpr.controls.Button("btn31");
			button_31.value = "Button";
			if(typeof onBtn31Click == "function") {
				button_31.addEventListener("click", onBtn31Click);
			}
			container.addChild(button_31, {
				"top": "719px",
				"left": "169px",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
