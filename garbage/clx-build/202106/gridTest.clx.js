/*
 * App URI: 202106/gridTest
 * Source Location: 202106/gridTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202106/gridTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				app.lookup("sms1").send();
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				var a = {};
				
				a["하하하"] = {
					"A" : "B",
					"C" : "D"
				}
				
				console.log(a);
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				var a = ["a","b","c","e"];
				var b = ["a","b","c","d"];
				var d = [];
				
				b.forEach(function(each){
					
					if(a.indexOf(each) != -1) {
						a.splice(a.indexOf(each),1);
					} else {
						d.push(each);
					}
				});
				
				if(a.length > 0) {
					console.log(a);
				}
				if(d.length > 0) {
					console.log(d);
				}
				
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				
				var btn = app.lookup("btn4");
				
				var a = app.getContainer().updateConstraint(btn, {
					"left" : "700px"
				});
				
				
				var ani = new cpr.animation.Animator(0.2,cpr.animation.TimingFunction.LINEAR);
				
				ani.addTask(function(p){
					
					app.getContainer().updateConstraint(btn, {
					"left" : "700px"
					});
				});
				
				ani.run().then(function(input){
					
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			xYLayout_1.animationDuration = 0.5;
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var mDIFolder_1 = new cpr.controls.MDIFolder("mdi1");
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "다양한 그리드 기능 확인";
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
				cpr.core.App.load("202106/GridFuncs", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				tabItem_1.content = embeddedApp_1;
				return tabItem_1;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_1);
			
			var tabItem_2 = (function(tabFolder){
				var tabItem_2 = new cpr.controls.TabItem();
				tabItem_2.text = "메인";
				var embeddedApp_2 = new cpr.controls.EmbeddedApp("ea2");
				cpr.core.App.load("202106/Main", function(app) {
					if(app){
						embeddedApp_2.app = app;
					}
				});
				tabItem_2.content = embeddedApp_2;
				return tabItem_2;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_2);
			
			var tabItem_3 = (function(tabFolder){
				var tabItem_3 = new cpr.controls.TabItem();
				tabItem_3.text = "전송요구 내역 확인";
				var embeddedApp_3 = new cpr.controls.EmbeddedApp("ea3");
				cpr.core.App.load("202106/P00004", function(app) {
					if(app){
						embeddedApp_3.app = app;
					}
				});
				tabItem_3.content = embeddedApp_3;
				return tabItem_3;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_3);
			
			var tabItem_4 = (function(tabFolder){
				var tabItem_4 = new cpr.controls.TabItem();
				tabItem_4.text = "Untitled.clx";
				var embeddedApp_4 = new cpr.controls.EmbeddedApp("ea4");
				cpr.core.App.load("202106/Untitled", function(app) {
					if(app){
						embeddedApp_4.app = app;
					}
				});
				tabItem_4.content = embeddedApp_4;
				return tabItem_4;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_4);
			mDIFolder_1.setSelectedTabItem(tabItem_4);
			container.addChild(mDIFolder_1, {
				"top": "34px",
				"right": "20px",
				"left": "20px",
				"height": "491px"
			});
			if(typeof onBodyTransitionend == "function"){
				app.getContainer().addEventListener("transitionend", onBodyTransitionend);
			}
			if(typeof onBodyBeforeDraw == "function"){
				app.getContainer().addEventListener("before-draw", onBodyBeforeDraw);
			}
		}
	});
	app.title = "gridTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
