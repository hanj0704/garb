/*
 * App URI: 202106/ttest
 * Source Location: 202106/ttest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202106/ttest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * ttest.js
			 * Created at 2021. 6. 22. 오후 2:35:03.
			 *
			 * @author HANS
			 ************************************************/
			var a = 10;
			cpr.events.EventBus.INSTANCE.addFilter("click", function(e){
				var control = e.control;
				
				 a = 10;	
			});
			
			var b ; 
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
			
			//	b =  setInterval(function(){
			//		
			//		a = a -1;
			//		console.log(a)
			//		if(a <= 0) {
			//			
			//			alert("아니 너 멈춰있는데?");
			//		}	
			//	}, 1000)	
			
			//	setInterval(function(){
			//		
			//		console.log(document.hidden)
			//	},1000)
			}
			/*
			 * "202105/dragTest" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
			//	var a =cpr.core.Platform.INSTANCE.getAllRunningAppInstances();
			//	
			//	a.forEach(function(each){
			//		console.log(each);
			//	});
				console.log("기모띠");
			}
			
				/**
				 * 
				 * @param {Object} obj
				 */
				function copyObject(obj) {
					
					if(obj == null) {
						return obj;
					}
				
					var copyedObject = obj.constructor();
					
			//		for(var key in obj) {
			//			if(obj.hasOwnProperty(key)) {
			//				if(key != "_id" && key != "_uuid"){
			//					console.log(key);
			//					copyedObject[key] = obj[key];
			//				}
			//			}
			//		}
					return copyedObject;
					
				}
			
			/*
			 * "checker" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				
				var aq = app.lookup("btn6");
				
				var q;
			//	q = aq.constructor;
				var aqq = copyObject(aq);
			
				app.getContainer().addChild(aqq, {
					"top" : "100px",
					"left" : "100px",
					"width" : "100px",
					"height": "100px"
				});	
			}
			
			
			/*
			 * 트리에서 selection-change 이벤트 발생 시 호출.
			 * 선택된 Item 값이 저장된 후에 발생하는 이벤트.
			 */
			function onTre1SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Tree
				 */
				var tre1 = e.control;
				
				var ite = tre1.getSelectionFirst();
			//	cpr.core.App.load(ite.value, function(loadedApp){
			//		
			//		ea.app = loadedApp;
			//		if(ite.row.getValue("status")) {
			//			
			//			ea.ready(function(aps){
			//				/** @type cpr.controls.TabFolder */
			//				var ta = aps.getEmbeddedAppInstance().getContainer().getChildren().find(function(ele){
			//					if(ele instanceof cpr.controls.TabFolder){
			//						return ele;
			//					}
			//				});
			//				
			//				if(ta) {
			//					
			//					ta.setSelectedTabItem(ta.getTabItems()[ite.row.getValue("status")]);
			//				}
			//			})
			//		}
			//	});
				
				var mdi = app.lookup("mdi1");
				
				if(mdi.findItemWithAppID(ite.value)) {
					
					mdi.setSelectedTabItem(mdi.findItemWithAppID(ite.value));
					/** @type cpr.controls.EmbeddedApp */
					var sel = mdi.findItemWithAppID(ite.value).content;
					
					sel.getEmbeddedAppInstance().callAppMethod("startInte");
				} else {
					
					mdi.addItemWithApp(ite.value);
				}
			}
			
			
			/*
			 * 트리에서 before-selection-change 이벤트 발생 시 호출.
			 * 선택된 Item 값이 저장되기 전에 발생하는 이벤트. 다음 이벤트로 selection-change가 발생합니다.
			 */
			function onTre1BeforeSelectionChange( /* cpr.events.CSelectionEvent */ e) {
				/** 
				 * @type cpr.controls.Tree
				 */
				var tre1 = e.control;
				
				var md =  app.lookup("mdi1");
				if(md.getSelectedTabItem()){
				/** @type cpr.controls.EmbeddedApp */		
				var selItem = md.getSelectedTabItem().content;
				
					var aps = selItem.getEmbeddedAppInstance();
					
					if(aps.hasAppMethod("clear")) {
						aps.callAppMethod("clear");
					}	
				}
			
			//	console.log(e.newSelection[0]);
			//			console.log(e.oldSelection[0]);
			//	var ea = app.lookup("ea1");
			//	if (ea.app) {
			//		
			//		/** @type cpr.controls.TabFolder */
			//		var tabs = ea.getEmbeddedAppInstance().getContainer().getChildren().find(function(eve) {
			//			
			//			if (eve instanceof cpr.controls.TabFolder) {
			//				return eve;
			//			}
			//		});
			//		if (tabs) {
			//			
			//			var idx = tabs.getSelectedTabItem().itemIndex;
			//			e.oldSelection[0].row.setValue("status", idx);
			//			console.log(idx);
			//		}
			//	}
			}
			
			
			
			/*
			 * "Button" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn8 = e.control;
				
				
				app.lookup("ds2").setValue(0, "column1","zz");
				app.getContainer().redraw();
			}
			
			
			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onIpb1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var ipb1 = e.control;
				
				console.log("바뀜~");
			}
			
			
			/*
			 * "Button" 버튼(btn9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn9Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn9 = e.control;
				
				app.lookup("ipb1").putValue("gkgkgkg");
			}
			
			
			/*
			 * MDI 폴더에서 before-selection-change 이벤트 발생 시 호출.
			 * Tab Item을 선택하기 전 발생하는 이벤트. 다음 이벤트로 select 이벤트를 발생합니다.
			 */
			function onMdi1BeforeSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.MDIFolder
				 */
				var mdi1 = e.control;
				
				console.log("before-selection-change");
				
				console.log(e.oldSelection);	
			}
			
			var mnTMRotate = 180;
			/*
			 * "Button" 버튼(btn10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn10Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn10 = e.control;
				var vnRotateStandard = 90;
				var vnTMRotate = 20;
				if(vnTMRotate != mnTMRotate) {
					
					
						var vnAzimuth = parseInt(vnTMRotate/vnRotateStandard);
						var vnRemain = vnTMRotate % vnRotateStandard;
						
						
						if (vnTMRotate > mnTMRotate) {
							if (vnRemain != 0) {
								
								vnTMRotate = vnRotateStandard * (vnAzimuth + 1);
							}
						} else if (vnTMRotate < mnTMRotate) {
							if(vnRemain != 0 ){
								vnTMRotate = vnRotateStandard * (vnAzimuth);
								
							}
						}
					}
						console.log(vnTMRotate);
			}
			
			
			/*
			 * "Button" 버튼(btn11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn11Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn11 = e.control;
				
				console.log(app.id);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{
						"name": "status",
						"dataType": "number"
					}
				],
				"rows": [
					{"label": "1", "value": "202106/testF/Untitled", "status": ""},
					{"label": "2", "value": "202106/testF/Untitled2", "status": ""},
					{"label": "3", "value": "202106/testF/Untitled3", "status": ""},
					{"label": "4", "value": "202106/testF/Untitled4", "status": ""}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21"},
					{"column1": "column12", "column2": "column22"}
				]
			});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_1);
			(function(container){
				var button_1 = new cpr.controls.Button("btn1");
				button_1.value = "202106/testF/Untitled";
				if(typeof onBtn1Click == "function") {
					button_1.addEventListener("click", onBtn1Click);
				}
				container.addChild(button_1, {
					"width": "100px",
					"height": "20px"
				});
				var button_2 = new cpr.controls.Button("btn2");
				button_2.value = "202106/testF/Untitled2";
				if(typeof onBtn1Click == "function") {
					button_2.addEventListener("click", onBtn1Click);
				}
				container.addChild(button_2, {
					"width": "100px",
					"height": "20px"
				});
				var button_3 = new cpr.controls.Button("btn3");
				button_3.value = "202106/testF/Untitled3";
				if(typeof onBtn1Click == "function") {
					button_3.addEventListener("click", onBtn1Click);
				}
				container.addChild(button_3, {
					"width": "100px",
					"height": "20px"
				});
				var button_4 = new cpr.controls.Button("btn4");
				button_4.value = "202106/testF/Untitled4";
				if(typeof onBtn1Click == "function") {
					button_4.addEventListener("click", onBtn1Click);
				}
				container.addChild(button_4, {
					"autoSize": "none",
					"width": "160px",
					"height": "20px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "9px",
				"left": "396px",
				"width": "160px",
				"height": "101px"
			});
			
			var button_5 = new cpr.controls.Button("btn6");
			button_5.value = "Button";
			if(typeof onBtn6Click == "function") {
				button_5.addEventListener("click", onBtn6Click);
			}
			container.addChild(button_5, {
				"top": "39px",
				"left": "20px",
				"width": "171px",
				"height": "23px"
			});
			
			var button_6 = new cpr.controls.Button("btn5");
			button_6.value = "checker";
			if(typeof onBtn5Click == "function") {
				button_6.addEventListener("click", onBtn5Click);
			}
			container.addChild(button_6, {
				"top": "72px",
				"left": "20px",
				"width": "171px",
				"height": "23px"
			});
			
			var tree_1 = new cpr.controls.Tree("tre1");
			(function(tree_1){
				tree_1.setItemSet(app.lookup("ds1"), {
					"label": "label",
					"value": "value"
				});
			})(tree_1);
			if(typeof onTre1SelectionChange == "function") {
				tree_1.addEventListener("selection-change", onTre1SelectionChange);
			}
			if(typeof onTre1BeforeSelectionChange == "function") {
				tree_1.addEventListener("before-selection-change", onTre1BeforeSelectionChange);
			}
			container.addChild(tree_1, {
				"top": "120px",
				"left": "20px",
				"width": "171px",
				"height": "409px"
			});
			
			var button_7 = new cpr.controls.Button("btn7");
			button_7.bind("value").toDataSet(app.lookup("ds2"), "column1", 0);
			container.addChild(button_7, {
				"top": "554px",
				"left": "201px",
				"width": "253px",
				"height": "52px"
			});
			
			var button_8 = new cpr.controls.Button("btn8");
			button_8.value = "Button";
			if(typeof onBtn8Click == "function") {
				button_8.addEventListener("click", onBtn8Click);
			}
			container.addChild(button_8, {
				"top": "554px",
				"left": "464px",
				"width": "100px",
				"height": "20px"
			});
			
			var mDIFolder_1 = new cpr.controls.MDIFolder("mdi1");
			mDIFolder_1.hideHeader = true;
			if(typeof onMdi1BeforeSelectionChange == "function") {
				mDIFolder_1.addEventListener("before-selection-change", onMdi1BeforeSelectionChange);
			}
			container.addChild(mDIFolder_1, {
				"top": "120px",
				"left": "201px",
				"width": "803px",
				"height": "409px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			if(typeof onIpb1ValueChange == "function") {
				inputBox_1.addEventListener("value-change", onIpb1ValueChange);
			}
			container.addChild(inputBox_1, {
				"top": "72px",
				"left": "721px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_9 = new cpr.controls.Button("btn9");
			button_9.value = "Button";
			if(typeof onBtn9Click == "function") {
				button_9.addEventListener("click", onBtn9Click);
			}
			container.addChild(button_9, {
				"top": "53px",
				"left": "721px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_10 = new cpr.controls.Button("btn10");
			button_10.value = "Button";
			if(typeof onBtn10Click == "function") {
				button_10.addEventListener("click", onBtn10Click);
			}
			container.addChild(button_10, {
				"top": "53px",
				"left": "219px",
				"width": "67px",
				"height": "39px"
			});
			
			var button_11 = new cpr.controls.Button("btn11");
			button_11.value = "Button";
			if(typeof onBtn11Click == "function") {
				button_11.addEventListener("click", onBtn11Click);
			}
			container.addChild(button_11, {
				"top": "53px",
				"left": "294px",
				"width": "67px",
				"height": "39px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "ttest";
	cpr.core.Platform.INSTANCE.register(app);
})();
