/*
 * App URI: 202106/testest
 * Source Location: 202106/testest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202106/testest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * testest.js
			 * Created at 2021. 6. 24. 오후 3:28:04.
			 *
			 * @author HANS
			 ************************************************/
			cpr.events.EventBus.INSTANCE.addFilter("value-change", function(e){
				var control = e.control;
				
				if(control instanceof cpr.controls.InputBox) {
					
					if(control.userAttr("isCookieStarted") == "Y") {
						setCookie(app.app.title+"_"+control.id, control.value,365);
					}
				}
			});
			cpr.events.EventBus.INSTANCE.addFilter("load", function(e){
				var control = e.control;
				
				if(control instanceof cpr.core.AppInstance) {
					
					if(control.app.id.indexOf("udc") == -1) {
							/** @type cpr.controls.InputBox[]*/
						var cookieBoosters = control.getContainer().getAllRecursiveChildren().filter(function(each){
							return each.userAttr("isCookieStarted") == "Y";
						});
						
						cookieBoosters.forEach(function(each){
							var str = getCookie2(control.app.title+"_"+each.id);
							if(str != undefined && str != null && str != "null") {
								
								each.putValue(getCookie2(control.app.title+"_"+each.id));
							}
						});
					}
				}
			});
			
			
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				
				var str = app.lookup("ds1").info;
				console.log(str);
				
				app.lookup("dm1").setValue("column1", str);
				app.lookup("dm1").setValue("column2", b);
				app.lookup("dm1").setValue("column3", btn1.userAttr("sql"));
				
				var a = {
					"aabc" : app.lookup("ds1").info.toString(),
					"bbb" : b,
					"C" : btn1.userAttr("sql")
				};
				
				console.log(JSON.stringify(a));
				console.log(app.lookup("ds1").info.toString());
				app.lookup("sms1").send();
			}
			
			///**
			// * 쿠키를 설정합니다.
			// * 
			// * @param {String} psName
			// * @param {Strubg} psValue
			// * @param {Number} pnExpireDate
			// */
			//function setCookie(psName, psValue, pnExpireDate) {
			//	var voToday = new Date();
			//	voToday.setDate(voToday.getDate() + parseInt(pnExpireDate));
			//	document.cookie = psName + "=" + escape(psValue) + ";path=/;expires=" + voToday.toGMTString() + ";";
			//}
			//
			//
			///**
			// * 쿠키를 가져옵니다.
			// * @param {String} psName
			// */
			//function getCookie(psName) {
			//	var vsCookie = document.cookie + ";";
			//	
			//	var vaItems = vsCookie.split("");
			//	var vaItemInfo = null;
			//	vaItems.forEach(function(each){
			//		vaItemInfo = each.split("=");
			//		if (psName == vaItemInfo[0].trim()){
			//			return unescape(vaItemInfo[1]);
			//		}
			//	});
			//}
			// 쿠키 생성 함수
			function setCookie(cName, cValue, cDay){
			var expire = new Date();
			expire.setDate(expire.getDate() + cDay);
			cookies = cName + '=' + escape(cValue) + '; path=/ '; // 한글 깨짐을 막기위해 escape(cValue)를 합니다.
			if(typeof cDay != 'undefined') cookies += ';expires=' + expire.toGMTString() + ';';
			document.cookie = cookies;
			}
			
			
			
			// 쿠키 가져오기 함수
			function getCookie2(cName) {
				cName = cName + '=';
				var cookieData = document.cookie;
				var start = cookieData.indexOf(cName);
				var cValue = '';
				if (start != -1) {
					start += cName.length;
					var end = cookieData.indexOf(';', start);
					if (end == -1) end = cookieData.length;
					cValue = cookieData.substring(start, end);
				}
				return unescape(cValue);
			}
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				setCookie("hanjin", "abbb", 365);
			}
			
			
			/*
			 * "getCookie" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				var han = getCookie2("hanjin");
				console.log(han);
				
				console.log(getCookie2("testest_ipb1"))
			}
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				app.lookup("mdi1").addItemWithApp("202106/ttest");
			}
			
			
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				
				var a = 135;
				
			//	console.log(parseInt(a/90));
			//	console.log(a%90);
				
			//	console.log(app.app.title);
			
				var a = cpr.core.Platform.INSTANCE.getAllRunningAppInstances();
				console.log(a);
			}
			
			var angle = 0;
			var mbe = 0;
			/*
			 * "Button" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				var vcGrpRbt = app.lookup("grp1");
				var nbe = app.lookup("nbe1").numberValue;
				
				var vnAzimuth = parseInt(nbe/90);
				var vnRemain = nbe%90;
			//	if(vnAzimuth == 4) {
			//		vnAzimuth = 0;
			//	}
				console.log(angle);
				console.log(vnAzimuth);
				angle = angle%360;
				console.log(vnAzimuth-Math.abs(angle/90));
				switch(vnAzimuth-Math.abs(angle/90)){
					case 1 :
					if(angle ==90) {
						angle += 90;
					} else {
						
						angle -= 90;
					}
						break;
					case 2 :
					angle -= 180;
						break;
					case 3 : 
					angle += 90;
						break;
					case -1 :
					angle += 90;
						break;
					case -2 :
					angle += 180;
						break;
					case -3 :
					if(nbe ==360){
						
						angle += 90;
					} else{
						
						angle -= 90;
					}
						break;
					default :
						break;
				}
			//	if(mbe < 0) {
			//		console.log("아 띠용~");
			//		nbe = (360-nbe) * -1;
			//	} else {
			//		
			//	if(nbe > 270) {
			//		console.log("ㅋㅅㅋ");
			//		if(nbe > mbe) {
			//			console.log("ㅋㅋ");
			//			nbe = (360-nbe)*-1;
			//		} else {
			////			nbe = (360-nbe)*-1;
			//			console.log("타긴하냐?");
			//		}
			//		
			//	}
			//	}
			//	mbe =  nbe;
			//	if(nbe == 360) {
			//		mbe = -1;
			//	}
			console.log(angle);
				vcGrpRbt.style.animateTo({
						"transform" : "rotate(" + (angle) + "deg)"
					}, 1, cpr.animation.TimingFunction.LINEAR);
			}
			
			
			
			/*
			 * 넘버 에디터에서 value-change 이벤트 발생 시 호출.
			 * NumberEditor의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onNbe1ValueChange(/* cpr.events.CValueChangeEvent */ e){
				/** 
				 * @type cpr.controls.NumberEditor
				 */
				var nbe1 = e.control;
				
			//	app.lookup("btn7").click();
			}
			
			
			/*
			 * MDI 폴더에서 selection-change 이벤트 발생 시 호출.
			 * Tab Item을 선택한 후에 발생하는 이벤트.
			 */
			function onMdi1SelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.MDIFolder
				 */
				var mdi1 = e.control;
			
			}
			
			
			/*
			 * MDI 폴더에서 content-load 이벤트 발생 시 호출.
			 * TabItem의 Content가 그려지고 브라우저에 표현되기 직전에 호출됨.
			 */
			function onMdi1ContentLoad(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.MDIFolder
				 */
				var mdi1 = e.control;
				
			}
			
			
			/*
			 * 루트 컨테이너에서 before-unload 이벤트 발생 시 호출.
			 * 앱이 언로드되기 전에 발생하는 이벤트 입니다. 취소할 수 있습니다.
			 */
			function onBodyBeforeUnload(/* cpr.events.CEvent */ e){
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({"info": "SELECT DETAIL_CODE_ID ,DETAIL_CODE_NM\r\nFROM DETAIL_CODE \r\nWHERE UPPER_CODE_ID = 'T001' AND\r\nDETAIL_CODE_ID <= 200"});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "test/test.do";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			button_1.userAttr({"sql": "SELECT DETAIL_CODE_ID, DETAIL_CODE_NM FROM DETAIL_CODE WHERE UPPER_CODE_ID = \"T001\" AND DETAIL_CODE_ID <= 200"});
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "setCookie";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "50px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			inputBox_1.userAttr({"isCookieStarted": "Y"});
			container.addChild(inputBox_1, {
				"top": "50px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("ipb2");
			inputBox_2.userAttr({"isCookieStarted": "Y"});
			container.addChild(inputBox_2, {
				"top": "90px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_3 = new cpr.controls.InputBox("ipb3");
			inputBox_3.userAttr({"isCookieStarted": "Y"});
			container.addChild(inputBox_3, {
				"top": "144px",
				"left": "148px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_4 = new cpr.controls.InputBox("ipb4");
			inputBox_4.userAttr({"isCookieStarted": "Y"});
			container.addChild(inputBox_4, {
				"top": "196px",
				"left": "229px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "getCookie";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "90px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "20px",
				"left": "339px",
				"width": "400px",
				"height": "200px"
			});
			
			var mDIFolder_1 = new cpr.controls.MDIFolder("mdi1");
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "전송요구 내역 확인";
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
				cpr.core.App.load("202106/P00004", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				tabItem_1.content = embeddedApp_1;
				return tabItem_1;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_1);
			
			var tabItem_2 = (function(tabFolder){
				var tabItem_2 = new cpr.controls.TabItem();
				tabItem_2.text = "gridTest.clx";
				var embeddedApp_2 = new cpr.controls.EmbeddedApp("ea2");
				cpr.core.App.load("202106/gridTest", function(app) {
					if(app){
						embeddedApp_2.app = app;
					}
				});
				tabItem_2.content = embeddedApp_2;
				return tabItem_2;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_2);
			
			var tabItem_3 = (function(tabFolder){
				var tabItem_3 = new cpr.controls.TabItem();
				tabItem_3.text = "inputTest.clx";
				var embeddedApp_3 = new cpr.controls.EmbeddedApp("ea3");
				cpr.core.App.load("202106/inputTest", function(app) {
					if(app){
						embeddedApp_3.app = app;
					}
				});
				tabItem_3.content = embeddedApp_3;
				return tabItem_3;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_3);
			
			var tabItem_4 = (function(tabFolder){
				var tabItem_4 = new cpr.controls.TabItem();
				tabItem_4.text = "tester.clx";
				var embeddedApp_4 = new cpr.controls.EmbeddedApp("ea4");
				cpr.core.App.load("202106/tester", function(app) {
					if(app){
						embeddedApp_4.app = app;
					}
				});
				tabItem_4.content = embeddedApp_4;
				return tabItem_4;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_4);
			mDIFolder_1.setSelectedTabItem(tabItem_4);
			if(typeof onMdi1ContentInit == "function") {
				mDIFolder_1.addEventListener("content-init", onMdi1ContentInit);
			}
			if(typeof onMdi1SelectionChange == "function") {
				mDIFolder_1.addEventListener("selection-change", onMdi1SelectionChange);
			}
			if(typeof onMdi1ContentLoad == "function") {
				mDIFolder_1.addEventListener("content-load", onMdi1ContentLoad);
			}
			container.addChild(mDIFolder_1, {
				"top": "226px",
				"left": "32px",
				"width": "692px",
				"height": "301px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Button";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "196px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.value = "Button";
			if(typeof onBtn5Click == "function") {
				button_5.addEventListener("click", onBtn5Click);
			}
			container.addChild(button_5, {
				"top": "215px",
				"left": "780px",
				"width": "164px",
				"height": "18px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_6 = new cpr.controls.Button("btn6");
				button_6.value = "Button";
				container.addChild(button_6, {
					"top": "2px",
					"left": "70px",
					"width": "58px",
					"height": "135px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "556px",
				"left": "229px",
				"width": "199px",
				"height": "157px"
			});
			
			var button_7 = new cpr.controls.Button("btn7");
			button_7.value = "Button";
			if(typeof onBtn7Click == "function") {
				button_7.addEventListener("click", onBtn7Click);
			}
			container.addChild(button_7, {
				"top": "604px",
				"left": "468px",
				"width": "78px",
				"height": "39px"
			});
			
			var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
			if(typeof onNbe1ValueChange == "function") {
				numberEditor_1.addEventListener("value-change", onNbe1ValueChange);
			}
			container.addChild(numberEditor_1, {
				"top": "623px",
				"left": "576px",
				"width": "99px",
				"height": "40px"
			});
			
			var userDefinedControl_1 = new udc.cmn.hannn();
			container.addChild(userDefinedControl_1, {
				"top": "232px",
				"left": "738px",
				"width": "300px",
				"height": "300px"
			});
			
			var userDefinedControl_2 = new udc.cmn.hannn();
			container.addChild(userDefinedControl_2, {
				"top": "556px",
				"left": "723px",
				"width": "300px",
				"height": "300px"
			});
			if(typeof onBodyBeforeUnload == "function"){
				app.addEventListener("before-unload", onBodyBeforeUnload);
			}
		}
	});
	app.title = "testest";
	cpr.core.Platform.INSTANCE.register(app);
})();
