/*
 * App URI: 202106/Main
 * Source Location: 202106/Main.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202106/Main", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Main.js
			 * Created at 2020. 4. 17. 오후 3:41:27.
			 *
			 * @author ryu
			 ************************************************/
			clientUUID = cpr.core.Platform.INSTANCE.getParameter("clientUUID");
			
			cpr.events.EventBus.INSTANCE.addFilter("selection-change", function(e){
				var control = e.control;
				if(control instanceof cpr.controls.MDIFolder) {
					console.log("selection-change");
					/** @type cpr.controls.TabItem */
					var voSelection = e.newSelection;
					/** @type cpr.controls.EmbeddedApp */
					var vcSelectContent = voSelection.content;
					if(vcSelectContent == undefined) {
						control.addEventListenerOnce("content-ready", function(ev){
							/** @type cpr.controls.EmbeddedApp */
							var vcEmb = ev.content.content;
							
			//				console.log(remakePageParam(vcEmb.getEmbeddedAppInstance(), "GetIOValue"));
							
						})
					} else {
						if(vcSelectContent.getEmbeddedAppInstance() == undefined) {
							vcSelectContent.ready(function(){
								var voEmbAppIns = vcSelectContent.getEmbeddedAppInstance();
			//					console.log(remakePageParam(voEmbAppIns, "GetIOValue"));
							});
						} else {
							var voEmbAppIns = vcSelectContent.getEmbeddedAppInstance();
			//				console.log(remakePageParam(voEmbAppIns, "GetIOValue"));
						}
					} 
				}
			});
			/************************************************
			 * 공통 모듈 선언
			 ************************************************/
			var util = createCommonUtil();
			
			/************************************************
			 * 전역 변수 선언
			 ************************************************/
			
			var _originalOrder = new cpr.utils.ObjectMap(); // 컨트롤 순서
			
			/************************************************
			 * 사용자 정의 함수
			 ************************************************/
			
			/**
			 * 메인화면의 left메뉴와 상단 메뉴의 enable을 제어합니다.
			 * @param {any} pBool
			 */
			exports.setMainEnabled = function(pBool) {
				
				app.lookup("grpMenuWrap").enabled = pBool;
				app.lookup("grpHeader").enabled = pBool;
			}
			
			exports.setApp = function(psAppId) {
				
				cpr.core.App.load(psAppId, function(loadedApp) {
					
					app.lookup("ea1").app = loadedApp;
					
				});
			}
			
			exports.selectTreeItem = function(psAppId) {
				
				var vcTree = app.lookup("treMenu");
				
				var vcDsMenu = app.lookup("dsMenu");
				
				var voFirstRow = vcDsMenu.findFirstRow("appId =='" + psAppId + "'");
				
				var value = voFirstRow.getValue("value");
				
				vcTree.selectItemByValue(value);
				
			}
			/**
			 * 메뉴를 토글합니다.
			 * @param {cpr.controls.TreeItem} pcItem
			 */
			function toggleMenuItem(pcItem) {
				var vcTreMenu = app.lookup("treMenu");
				
				/* 클릭한 아이템이 최상위 아이템인 경우 모든 아이템 닫기 */
				if (!vcTreMenu.isExpanded(pcItem) && ValueUtil.isNull(pcItem.parentItem)) {
					vcTreMenu.collapseAllItems();
				}
				
				vcTreMenu.toggle(pcItem);
			}
			
			/**
			 * 메뉴를 엽니다.
			 * @param {cpr.controls.Item} pcItem
			 */
			function openMenuItem(pcItem) {
				var vsAppId = pcItem.row.getValue("appId");
				
				if (ValueUtil.isNull(vsAppId)) {
					return;
				}
				
				var vcMdiCn = app.lookup("mdiCn");
				var voAlreadyOpenedItem = vcMdiCn.findItemWithAppID(vsAppId);
				
				if (voAlreadyOpenedItem) {
					vcMdiCn.setSelectedTabItem(voAlreadyOpenedItem);
					return;
				}
				
				var vsMenuLabel = pcItem.label;
				
			}
			
			/************************************************
			 * 컨트롤 이벤트 (앱)
			 ************************************************/
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				
				app.lookup("lblAccTm").value = moment().format("YYYYMMDDHHmmss");
				util.Submit.send(app, "subOnLoad", null, function(pbSuccess) {
					if (pbSuccess) {
						
						/* 메인 파츠 다시 그리기 요청 */
						util.Control.redraw(app, ["grpLogo", "mnuMnMenu", "grpAside", "grpHeader", "mdiCn"]);
					}
				});
			}
			
			/************************************************
			 * 컨트롤 이벤트 (헤더 영역)
			 ************************************************/
			
			/************************************************
			 * 컨트롤 이벤트 (레프트 영역)
			 ************************************************/
			
			/*
			 * 그룹에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onGrpLogoWrapClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Container
				 */
				var grpLogoWrap = e.control;
				
				/* 이벤트 추가 전파 방지 */
				e.stopPropagation();
				
				/* 메인 새로고침 */
				cpr.core.App.load("app/com/main/Main", function(loadedApp) {
					loadedApp.createNewInstance().run();
					app.dispose();
				});
			}
			
			/*
			 * 트리에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onTreMenuItemClick( /* cpr.events.CItemEvent */ e) {
				/** 
				 * @type cpr.controls.Tree
				 */
				var treMenu = e.control;
				
				var vcMenuItem = e.item;
				
				if (ValueUtil.isNull(vcMenuItem)) {
					return;
				}
				
				//	toggleMenuItem(vcMenuItem);
				//	
				//	openMenuItem(vcMenuItem);
				//	
				//	app.lookup("mnuMnMenu").selectItemByValue(vcMenuItem.value);
			}
			/*
			 * 트리에서 selection-change 이벤트 발생 시 호출.
			 * 선택된 Item 값이 저장된 후에 발생하는 이벤트.
			 */
			function onTreMenuSelectionChange( /* cpr.events.CSelectionEvent */ e) {
				/** 
				 * @type cpr.controls.Tree
				 */
				var treMenu = e.control;
				
				var voSelectedTreeItem = e.newSelection[0];
			//	
				var vsAppId = voSelectedTreeItem.row.getValue("appId");
			//	//	if(vsAppId != null){
			//	//		
			//	//		cpr.core.App.load(vsAppId, function(loadedApp){
			//	//			
			//	//			app.lookup("ea1").app = loadedApp;
			//	//		});
			//	//	}
				var vcMdi = app.lookup("mdi1");
				
				if (vcMdi.findItemWithAppID(vsAppId)) {
					
					vcMdi.setSelectedTabItem(vcMdi.findItemWithAppID(vsAppId));
					
					var a = vcMdi.findItemWithAppID(vsAppId);
					var rpp = a.content.getEmbeddedAppInstance();
				} else {
					
					vcMdi.addItemWithApp(vsAppId);
					}
			//		vcMdi.addEventListenerOnce("content-load", function(ev) {
			//			var ctrl = ev.control;
			//			var emb = ev.content.content;
			//			/** @type cpr.core.AppInstance */
			//			var a = emb.getEmbeddedAppInstance();
			//			console.log(a);
			//			/** @type cpr.controls.MDIFolder*/
			//			var mdmd = a.getContainer().getChildren().filter(function(each) {
			//				return each instanceof cpr.controls.MDIFolder;
			//			});
			//			var rpp ;
			//			if (mdmd) {
			//				rpp = remakePageParam(mdmd.getSelectedTabItem().content.getEmbeddedAppInstance(), "GetIOValue")
			//			}else {
			//				
			//				rpp = remakePageParam(a, "GetIOValue");
			//			}
			//			console.log(rpp);
			//		})
			//	}
				
				//	var a = cpr.core.Platform.INSTANCE.getAllRunningAppInstances();
				//	
				//	var b = a.filter(function(each){
				//		if(each.id.indexOf("udc") == -1) {
				//			return each;
				//		}
				//	});
				//	console.log(b);
				//	remakePageParam(poAppInstance, psActionCommand)
			}
			
			/************************************************
			 * 컨트롤 이벤트 (컨텐츠 영역)
			 ************************************************/
			
			/************************************************
			 * 컨트롤 이벤트 (라이트 영역)
			 ************************************************/
			
			/*
			 * "Buzzer Off" 버튼(btnBuzzer)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnBuzzerClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnBuzzer = e.control;
				
				if (btnBuzzer.userAttr("buzzer") == "on") {
					
					btnBuzzer.value = "Buzzer On";
					btnBuzzer.userAttr("buzzer", "off");
					btnBuzzer.icon = "theme/images/icons/volume-x.svg"
				} else {
					btnBuzzer.value = "Buzzer Off";
					btnBuzzer.userAttr("buzzer", "on");
					btnBuzzer.icon = "theme/images/icons/volume-2.svg"
					
				}
			}
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				//	if ( (stompWS == null || !stompWS.connected) ) {
				//		var url = '';
				//		var sock = null ;	
				//		var stomp = null;
				//		var cnt = 0 ; 
				//		var cntMax = 5 ; 
				//		url = '/websocket';
				//		sock = new SockJS(url);	
				//		stomp = Stomp.over(sock);
				//		stompWS = stomp;
				//		stompWS.debug = null;
				//		stompWS.connect({name:"test", id : "test"},function(frame) {
				//			stompWS.subscribe('/ws/MonitorWafers/init', function(rtnJsonStr){
				//
				//			},{id : "test1"});
				//			stompWS = this ;  
				//			return this ;
				//		}, function(frame){
				//		 		// 서버 종료로 disconnect 되는 경우
				//		 		console.log("notConnected!")
				//			 	var timer = setInterval(function(){
				//	//		 		if(true) {
				//			 		if(cnt >= cntMax) {
				//			 		 	clearInterval(timer);
				//			 		} else {
				//				 		cnt++;
				//				 		if (stompWS) {
				//							stompWS.disconnect();
				//						}
				//				 		test();
				//			 		}
				//			 	}, 5000);
				//		 });
				//	} else {
				//		console.log("aaaaaaaaaaaaa")
				//		return stompWS ;
				//	}
			}
			
			/*
			 * 트리에서 before-selection-change 이벤트 발생 시 호출.
			 * 선택된 Item 값이 저장되기 전에 발생하는 이벤트. 다음 이벤트로 selection-change가 발생합니다.
			 */
			function onTreMenuBeforeSelectionChange( /* cpr.events.CSelectionEvent */ e) {
				/** 
				 * @type cpr.controls.Tree
				 */
				var treMenu = e.control;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsMenu");
			dataSet_1.parseData({
				"columns" : [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"},
					{"name": "appId"},
					{"name": "role"},
					{"name": "class"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsMegaMenu");
			dataSet_2.parseData({
				"columns" : [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"},
					{"name": "appId"},
					{"name": "role"},
					{"name": "class"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsMiniMenu");
			dataSet_3.parseData({
				"columns" : [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"},
					{"name": "appId"},
					{"name": "role"},
					{"name": "class"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsLang");
			dataSet_4.parseData({
				"columns" : [
					{"name": "label"},
					{"name": "value"},
					{"name": "class"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsLayout");
			dataSet_5.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "class"}
				],
				"rows": [
					{"label": "default", "value": "default", "class": "default"},
					{"label": "horizontal", "value": "horizontal", "class": "horizontal"},
					{"label": "vertical", "value": "vertical", "class": "vertical"},
					{"label": "division", "value": "division", "class": "division"},
					{"label": "window", "value": "window", "class": "window"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsMsgStack");
			dataSet_6.parseData({
				"columns": [
					{"name": "status"},
					{"name": "text"},
					{"name": "time"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmUserInfo");
			dataMap_1.parseData({
				"columns" : [
					{"name": "strAuth"},
					{"name": "strEmail"},
					{"name": "strUserNm"},
					{"name": "strSrc"},
					{"name": "strLang"},
					{"name": "strLayout"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "data/main.json";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 850px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 849px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["bg-gray-100"]);
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			xYLayout_1.animationDuration = 0.35;
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpAside");
			group_1.userAttr({"prevent-hide": "true"});
			group_1.style.setClasses(["aside"]);
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["74px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container("grpMenuWrap");
				group_2.style.setClasses(["related-work", "border"]);
				// Layout
				var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
				verticalLayout_1.spacing = 0;
				group_2.setLayout(verticalLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output("lblAccTm");
					output_1.value = "20210101000000";
					output_1.dataType = "date";
					output_1.format = "YYYY-MM-DD HH:mm:ss";
					output_1.style.setClasses(["access-time"]);
					container.addChild(output_1, {
						"autoSize": "none",
						"width": "239px",
						"height": "20px"
					});
					var group_3 = new cpr.controls.Container("grpUserInfo");
					group_3.style.setClasses(["user-box"]);
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.scrollable = false;
					formLayout_2.topMargin = "5px";
					formLayout_2.rightMargin = "5px";
					formLayout_2.bottomMargin = "5px";
					formLayout_2.leftMargin = "5px";
					formLayout_2.horizontalSpacing = "5px";
					formLayout_2.verticalSpacing = "5px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["415px"]);
					group_3.setLayout(formLayout_2);
					(function(container){
						var group_4 = new cpr.controls.Container("grp2");
						// Layout
						var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
						verticalLayout_2.spacing = 0;
						group_4.setLayout(verticalLayout_2);
						(function(container){
							var userDefinedControl_1 = new udc.com.main.AccordionHeader();
							container.addChild(userDefinedControl_1, {
								"width": "300px",
								"height": "40px"
							});
							var group_5 = new cpr.controls.Container("grp7");
							// Layout
							var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
							verticalLayout_3.leftMargin = 10;
							verticalLayout_3.rightMargin = 10;
							verticalLayout_3.topMargin = 10;
							verticalLayout_3.bottomMargin = 10;
							group_5.setLayout(verticalLayout_3);
							(function(container){
								var group_6 = new cpr.controls.Container("grp4");
								group_6.style.setClasses(["factory-area-title-wrap"]);
								// Layout
								var formLayout_3 = new cpr.controls.layouts.FormLayout();
								formLayout_3.topMargin = "0px";
								formLayout_3.rightMargin = "0px";
								formLayout_3.bottomMargin = "0px";
								formLayout_3.leftMargin = "0px";
								formLayout_3.horizontalSpacing = "1fr";
								formLayout_3.verticalSpacing = "0px";
								formLayout_3.setColumns(["1fr"]);
								formLayout_3.setRows(["1fr"]);
								group_6.setLayout(formLayout_3);
								(function(container){
									var output_2 = new cpr.controls.Output("opt22");
									output_2.value = "Qual Mode";
									output_2.style.setClasses(["factory-area-title"]);
									container.addChild(output_2, {
										"colIndex": 0,
										"rowIndex": 0
									});
								})(group_6);
								container.addChild(group_6, {
									"autoSize": "none",
									"width": "197px",
									"height": "20px"
								});
								var group_7 = new cpr.controls.Container("grp8");
								group_7.style.setClasses(["factory-area-title-wrap"]);
								// Layout
								var formLayout_4 = new cpr.controls.layouts.FormLayout();
								formLayout_4.topMargin = "0px";
								formLayout_4.rightMargin = "0px";
								formLayout_4.bottomMargin = "0px";
								formLayout_4.leftMargin = "0px";
								formLayout_4.horizontalSpacing = "1fr";
								formLayout_4.verticalSpacing = "0px";
								formLayout_4.setColumns(["1fr", "1fr", "1fr"]);
								formLayout_4.setRows(["1fr"]);
								group_7.setLayout(formLayout_4);
								(function(container){
									var output_3 = new cpr.controls.Output("opt7");
									output_3.value = "chA";
									output_3.style.setClasses(["factory-area-title"]);
									container.addChild(output_3, {
										"colIndex": 0,
										"rowIndex": 0
									});
									var output_4 = new cpr.controls.Output("opt8");
									output_4.value = "chB";
									output_4.style.setClasses(["factory-area-title"]);
									container.addChild(output_4, {
										"colIndex": 1,
										"rowIndex": 0
									});
									var output_5 = new cpr.controls.Output("opt9");
									output_5.value = "chC";
									output_5.style.setClasses(["factory-area-title"]);
									container.addChild(output_5, {
										"colIndex": 2,
										"rowIndex": 0
									});
								})(group_7);
								container.addChild(group_7, {
									"width": "400px",
									"height": "20px"
								});
								var group_8 = new cpr.controls.Container("grp9");
								// Layout
								var formLayout_5 = new cpr.controls.layouts.FormLayout();
								formLayout_5.topMargin = "0px";
								formLayout_5.rightMargin = "0px";
								formLayout_5.bottomMargin = "0px";
								formLayout_5.leftMargin = "0px";
								formLayout_5.horizontalSpacing = "3px";
								formLayout_5.verticalSpacing = "3px";
								formLayout_5.setColumns(["1fr", "1fr", "1fr", "1fr", "1fr"]);
								formLayout_5.setRows(["42px", "90px", "38px", "38px", "38px", "38px"]);
								group_8.setLayout(formLayout_5);
								(function(container){
									var output_6 = new cpr.controls.Output("opt10");
									output_6.value = "B";
									output_6.style.setClasses(["factory-area", "emphasize"]);
									container.addChild(output_6, {
										"colIndex": 1,
										"rowIndex": 0,
										"colSpan": 3,
										"rowSpan": 1
									});
									var output_7 = new cpr.controls.Output("opt11");
									output_7.value = "A";
									output_7.style.setClasses(["factory-area", "selected"]);
									container.addChild(output_7, {
										"colIndex": 0,
										"rowIndex": 1,
										"colSpan": 1,
										"rowSpan": 1,
										"leftSpacing": 2
									});
									var output_8 = new cpr.controls.Output("opt12");
									output_8.value = "TM";
									output_8.style.setClasses(["factory-area"]);
									container.addChild(output_8, {
										"colIndex": 1,
										"rowIndex": 1,
										"colSpan": 3,
										"rowSpan": 1
									});
									var output_9 = new cpr.controls.Output("opt13");
									output_9.value = "C";
									output_9.style.setClasses(["factory-area", "emphasize"]);
									container.addChild(output_9, {
										"colIndex": 4,
										"rowIndex": 1,
										"rightSpacing": 2
									});
									var output_10 = new cpr.controls.Output("opt14");
									output_10.value = "LLB";
									output_10.style.setClasses(["factory-area"]);
									container.addChild(output_10, {
										"colIndex": 2,
										"rowIndex": 2
									});
									var output_11 = new cpr.controls.Output("opt15");
									output_11.value = "LLA";
									output_11.style.setClasses(["factory-area"]);
									container.addChild(output_11, {
										"colIndex": 1,
										"rowIndex": 3,
										"colSpan": 3,
										"rowSpan": 1
									});
									var output_12 = new cpr.controls.Output("opt16");
									output_12.value = "AL";
									output_12.style.setClasses(["factory-area"]);
									container.addChild(output_12, {
										"colIndex": 0,
										"rowIndex": 4
									});
									var output_13 = new cpr.controls.Output("opt17");
									output_13.value = "AR";
									output_13.style.setClasses(["factory-area"]);
									container.addChild(output_13, {
										"colIndex": 1,
										"rowIndex": 4,
										"colSpan": 3,
										"rowSpan": 1
									});
									var output_14 = new cpr.controls.Output("opt18");
									output_14.value = "CL";
									output_14.style.setClasses(["factory-area"]);
									container.addChild(output_14, {
										"colIndex": 4,
										"rowIndex": 4
									});
									var output_15 = new cpr.controls.Output("opt19");
									output_15.value = "LP1";
									output_15.style.setClasses(["factory-area"]);
									container.addChild(output_15, {
										"colIndex": 1,
										"rowIndex": 5
									});
									var output_16 = new cpr.controls.Output("opt20");
									output_16.value = "LP2";
									output_16.style.setClasses(["factory-area"]);
									container.addChild(output_16, {
										"colIndex": 2,
										"rowIndex": 5
									});
									var output_17 = new cpr.controls.Output("opt21");
									output_17.value = "LP3";
									output_17.style.setClasses(["factory-area"]);
									container.addChild(output_17, {
										"colIndex": 3,
										"rowIndex": 5
									});
								})(group_8);
								container.addChild(group_8, {
									"autoSize": "height",
									"width": "400px",
									"height": "299px"
								});
							})(group_5);
							container.addChild(group_5, {
								"autoSize": "height",
								"width": "400px",
								"height": "327px"
							});
						})(group_4);
						container.addChild(group_4, {
							"colIndex": 0,
							"rowIndex": 0
						});
					})(group_3);
					container.addChild(group_3, {
						"autoSize": "height",
						"width": "230px",
						"height": "410px"
					});
					var tree_1 = new cpr.controls.Tree("treMenu");
					tree_1.enabledItemExp = "role == \"\"";
					tree_1.ellipsis = true;
					tree_1.style.setClasses(["sidebar"]);
					tree_1.style.item.bindClass().toExpression("\"tree-item-level-\" + (depth + 1) + \" \" + class");
					(function(tree_1){
						tree_1.setItemSet(app.lookup("dsMenu"), {
							"label": "label",
							"value": "value",
							"parentValue": "parent"
						});
					})(tree_1);
					if(typeof onTreMenuItemClick == "function") {
						tree_1.addEventListener("item-click", onTreMenuItemClick);
					}
					if(typeof onTreMenuSelectionChange == "function") {
						tree_1.addEventListener("selection-change", onTreMenuSelectionChange);
					}
					if(typeof onTreMenuBeforeSelectionChange == "function") {
						tree_1.addEventListener("before-selection-change", onTreMenuBeforeSelectionChange);
					}
					container.addChild(tree_1, {
						"autoSize": "height",
						"width": "230px",
						"height": "200px"
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var image_1 = new cpr.controls.Image("img1");
				image_1.src = "../theme/images/com/main/tes_logo_sm.png";
				(function(image_1){
				})(image_1);
				container.addChild(image_1, {
					"colIndex": 0,
					"rowIndex": 0,
					"horizontalAlign": "center",
					"verticalAlign": "center",
					"width": 114,
					"height": 65
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"bottom": "20px",
				"left": "0px",
				"width": "230px"
			});
			
			var group_9 = new cpr.controls.Container("grpHeader");
			group_9.style.setClasses(["header"]);
			// Layout
			var formLayout_6 = new cpr.controls.layouts.FormLayout();
			formLayout_6.scrollable = false;
			formLayout_6.topMargin = "5px";
			formLayout_6.rightMargin = "20px";
			formLayout_6.bottomMargin = "5px";
			formLayout_6.leftMargin = "20px";
			formLayout_6.horizontalSpacing = "5px";
			formLayout_6.verticalSpacing = "3px";
			formLayout_6.setColumns(["100px", "1fr", "200px", "200px", "100px", "80px", "100px"]);
			formLayout_6.setColumnAutoSizing(2, true);
			formLayout_6.setColumnAutoSizing(3, true);
			formLayout_6.setColumnMinWidth(1, 400);
			formLayout_6.setRows(["1fr", "1fr"]);
			group_9.setLayout(formLayout_6);
			(function(container){
				var radioButton_1 = new cpr.controls.RadioButton("rdb1");
				radioButton_1.value = "Automatic";
				radioButton_1.colCount = 1;
				radioButton_1.style.setClasses(["toggler"]);
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("Automatic", "Automatic"));
					radioButton_1.addItem(new cpr.controls.Item("Idle", "Idle"));
				})(radioButton_1);
				container.addChild(radioButton_1, {
					"colIndex": 0,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 2,
					"horizontalAlign": "fill",
					"verticalAlign": "fill"
				});
				var output_18 = new cpr.controls.Output("opt4");
				output_18.value = "Alarm Display";
				container.addChild(output_18, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_19 = new cpr.controls.Output("opt1");
				output_19.value = "LP1 SlotMap Verification Ok.";
				output_19.style.setClasses(["text-center", "bg-gray-200", "border"]);
				container.addChild(output_19, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_20 = new cpr.controls.Output("opt2");
				output_20.value = "LP2 SlotMap Verification Ok.";
				output_20.style.setClasses(["text-center", "bg-gray-200", "border"]);
				container.addChild(output_20, {
					"colIndex": 2,
					"rowIndex": 1
				});
				var output_21 = new cpr.controls.Output("opt5");
				output_21.value = "LP3 SlotMap Verification Ok.";
				output_21.style.setClasses(["text-center", "bg-gray-200", "border"]);
				container.addChild(output_21, {
					"colIndex": 3,
					"rowIndex": 0
				});
				var output_22 = new cpr.controls.Output("opt6");
				output_22.value = "HostControl\r\nManual";
				output_22.style.setClasses(["border", "text-center"]);
				container.addChild(output_22, {
					"colIndex": 4,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 2
				});
				var button_1 = new cpr.controls.Button("btnBuzzer");
				button_1.value = "Buzzer Off";
				button_1.icon = "../theme/images/icons/volume-2.svg";
				button_1.iconAlign = "top";
				button_1.userAttr({"buzzer": "on"});
				button_1.style.icon.css({
					"width" : "40px",
					"height" : "40px"
				});
				if(typeof onBtnBuzzerClick == "function") {
					button_1.addEventListener("click", onBtnBuzzerClick);
				}
				container.addChild(button_1, {
					"colIndex": 5,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 2
				});
				var group_10 = new cpr.controls.Container("grp3");
				// Layout
				var formLayout_7 = new cpr.controls.layouts.FormLayout();
				formLayout_7.topMargin = "0px";
				formLayout_7.rightMargin = "0px";
				formLayout_7.bottomMargin = "0px";
				formLayout_7.leftMargin = "0px";
				formLayout_7.horizontalSpacing = "0px";
				formLayout_7.verticalSpacing = "2px";
				formLayout_7.setColumns(["1fr"]);
				formLayout_7.setRows(["1fr", "1fr", "1fr"]);
				group_10.setLayout(formLayout_7);
				(function(container){
					var button_2 = new cpr.controls.Button("btn16");
					button_2.value = "";
					button_2.style.css({
						"background-color" : "red"
					});
					container.addChild(button_2, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var button_3 = new cpr.controls.Button("btn17");
					button_3.value = "";
					container.addChild(button_3, {
						"colIndex": 0,
						"rowIndex": 1
					});
					var button_4 = new cpr.controls.Button("btn18");
					button_4.value = "";
					container.addChild(button_4, {
						"colIndex": 0,
						"rowIndex": 2
					});
				})(group_10);
				container.addChild(group_10, {
					"colIndex": 6,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 2
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				inputBox_1.value = "Chamber A Normal alarm -S2-Safety-Pump Running(D)";
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 1
				});
			})(group_9);
			container.addChild(group_9, {
				"top": "0px",
				"right": "0px",
				"left": "230px",
				"height": "75px"
			});
			
			var group_11 = new cpr.controls.Container("grp1");
			group_11.style.setClasses(["footer"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_11.setLayout(xYLayout_2);
			(function(container){
				var output_23 = new cpr.controls.Output("opt3");
				output_23.value = "COPYRIGHT 2005 TES CO.LTD. ALL RIGHTS RESERVED.";
				output_23.style.setClasses(["bg-aside", "text-center", "text-white"]);
				container.addChild(output_23, {
					"right": "0px",
					"bottom": "0px",
					"left": "0px",
					"height": "21px"
				});
			})(group_11);
			container.addChild(group_11, {
				"right": "0px",
				"bottom": "0px",
				"left": "0px",
				"height": "21px"
			});
			
			var mDIFolder_1 = new cpr.controls.MDIFolder("mdi1");
			mDIFolder_1.hideHeader = true;
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "Main.clx";
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea2");
				cpr.core.App.load("../scr/Main", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				tabItem_1.content = embeddedApp_1;
				return tabItem_1;
			})(mDIFolder_1);
			mDIFolder_1.addTabItem(tabItem_1);
			mDIFolder_1.setSelectedTabItem(tabItem_1);
			if(typeof onMdi1SelectionChange == "function") {
				mDIFolder_1.addEventListener("selection-change", onMdi1SelectionChange);
			}
			container.addChild(mDIFolder_1, {
				"top": "75px",
				"right": "0px",
				"bottom": "20px",
				"left": "230px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "메인";
	app.setPreferredSize(1675, 800);
	cpr.core.Platform.INSTANCE.register(app);
})();
