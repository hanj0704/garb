/*
 * App URI: 202106/Untitled
 * Source Location: 202106/Untitled.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202106/Untitled", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Untitled.js
			 * Created at 2021. 6. 25. 오전 10:43:21.
			 *
			 * @author HANS
			 ************************************************/
			
			//cpr.events.EventBus.INSTANCE.addFilter("value-change", function(e){
			//	var control = e.control;
			//	
			//	if(control instanceof cpr.controls.InputBox) {
			//		
			//		if(control.userAttr("isCookieStarted") == "Y") {
			//			localStorage.setItem(app.app.title+"_"+control.id, control.value);
			//		}
			//	}
			//});
			//cpr.events.EventBus.INSTANCE.addFilter("load", function(e){
			//	var control = e.control;
			//	
			//	if(control instanceof cpr.core.AppInstance) {
			//		
			//		if(control.app.id.indexOf("udc") == -1) {
			//				/** @type cpr.controls.InputBox[]*/
			//			var cookieBoosters = control.getContainer().getAllRecursiveChildren().filter(function(each){
			//				return each.userAttr("isCookieStarted") == "Y";
			//			});
			//			
			//			cookieBoosters.forEach(function(each){
			//				var str = localStorage.getItem(control.app.title+"_"+each.id);
			//				if(str != undefined && str != null && str != "null") {
			//					
			//					each.putValue(str);
			//				}
			//			});
			//		}
			//	}
			//});
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				
				localStorage.setItem("abc", "zzzzz");
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				console.log(localStorage.getItem("abc"));
			}
			
			
			/*
			 * "sessionSet" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				
				sessionStorage.setItem("abc", "교교교");
				
			}
			
			
			/*
			 * "sessionSet" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				console.log(sessionStorage.getItem("abc"));
			}
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				var dmDoomsdayVault = app.lookup("dmDoomsdayVault");
				var vsData = localStorage.getItem(app.app.title+"_"+dmDoomsdayVault.id);
				dmDoomsdayVault.build(JSON.parse(vsData));
				app.getContainer().redraw();
			}
			
			
			/*
			 * 데이터맵에서 update 이벤트 발생 시 호출.
			 * 데이터가 수정되는 경우 발생하는 이벤트. 발생 메소드 : setValue
			 */
			function onDmDoomsdayVaultUpdate(/* cpr.events.CDataEvent */ e){
				/** 
				 * @type cpr.data.DataMap
				 */
				var dmDoomsdayVault = e.control;
				localStorage.setItem(app.app.title+"_"+dmDoomsdayVault.id, JSON.stringify(dmDoomsdayVault.getDatas()));
			};
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dmDoomsdayVault");
			dataMap_1.parseData({
				"columns" : [
					{"name": "saveData1"},
					{"name": "saveData2"},
					{"name": "saveData3"},
					{"name": "saveData4"}
				]
			});
			if(typeof onDmDoomsdayVaultUpdate == "function") {
				dataMap_1.addEventListener("update", onDmDoomsdayVaultUpdate);
			}
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "localSet";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "35px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "localGet";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "50px",
				"left": "35px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			inputBox_1.userAttr({"isCookieStarted": "Y"});
			inputBox_1.bind("value").toDataMap(app.lookup("dmDoomsdayVault"), "saveData1");
			container.addChild(inputBox_1, {
				"top": "50px",
				"left": "174px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("ipb2");
			inputBox_2.userAttr({"isCookieStarted": "Y"});
			inputBox_2.bind("value").toDataMap(app.lookup("dmDoomsdayVault"), "saveData2");
			container.addChild(inputBox_2, {
				"top": "80px",
				"left": "174px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_3 = new cpr.controls.InputBox("ipb3");
			inputBox_3.userAttr({"isCookieStarted": "Y"});
			inputBox_3.bind("value").toDataMap(app.lookup("dmDoomsdayVault"), "saveData3");
			container.addChild(inputBox_3, {
				"top": "110px",
				"left": "174px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_4 = new cpr.controls.InputBox("ipb4");
			inputBox_4.userAttr({"isCookieStarted": "Y"});
			inputBox_4.bind("value").toDataMap(app.lookup("dmDoomsdayVault"), "saveData4");
			container.addChild(inputBox_4, {
				"top": "140px",
				"left": "174px",
				"width": "100px",
				"height": "20px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			cpr.core.App.load("202106/testest", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "185px",
				"left": "20px",
				"width": "711px",
				"height": "341px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Untitled";
	cpr.core.Platform.INSTANCE.register(app);
})();
