/*
 * App URI: metro/PP02
 * Source Location: metro/PP02.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("metro/PP02", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * PP02.js
			 * Created at 2020. 2. 14. 오전 11:26:36.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * 쉘에서 load 이벤트 발생 시 호출.
			 */
			function onShl1Load(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.UIControlShell
				 */
				var shl1 = e.control;
				
				am4core.ready(function() {
			
			// Themes begin
			am4core.useTheme(am4themes_animated);
			// Themes end
			
			 // Create chart instance
			var chart = am4core.create(e.content, am4charts.XYChart);
			
			// Add data
			chart.data = [{
			  "year": 2005,
			  "income": 23.5,
			  "expenses": 18.1
			},{
			  "year": 2006,
			  "income": 26.2,
			  "expenses": 22.8
			},{
			  "year": 2007,
			  "income": 30.1,
			  "expenses": 23.9
			},{
			  "year": 2008,
			  "income": 29.5,
			  "expenses": 25.1
			},{
			  "year": 2009,
			  "income": 24.6,
			  "expenses": 25
			}];
			
			// Create axes
			var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
			categoryAxis.dataFields.category = "year";
			categoryAxis.numberFormatter.numberFormat = "#";
			categoryAxis.renderer.inversed = true;
			categoryAxis.renderer.grid.template.location = 0;
			categoryAxis.renderer.cellStartLocation = 0.1;
			categoryAxis.renderer.cellEndLocation = 0.9;
			
			var  valueAxis = chart.xAxes.push(new am4charts.ValueAxis()); 
			valueAxis.renderer.opposite = true;
			
			// Create series
			function createSeries(field, name) {
			  var series = chart.series.push(new am4charts.ColumnSeries());
			  series.dataFields.valueX = field;
			  series.dataFields.categoryY = "year";
			  series.name = name;
			  series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
			  series.columns.template.height = am4core.percent(100);
			  series.sequencedInterpolation = true;
			
			  var valueLabel = series.bullets.push(new am4charts.LabelBullet());
			  valueLabel.label.text = "{valueX}";
			  valueLabel.label.horizontalCenter = "left";
			  valueLabel.label.dx = 10;
			  valueLabel.label.hideOversized = false;
			  valueLabel.label.truncate = false;
			
			  var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
			  categoryLabel.label.text = "{name}";
			  categoryLabel.label.horizontalCenter = "right";
			  categoryLabel.label.dx = -10;
			  categoryLabel.label.fill = am4core.color("#fff");
			  categoryLabel.label.hideOversized = false;
			  categoryLabel.label.truncate = false;
			}
			
			createSeries("income", "Income");
			createSeries("expenses", "Expenses");
			
			});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "STATION_NM"},
					{
						"name": "D-31",
						"dataType": "number"
					},
					{
						"name": "D-1",
						"dataType": "number"
					},
					{
						"name": "D-2",
						"dataType": "number"
					},
					{
						"name": "D-3",
						"dataType": "number"
					},
					{
						"name": "D-4",
						"dataType": "number"
					}
				],
				"rows": [
					{"STATION_NM": "방화", "D-31": "100", "D-1": "90", "D-2": "90", "D-3": "83", "D-4": "86"},
					{"STATION_NM": "개화산", "D-31": "90.7", "D-1": "90.7", "D-2": "90.7", "D-3": "90.7", "D-4": "90.7"},
					{"STATION_NM": "김포공항", "D-31": "80.34", "D-1": "80.34", "D-2": "70.34", "D-3": "70.34", "D-4": "70.34"},
					{"STATION_NM": "송정", "D-31": "70.99", "D-1": "70.99", "D-2": "80.99", "D-3": "80.99", "D-4": "80.99"},
					{"STATION_NM": "마곡", "D-31": "100", "D-1": "100", "D-2": "81.35", "D-3": "88.35", "D-4": "88.35"},
					{"STATION_NM": "발산", "D-31": "90.7", "D-1": "90.7", "D-2": "70.42", "D-3": "90.42", "D-4": "90.42"},
					{"STATION_NM": "우장산", "D-31": "80.34", "D-1": "80.34", "D-2": "90.34", "D-3": "90.34", "D-4": "90.34"},
					{"STATION_NM": "화곡", "D-31": "70.99", "D-1": "70.99", "D-2": "70.99", "D-3": "90.99", "D-4": "90.99"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({});
			app.register(dataSet_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var uIControlShell_1 = new cpr.controls.UIControlShell("shl1");
			if(typeof onShl1Load == "function") {
				uIControlShell_1.addEventListener("load", onShl1Load);
			}
			container.addChild(uIControlShell_1, {
				"top": "20px",
				"bottom": "20px",
				"left": "20px",
				"width": "526px"
			});
		}
	});
	app.title = "PP02";
	cpr.core.Platform.INSTANCE.register(app);
})();
