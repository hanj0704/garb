/*
 * App URI: 202002/CO_PrdtIntrtPolicy
 * Source Location: 202002/CO_PrdtIntrtPolicy.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202002/CO_PrdtIntrtPolicy", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * CO_PrdtIntrtPolicy.js
			 * Created at 2020. 2. 20. 오후 2:54:26.
			 *
			 * @author dmd
			 ************************************************/
			//var comUtil = createComUtil(app);
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
			//	var sms1 = app.lookup("sms1");
			//	sms1.send();  //서브미션 전송 
				app.lookup("proinfor").clear(); // 검색 하기 전 최초 화면 초기화 
			}
			
			
			
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSms1SubmitSuccess(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms1 = e.control;
					
			//			// 서버로부터 전달된 메시지가 있을 경우 메시지를 출력
				var message = sms1.getMetadata("msg");
				if (message) {
					comUtil.alert(message);
				}
			
				// 서버를 타 SQL문을 실행한 결과 값을 메인 그리드를 redraw
				var grdMain = app.lookup("grd1");
				grdMain.redraw();
			
				if (grdMain.rowCount > 0) {
					// 첫번째 row 선택
					grdMain.selectRows([ 0 ]);
				}
			}
			
			
			/*
			 * "검색" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var cmb1 = app.lookup("cmb1");
				var cmb2 = app.lookup("cmb2");
				
				if(cmb1 == null){
					alert('상품구분을 선택해주세요')		
				};
				if(cmb2 == null){
					alert('지점을 선택해주세요')	
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("pro_guban");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "요구불", "value": "요구불"},
					{"label": "정기성", "value": "정기성"},
					{"label": "적금성", "value": "적금성"},
					{"label": "할인어음", "value": "할인어음"},
					{"label": "가수가지", "value": "가수가지"},
					{"label": "수탁어음", "value": "수탁어음"},
					{"label": "후선업무", "value": "후선업무"},
					{"label": "NPL", "value": "NPL"},
					{"label": "대여금", "value": "대여금"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("jujam");
			dataSet_2.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [{"label": "영업점", "value": "영업점"}]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("proinfor");
			dataSet_3.parseData({
				"columns": [
					{"name": "이율"},
					{"name": "이율일련번호"},
					{"name": "이율명"},
					{"name": "이자계산방법"},
					{"name": "이율구간코드"},
					{"name": "이율구간세부코드"},
					{"name": "이율구간단위코드"},
					{"name": "이율변동구분코드"}
				],
				"rows": [
					{"이율": "1", "이율일련번호": "1", "이율명": "1", "이자계산방법": "1", "이율구간코드": "1", "이율구간세부코드": "1", "이율구간단위코드": "1", "이율변동구분코드": "1"},
					{"이율": "2", "이율일련번호": "2", "이율명": "2", "이자계산방법": "2", "이율구간코드": "2", "이율구간세부코드": "2", "이율구간단위코드": "2", "이율변동구분코드": "2"},
					{"이율": "3", "이율일련번호": "3", "이율명": "3", "이자계산방법": "3", "이율구간코드": "3", "이율구간세부코드": "3", "이율구간단위코드": "3", "이율변동구분코드": "3"},
					{"이율": "4", "이율일련번호": "4", "이율명": "4", "이자계산방법": "4", "이율구간코드": "4", "이율구간세부코드": "4", "이율구간단위코드": "4", "이율변동구분코드": "4"},
					{"이율": "5", "이율일련번호": "5", "이율명": "5", "이자계산방법": "5", "이율구간코드": "5", "이율구간세부코드": "5", "이율구간단위코드": "5", "이율변동구분코드": "5"},
					{"이율": "6", "이율일련번호": "6", "이율명": "6", "이자계산방법": "6", "이율구간코드": "6", "이율구간세부코드": "6", "이율구간단위코드": "6", "이율변동구분코드": "6"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("no");
			dataSet_4.parseData({
				"columns": [
					{
						"name": "label",
						"dataType": "string"
					},
					{"name": "value"}
				],
				"rows": [
					{"label": "1", "value": "1"},
					{"label": "2", "value": "2"},
					{"label": "3", "value": "3"},
					{"label": "4", "value": "4"},
					{"label": "5", "value": "5"},
					{"label": "6", "value": "6"}
				]
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("gesan");
			dataSet_5.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "1", "value": "1"},
					{"label": "2", "value": "2"},
					{"label": "3", "value": "3"},
					{"label": "4", "value": "4"},
					{"label": "5", "value": "5"},
					{"label": "6", "value": "6"}
				]
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("gugancod");
			dataSet_6.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "1", "value": "1"},
					{"label": "2", "value": "2"},
					{"label": "3", "value": "3"},
					{"label": "4", "value": "4"},
					{"label": "5", "value": "5"},
					{"label": "6", "value": "6"}
				]
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("gugansebu");
			dataSet_7.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "1", "value": "1"},
					{"label": "2", "value": "2"},
					{"label": "3", "value": "3"},
					{"label": "4", "value": "4"},
					{"label": "5", "value": "5"},
					{"label": "6", "value": "6"}
				]
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("gugandanwe");
			dataSet_8.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "1", "value": "1"},
					{"label": "2", "value": "2"},
					{"label": "3", "value": "3"},
					{"label": "4", "value": "4"},
					{"label": "5", "value": "5"},
					{"label": "6", "value": "6"}
				]
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("bendongcode");
			dataSet_9.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "1", "value": "1"},
					{"label": "2", "value": "2"},
					{"label": "3", "value": "3"},
					{"label": "4", "value": "4"},
					{"label": "5", "value": "5"},
					{"label": "6", "value": "6"}
				]
			});
			app.register(dataSet_9);
			var dataMap_1 = new cpr.data.DataMap("dm1");
			dataMap_1.parseData({
				"columns" : [
					{"name": "pro_guban"},
					{"name": "이율명"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_3, false);
			if(typeof onSms1SubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSms1SubmitSuccess);
			}
			app.register(submission_1);
			
			app.supportMedia("all", "default");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["50px", "1fr", "45px"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var group_2 = new cpr.controls.Container();
				group_2.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#959393",
					"border-right-width" : "1px",
					"border-left-color" : "#959393",
					"border-right-color" : "#959393",
					"background-position" : "1px",
					"border-left-width" : "1px",
					"border-top-style" : "solid",
					"background-color" : "#fefefe",
					"border-radius" : "5px",
					"border-left-style" : "solid",
					"border-bottom-width" : "1px",
					"border-top-color" : "#959393",
					"border-bottom-style" : "solid"
				});
				// Layout
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_2);
				(function(container){
					var button_1 = new cpr.controls.Button();
					button_1.value = "수정";
					container.addChild(button_1, {
						"top": "5px",
						"left": "643px",
						"width": "100px",
						"height": "33px"
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "입력";
					container.addChild(button_2, {
						"top": "5px",
						"left": "753px",
						"width": "100px",
						"height": "33px"
					});
					var button_3 = new cpr.controls.Button();
					button_3.value = "검색";
					if(typeof onButtonClick == "function") {
						button_3.addEventListener("click", onButtonClick);
					}
					container.addChild(button_3, {
						"top": "5px",
						"left": "533px",
						"width": "100px",
						"height": "33px"
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var group_3 = new cpr.controls.Container();
				group_3.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#959393",
					"border-right-width" : "1px",
					"border-left-color" : "#959393",
					"border-right-color" : "#959393",
					"border-left-width" : "1px",
					"border-top-style" : "solid",
					"background-color" : "#fefefe",
					"border-radius" : "5px",
					"border-left-style" : "solid",
					"border-bottom-width" : "1px",
					"border-top-color" : "#959393",
					"border-bottom-style" : "solid"
				});
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "상품구분";
					output_1.style.css({
						"border-right-style" : "solid",
						"border-bottom-color" : "#77c1e5",
						"border-top-width" : "1px",
						"border-right-width" : "1px",
						"border-left-color" : "#77c1e5",
						"font-size" : "13px",
						"border-right-color" : "#77c1e5",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#ecf7f8",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#77c1e5",
						"border-bottom-style" : "solid",
						"text-align" : "right"
					});
					container.addChild(output_1, {
						"top": "9px",
						"left": "9px",
						"width": "100px",
						"height": "29px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb1");
					inputBox_1.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#77c1e5",
						"border-left-style" : "solid",
						"border-right-width" : "1px",
						"border-bottom-width" : "1px",
						"border-left-color" : "#77c1e5",
						"border-top-color" : "#77c1e5",
						"border-bottom-style" : "solid",
						"border-right-color" : "#77c1e5",
						"border-left-width" : "1px",
						"border-top-style" : "solid"
					});
					container.addChild(inputBox_1, {
						"top": "9px",
						"left": "108px",
						"width": "207px",
						"height": "29px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cmb1");
					comboBox_1.bind("value").toDataMap(app.lookup("dm1"), "pro_guban");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("pro_guban"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "13px",
						"left": "112px",
						"width": "140px",
						"height": "20px"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "지점";
					output_2.style.css({
						"border-right-style" : "solid",
						"border-bottom-color" : "#77c1e5",
						"border-top-width" : "1px",
						"border-right-width" : "1px",
						"border-left-color" : "#77c1e5",
						"font-size" : "13px",
						"border-right-color" : "#77c1e5",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"background-color" : "#ecf7f8",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#77c1e5",
						"border-bottom-style" : "solid",
						"text-align" : "right"
					});
					container.addChild(output_2, {
						"top": "8px",
						"left": "547px",
						"width": "100px",
						"height": "29px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipb2");
					inputBox_2.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#77c1e5",
						"border-left-style" : "solid",
						"border-right-width" : "1px",
						"border-bottom-width" : "1px",
						"border-left-color" : "#77c1e5",
						"border-top-color" : "#77c1e5",
						"border-bottom-style" : "solid",
						"border-right-color" : "#77c1e5",
						"border-left-width" : "1px",
						"border-top-style" : "solid"
					});
					container.addChild(inputBox_2, {
						"top": "8px",
						"left": "646px",
						"width": "207px",
						"height": "29px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cmb2");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("jujam"), {
							"label": "label",
							"value": "value"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "13px",
						"left": "650px",
						"width": "140px",
						"height": "20px"
					});
				})(group_3);
				container.addChild(group_3, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var grid_1 = new cpr.controls.Grid("grd1");
				grid_1.init({
					"dataSet": app.lookup("proinfor"),
					"columns": [
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.targetColumnName = "이율";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "이율";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.targetColumnName = "이율일련번호";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "이율일련번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.targetColumnName = "이율명";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "이율명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.targetColumnName = "이자계산방법";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "이자계산방법";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.targetColumnName = "이율구간코드";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "이율구간코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.targetColumnName = "이율구간세부코드";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "이율구간세부코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.targetColumnName = "이율구간단위코드";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "이율구간단위코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.targetColumnName = "이율변동구분코드";
									cell.filterable = false;
									cell.sortable = false;
									cell.text = "이율변동구분코드";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "24px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "이율";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "이율일련번호";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("cmb9");
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("no"), {
												"label": "label",
												"value": "value"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("이율일련번호");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "이율명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "이자계산방법";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("cmb10");
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("gesan"), {
												"label": "label",
												"value": "value"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("이자계산방법");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "이율구간코드";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("cmb11");
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("gugancod"), {
												"label": "label",
												"value": "value"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("이율구간코드");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "이율구간세부코드";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("cmb12");
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("gugansebu"), {
												"label": "label",
												"value": "value"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("이율구간세부코드");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "이율구간단위코드";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("cmb13");
										(function(comboBox_7){
											comboBox_7.setItemSet(app.lookup("gugandanwe"), {
												"label": "label",
												"value": "value"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("이율구간단위코드");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "이율변동구분코드";
									cell.control = (function(){
										var comboBox_8 = new cpr.controls.ComboBox("cmb14");
										(function(comboBox_8){
											comboBox_8.setItemSet(app.lookup("bendongcode"), {
												"label": "label",
												"value": "value"
											});
										})(comboBox_8);
										comboBox_8.bind("value").toDataColumn("이율변동구분코드");
										return comboBox_8;
									})();
								}
							}
						]
					}
				});
				grid_1.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#959393",
					"border-right-width" : "1px",
					"border-left-color" : "#959393",
					"border-right-color" : "#959393",
					"border-left-width" : "1px",
					"border-top-style" : "solid",
					"background-color" : "#fefefe",
					"border-left-style" : "solid",
					"border-bottom-width" : "1px",
					"border-top-color" : "#959393",
					"border-bottom-style" : "solid"
				});
				container.addChild(grid_1, {
					"colIndex": 0,
					"rowIndex": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"width": "875px",
				"height": "496px",
				"left": "calc(50% - 437px)",
				"top": "calc(50% - 248px)"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "CO_PrdtIntrtPolicy";
	cpr.core.Platform.INSTANCE.register(app);
})();
