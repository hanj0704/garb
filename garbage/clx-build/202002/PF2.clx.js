/*
 * App URI: 202002/PF2
 * Source Location: 202002/PF2.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202002/PF2", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * PF2.js
			 * Created at 2020. 1. 30. 오후 5:06:10.
			 *
			 * @author csj
			 ************************************************/
			
			
			/**
			 * 눈금자 및 스케줄 데이터 동적 생성
			 */
			function drawScreen() {
			
				var vcTimeLine = app.lookup("timeLine");
				var vcDs3 = app.lookup("dsTimeLine");
			
				/* 시간에 대한 눈금자를 동적으로 생성 - 30px 기준 */
				for (var i = 0; i < vcDs3.getRowCount(); i++) {
					var vnTop = 0 + (i * 30); // 시
					var vnTop2 = 1 + (i * 30); // 시간 텍스트
					var vnTop3 = 15 + (i * 30); // 분
					var vcRowData = vcDs3.getRowData(i);
			
					/*시간 눈금 */
					var vcOutput = new cpr.controls.Output();
					vcOutput.style.css({
						"background-color": "silver"
					});
					vcTimeLine.addChild(vcOutput, {
						"top": vnTop + "px",
						"width": "13px", 
						"left": "12px",
						"height": "1px"
					});
			
					/*두번째 시간표시 */
					var vcDsRowData = vcDs3.getRowData(i);
					var vcOutput2 = new cpr.controls.Output();
					vcOutput2.value = vcRowData["timeLine"];
					vcOutput2.style.css({
						"text-align": "center",
						"font-size": "12px"
					});
					vcTimeLine.addChild(vcOutput2, {
						"top": vnTop2 + "px",
						"width": "25px",
						"left": "0px",
						"height": "15px"
					});
			
					/* 분 눈금 */
					var vcOutput3 = new cpr.controls.Output();
					vcOutput3.style.css({
						"background-color": "silver"
					});
					vcTimeLine.addChild(vcOutput3, {
						"top": vnTop3 + "px",
						"width": "7px",
						"left": "18px",
						"height": "1px"
					});
				}
			
				/* 그려진 시간에 맞게 스케줄을 동적 생성 */
				var ds1 = app.lookup("dsSteel");
			
				var vcLayout1 = app.lookup("1M");
				var vcLayout2 = app.lookup("2M");
				var vcLayout3 = app.lookup("3M");
				var vcLayout4 = app.lookup("4M");
				var vcLayout5 = app.lookup("5M");
				var vaWeek = [vcLayout1, vcLayout2, vcLayout3, vcLayout4, vcLayout5]; // 연주 객체
			
				/* 연주 종류에 따라 동적으로 스케줄 생성 */
				for (var j = 0; j < vaWeek.length; j++) {
					var vnAddnum = 0;
					var isNext = false;
					ds1.clearFilter();
					ds1.setFilter(" softCastNo == '" + (j + 1) + "'  ");
					
					/* 필터된 연주 데이터를 기준으로 스케줄 생성 */
					for (var i = 0; i < ds1.getRowCount(); i++) {
						var vcSchDetail = new udc.com.SchDetail(); // 스케줄 UDC 컨트롤
			
						var vcRow = ds1.getRowData(i);
			
						/* 마지막을 제외한 나머지 스케줄 컨트롤에 한하여 border-bottom을 그리지 않기 위해 계산 */
						if (ds1.getRowData(i + 1) != null) {
							if (ds1.getRowData(i)["softCastEndDt"] == ds1.getRowData(i + 1)["softCastStrDt"]) {
								isNext = true;
							} else {
								isNext = false;
							}
						} else {
							isNext = false;
						}
			
						var vsTimeOn = vcRow["softCastStrDt"];
						var vsTImeEnd = vcRow["softCastEndDt"];
						
						/* 시간 데이터를 통해 위치 및 크기 계산하여 연주 스케줄 추가 */
						var vnTimeH = parseInt(vsTimeOn.substring(8, 10)) + parseInt(vnAddnum);
						var vnTimeM = vsTimeOn.substring(10, 12);
						var vnTimeH1 = parseInt(vsTImeEnd.substring(8, 10)) + parseInt(vnAddnum);
						var vnTimeM1 = vsTImeEnd.substring(10, 12);
			
						if (vnTimeH > vnTimeH1) {
							vnTimeH1 = 24 + parseInt(vnTimeH1);
						}
						var vnHeight = 0;
			
						var vnTop = parseInt(vnTimeH) * 30 + Math.round((parseInt(vnTimeM) / 2));
			
						vnHeight = ((parseInt(vnTimeH1) - parseInt(vnTimeH)) * 30) + ((parseInt(vnTimeM1) - parseInt(vnTimeM))) / 2;
						
						/* 스케줄 컨트롤에 데이터 전달 */
						vcSchDetail.setAppProperty("voRowData", vcRow);
						if (isNext == false) {
							vcSchDetail.style.css({
								"border-bottom": "1px solid #cccccc"
							});
						}
						
						/* 컨테이너에 스케줄 컨트롤 추가 */
						vaWeek[j].addChild(vcSchDetail, {
							"top": vnTop + "px",
							"right": "0px",
							"left": "0px",
							"height": Math.round(vnHeight) + "px"
						});
					}
				}
			}
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				/* 서브미션 전송 */
				app.lookup("subInit").send();
			}
			
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onSubInitSubmitSuccess( /* cpr.events.CSubmissionEvent */ e) {
				/** 
				 * @type cpr.protocols.Submission
				 */
				var subInit = e.control;
				
				/* 눈금자 및 스케줄 컨트롤 동적 생성 */
				drawScreen();
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("DSData2");
			dataSet_1.parseData({
				"columns" : [
					{"name": "idxNum"},
					{"name": "startTime"},
					{"name": "timeGeb"},
					{"name": "dataTop"},
					{"name": "dataDown"},
					{"name": "dataType"},
					{"name": "dataLineNum"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("TimeLine");
			dataSet_2.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"}
				],
				"rows": [
					{"column1": "", "column2": ""},
					{"column1": "1600", "column2": "1"},
					{"column1": "1400", "column2": "5"},
					{"column1": "1200", "column2": "10"},
					{"column1": "1000", "column2": "15"},
					{"column1": "800", "column2": "20"},
					{"column1": "600", "column2": "25"},
					{"column1": "", "column2": ""}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsMenu");
			dataSet_3.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "parent"}
				],
				"rows": [
					{"label": "선택해제", "value": "value1", "parent": ""},
					{"label": "순서이동", "value": "value2", "parent": ""},
					{"label": "다시 그리기 영역 표시", "value": "value3", "parent": ""},
					{"label": "디버거", "value": "value4", "parent": ""}
				]
			});
			app.register(dataSet_3);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "data/hddata2.json";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onSms1SubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onSms1SubmitSuccess);
			}
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "C열연Sch 조회/수정(Ver.4.2)";
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "192px",
					"height": "25px"
				});
				var group_2 = new cpr.controls.Container();
				// Layout
				var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
				flowLayout_1.scrollable = false;
				flowLayout_1.horizontalAlign = "right";
				flowLayout_1.verticalAlign = "middle";
				flowLayout_1.lineWrap = false;
				group_2.setLayout(flowLayout_1);
				(function(container){
					var output_2 = new cpr.controls.Output();
					output_2.value = "자동조회";
					container.addChild(output_2, {
						"autoSize": "width",
						"width": "75px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cmb2");
					comboBox_1.value = "value1";
					(function(comboBox_1){
						comboBox_1.addItem(new cpr.controls.Item("없음", "value1"));
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"autoSize": "none",
						"width": "75px",
						"height": "25px"
					});
					var button_1 = new cpr.controls.Button();
					button_1.value = "확정";
					container.addChild(button_1, {
						"autoSize": "width",
						"width": "75px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "";
					container.addChild(output_3, {
						"width": "50px",
						"height": "10px"
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "";
					container.addChild(output_4, {
						"width": "50px",
						"height": "10px"
					});
					var button_2 = new cpr.controls.Button();
					button_2.value = "조회";
					container.addChild(button_2, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_3 = new cpr.controls.Button();
					button_3.value = "기준관리";
					container.addChild(button_3, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_4 = new cpr.controls.Button();
					button_4.value = "리스케줄";
					container.addChild(button_4, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_5 = new cpr.controls.Button();
					button_5.value = "도움말";
					container.addChild(button_5, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "5px",
					"right": "5px",
					"left": "207px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container();
				group_3.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#c0c0c0",
					"border-right-width" : "1px",
					"border-left-color" : "#c0c0c0",
					"border-right-color" : "#c0c0c0",
					"border-left-width" : "1px",
					"border-top-style" : "solid",
					"background-color" : "#e1dada",
					"border-left-style" : "solid",
					"border-bottom-width" : "1px",
					"border-top-color" : "#c0c0c0",
					"border-bottom-style" : "solid"
				});
				// Layout
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.scrollable = false;
				formLayout_1.topMargin = "10px";
				formLayout_1.bottomMargin = "10px";
				formLayout_1.setColumns(["100px", "1fr", "5fr", "1fr", "1fr", "1fr", "1fr", "1fr", "1fr", "4fr"]);
				formLayout_1.setColumnMinWidth(0, 70);
				formLayout_1.setColumnMinWidth(1, 100);
				formLayout_1.setColumnMinWidth(3, 100);
				formLayout_1.setColumnMinWidth(4, 100);
				formLayout_1.setColumnMinWidth(5, 100);
				formLayout_1.setColumnMinWidth(6, 100);
				formLayout_1.setColumnMinWidth(7, 100);
				formLayout_1.setColumnMinWidth(8, 70);
				formLayout_1.setColumnMinWidth(9, 350);
				formLayout_1.setRows(["1fr"]);
				group_3.setLayout(formLayout_1);
				(function(container){
					var output_5 = new cpr.controls.Output();
					output_5.value = "Roll단위구분";
					output_5.style.css({
						"text-align" : "center"
					});
					container.addChild(output_5, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var comboBox_2 = new cpr.controls.ComboBox("cmb1");
					comboBox_2.value = "value1";
					(function(comboBox_2){
						comboBox_2.addItem(new cpr.controls.Item("전체 Roll", "value1"));
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"colIndex": 1,
						"rowIndex": 0,
						"horizontalAlign": "fill"
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "열연 = 12.31 10:43 [368 =(HCZ802E ~ HCZ807P) Y ]";
					output_6.style.css({
						"text-align" : "center"
					});
					container.addChild(output_6, {
						"colIndex": 9,
						"rowIndex": 0
					});
					var output_7 = new cpr.controls.Output();
					output_7.value = "확정단위";
					output_7.style.css({
						"text-align" : "center"
					});
					container.addChild(output_7, {
						"colIndex": 3,
						"rowIndex": 0
					});
					var output_8 = new cpr.controls.Output();
					output_8.value = "출강단위";
					output_8.style.css({
						"text-align" : "center"
					});
					container.addChild(output_8, {
						"colIndex": 5,
						"rowIndex": 0
					});
					var output_9 = new cpr.controls.Output();
					output_9.value = "가을단위";
					output_9.style.css({
						"text-align" : "center"
					});
					container.addChild(output_9, {
						"colIndex": 7,
						"rowIndex": 0
					});
					var inputBox_1 = new cpr.controls.InputBox("ipb1");
					inputBox_1.readOnly = true;
					inputBox_1.value = "482 / 12,656";
					inputBox_1.style.css({
						"background-color" : "#ECF5F9",
						"text-align" : "center"
					});
					container.addChild(inputBox_1, {
						"colIndex": 4,
						"rowIndex": 0
					});
					var inputBox_2 = new cpr.controls.InputBox("ipb2");
					inputBox_2.readOnly = true;
					inputBox_2.value = "585 / 16,244";
					inputBox_2.style.css({
						"background-color" : "#ECF5F9",
						"text-align" : "center"
					});
					container.addChild(inputBox_2, {
						"colIndex": 6,
						"rowIndex": 0
					});
					var inputBox_3 = new cpr.controls.InputBox("ipb3");
					inputBox_3.readOnly = true;
					inputBox_3.value = "0 / 0";
					inputBox_3.style.css({
						"background-color" : "#ECF5F9",
						"text-align" : "center"
					});
					container.addChild(inputBox_3, {
						"colIndex": 8,
						"rowIndex": 0
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "35px",
					"right": "5px",
					"left": "5px",
					"height": "45px"
				});
				var output_10 = new cpr.controls.Output();
				output_10.style.css({
					"cursor" : "pointer",
					"text-align" : "center"
				});
				output_10.bind("value").toExpression("#chartGrp.getLayout().isRowVisible(0) == true ? \"차트 -\" : \"차트 +\"");
				if(typeof onOutputClick == "function") {
					output_10.addEventListener("click", onOutputClick);
				}
				container.addChild(output_10, {
					"top": "85px",
					"left": "5px",
					"width": "50px",
					"height": "25px"
				});
				var group_4 = new cpr.controls.Container();
				// Layout
				var flowLayout_2 = new cpr.controls.layouts.FlowLayout();
				flowLayout_2.scrollable = false;
				flowLayout_2.horizontalAlign = "right";
				flowLayout_2.verticalAlign = "middle";
				flowLayout_2.lineWrap = false;
				group_4.setLayout(flowLayout_2);
				(function(container){
					var output_11 = new cpr.controls.Output();
					output_11.value = "차트 크기";
					container.addChild(output_11, {
						"autoSize": "width",
						"width": "66px",
						"height": "20px"
					});
					var slider_1 = new cpr.controls.Slider("sldZoom");
					slider_1.value = "100";
					slider_1.min = 30.0;
					slider_1.step = 1.0;
					if(typeof onSldZoomValueChange == "function") {
						slider_1.addEventListener("value-change", onSldZoomValueChange);
					}
					container.addChild(slider_1, {
						"autoSize": "none",
						"width": "70px",
						"height": "20px"
					});
					var output_12 = new cpr.controls.Output();
					output_12.value = "";
					container.addChild(output_12, {
						"width": "140px",
						"height": "14px"
					});
					var group_5 = new cpr.controls.Container();
					// Layout
					var xYLayout_3 = new cpr.controls.layouts.XYLayout();
					group_5.setLayout(xYLayout_3);
					(function(container){
					})(group_5);
					container.addChild(group_5, {
						"width": "200px",
						"height": "25px"
					});
					var button_6 = new cpr.controls.Button();
					button_6.value = "작업대상";
					container.addChild(button_6, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_7 = new cpr.controls.Button();
					button_7.value = "현물투입";
					container.addChild(button_7, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_8 = new cpr.controls.Button();
					button_8.value = "상태변경";
					container.addChild(button_8, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_9 = new cpr.controls.Button();
					button_9.value = "Roll순서변경";
					container.addChild(button_9, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_10 = new cpr.controls.Button();
					button_10.value = "보류/Sch삭제";
					container.addChild(button_10, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_11 = new cpr.controls.Button();
					button_11.value = "Lot통합";
					container.addChild(button_11, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_12 = new cpr.controls.Button();
					button_12.value = "Lot분리";
					container.addChild(button_12, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_13 = new cpr.controls.Button();
					button_13.value = "Roll분리/Type변경";
					container.addChild(button_13, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_14 = new cpr.controls.Button();
					button_14.value = "Roll편성";
					container.addChild(button_14, {
						"autoSize": "width",
						"width": "70px",
						"height": "25px"
					});
					var button_15 = new cpr.controls.Button();
					button_15.value = "엑셀";
					container.addChild(button_15, {
						"autoSize": "width",
						"width": "40px",
						"height": "25px"
					});
				})(group_4);
				container.addChild(group_4, {
					"top": "85px",
					"right": "5px",
					"left": "65px",
					"height": "25px"
				});
				var group_6 = new cpr.controls.Container("chartGrp");
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.horizontalSpacing = "0px";
				formLayout_2.verticalSpacing = "0px";
				formLayout_2.setColumns(["1fr"]);
				formLayout_2.setRows(["300px", "1fr"]);
				group_6.setLayout(formLayout_2);
				(function(container){
					var group_7 = new cpr.controls.Container();
					// Layout
					var xYLayout_4 = new cpr.controls.layouts.XYLayout();
					group_7.setLayout(xYLayout_4);
					(function(container){
						var group_8 = new cpr.controls.Container();
						group_8.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#cccccc",
							"border-right-width" : "1px",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-left-color" : "#cccccc",
							"border-top-color" : "#cccccc",
							"border-bottom-style" : "solid",
							"border-right-color" : "#cccccc",
							"border-left-width" : "1px",
							"border-top-style" : "solid"
						});
						// Layout
						var formLayout_3 = new cpr.controls.layouts.FormLayout();
						formLayout_3.horizontalSpacing = "0px";
						formLayout_3.verticalSpacing = "0px";
						formLayout_3.horizontalSeparatorWidth = 1;
						formLayout_3.verticalSeparatorWidth = 1;
						formLayout_3.setColumns(["100px", "100px", "1fr"]);
						formLayout_3.setRows(["25px", "25px", "1fr", "14px", "1fr", "17px"]);
						group_8.setLayout(formLayout_3);
						(function(container){
							var output_13 = new cpr.controls.Output();
							output_13.value = "폭";
							output_13.style.css({
								"background-color" : "#F0F9F4",
								"text-align" : "center"
							});
							container.addChild(output_13, {
								"colIndex": 0,
								"rowIndex": 2,
								"colSpan": 1,
								"rowSpan": 2
							});
							var output_14 = new cpr.controls.Output();
							output_14.value = "두께";
							output_14.style.css({
								"background-color" : "#E7EDF4",
								"text-align" : "center"
							});
							container.addChild(output_14, {
								"colIndex": 0,
								"rowIndex": 4
							});
							var group_9 = new cpr.controls.Container("BarChart");
							// Layout
							var xYLayout_5 = new cpr.controls.layouts.XYLayout();
							group_9.setLayout(xYLayout_5);
							(function(container){
							})(group_9);
							container.addChild(group_9, {
								"colIndex": 2,
								"rowIndex": 1,
								"colSpan": 1,
								"rowSpan": 5
							});
							var output_15 = new cpr.controls.Output();
							output_15.value = "2019.12.31 05:10";
							output_15.style.css({
								"background-color" : "#F5F5F5",
								"text-align" : "center"
							});
							container.addChild(output_15, {
								"colIndex": 0,
								"rowIndex": 0,
								"colSpan": 2,
								"rowSpan": 2
							});
							var group_10 = new cpr.controls.Container("widthLine");
							group_10.style.css({
								"background-color" : "#F0F9F4"
							});
							// Layout
							var xYLayout_6 = new cpr.controls.layouts.XYLayout();
							xYLayout_6.scrollable = false;
							group_10.setLayout(xYLayout_6);
							(function(container){
							})(group_10);
							container.addChild(group_10, {
								"colIndex": 1,
								"rowIndex": 2,
								"colSpan": 1,
								"rowSpan": 2
							});
							var group_11 = new cpr.controls.Container("thickLine");
							group_11.style.css({
								"background-color" : "#E7EDF4"
							});
							// Layout
							var xYLayout_7 = new cpr.controls.layouts.XYLayout();
							xYLayout_7.scrollable = false;
							group_11.setLayout(xYLayout_7);
							(function(container){
							})(group_11);
							container.addChild(group_11, {
								"colIndex": 1,
								"rowIndex": 4
							});
							var group_12 = new cpr.controls.Container();
							// Layout
							var xYLayout_8 = new cpr.controls.layouts.XYLayout();
							group_12.setLayout(xYLayout_8);
							(function(container){
							})(group_12);
							container.addChild(group_12, {
								"colIndex": 0,
								"rowIndex": 5,
								"colSpan": 2,
								"rowSpan": 1
							});
							var group_13 = new cpr.controls.Container();
							group_13.style.css({
								"background-color" : "#F5F5F5"
							});
							// Layout
							var formLayout_4 = new cpr.controls.layouts.FormLayout();
							formLayout_4.scrollable = false;
							formLayout_4.horizontalSpacing = "7px";
							formLayout_4.verticalSpacing = "0px";
							formLayout_4.setColumns(["25px", "65px", "25px", "65px", "25px", "65px", "25px", "65px", "25px", "65px"]);
							formLayout_4.setRows(["1fr"]);
							group_13.setLayout(formLayout_4);
							(function(container){
								var output_16 = new cpr.controls.Output();
								output_16.value = "";
								output_16.style.css({
									"background-color" : "#2b2b2b"
								});
								container.addChild(output_16, {
									"colIndex": 0,
									"rowIndex": 0,
									"topSpacing": 3,
									"rightSpacing": 3,
									"bottomSpacing": 3,
									"leftSpacing": 3
								});
								var output_17 = new cpr.controls.Output();
								output_17.value = "압연완료";
								container.addChild(output_17, {
									"colIndex": 1,
									"rowIndex": 0
								});
								var output_18 = new cpr.controls.Output();
								output_18.value = "";
								output_18.style.css({
									"background-color" : "#5a9a70"
								});
								container.addChild(output_18, {
									"colIndex": 2,
									"rowIndex": 0,
									"topSpacing": 3,
									"rightSpacing": 3,
									"bottomSpacing": 3,
									"leftSpacing": 3
								});
								var output_19 = new cpr.controls.Output();
								output_19.value = "장입추출";
								container.addChild(output_19, {
									"colIndex": 3,
									"rowIndex": 0
								});
								var output_20 = new cpr.controls.Output();
								output_20.value = "";
								output_20.style.css({
									"background-color" : "#8a6e3f"
								});
								container.addChild(output_20, {
									"colIndex": 4,
									"rowIndex": 0,
									"topSpacing": 3,
									"rightSpacing": 3,
									"bottomSpacing": 3,
									"leftSpacing": 3
								});
								var output_21 = new cpr.controls.Output();
								output_21.value = "변불대상";
								container.addChild(output_21, {
									"colIndex": 5,
									"rowIndex": 0
								});
								var output_22 = new cpr.controls.Output();
								output_22.value = "";
								output_22.style.css({
									"background-color" : "#df5947"
								});
								container.addChild(output_22, {
									"colIndex": 6,
									"rowIndex": 0,
									"topSpacing": 3,
									"rightSpacing": 3,
									"bottomSpacing": 3,
									"leftSpacing": 3
								});
								var output_23 = new cpr.controls.Output();
								output_23.value = "HCR";
								container.addChild(output_23, {
									"colIndex": 7,
									"rowIndex": 0
								});
								var output_24 = new cpr.controls.Output();
								output_24.value = "";
								output_24.style.css({
									"background-color" : "#6eb0fd"
								});
								container.addChild(output_24, {
									"colIndex": 8,
									"rowIndex": 0,
									"topSpacing": 3,
									"rightSpacing": 3,
									"bottomSpacing": 3,
									"leftSpacing": 3
								});
								var output_25 = new cpr.controls.Output();
								output_25.value = "CCR";
								container.addChild(output_25, {
									"colIndex": 9,
									"rowIndex": 0
								});
							})(group_13);
							container.addChild(group_13, {
								"colIndex": 2,
								"rowIndex": 0
							});
						})(group_8);
						container.addChild(group_8, {
							"top": "0px",
							"right": "0px",
							"bottom": "0px",
							"left": "0px"
						});
					})(group_7);
					container.addChild(group_7, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var group_14 = new cpr.controls.Container();
					// Layout
					var xYLayout_9 = new cpr.controls.layouts.XYLayout();
					group_14.setLayout(xYLayout_9);
					(function(container){
						var grid_1 = new cpr.controls.Grid("grd1");
						grid_1.init({
							"dataSet": app.lookup("DSData2"),
							"columns": [
								{
									"width": "25px",
									"visible": false
								},
								{"width": "40px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"}
							],
							"header": {
								"rows": [{"height": "35"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.filterable = false;
											cell.sortable = false;
											cell.columnType = "checkbox";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.targetColumnName = "idxNum";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "순서";
											cell.style.css({
												"background-color" : "#e8f5ff"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.targetColumnName = "startTime";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "시작시간";
											cell.style.css({
												"background-color" : "#e8f5ff"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.targetColumnName = "timeGeb";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "시간차이";
											cell.style.css({
												"background-color" : "#e8f5ff"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.targetColumnName = "dataTop";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "탑";
											cell.style.css({
												"background-color" : "#e8f5ff"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.targetColumnName = "dataDown";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "바텀";
											cell.style.css({
												"background-color" : "#e8f5ff"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.targetColumnName = "dataType";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "타입";
											cell.style.css({
												"background-color" : "#e8f5ff"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.targetColumnName = "dataLineNum";
											cell.filterable = false;
											cell.sortable = false;
											cell.text = "라인넘버";
											cell.style.css({
												"background-color" : "#e8f5ff"
											});
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "24px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "checkbox";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "idxNum";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "startTime";
											cell.style.css({
												"color" : "#ba6631"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "timeGeb";
											cell.style.css({
												"color" : "#0600ff"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "dataTop";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "dataDown";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "dataType";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "dataLineNum";
											cell.style.css({
												"color" : "red"
											});
										}
									}
								]
							}
						});
						grid_1.style.row.bind("background-color").toExpression("checked == true ? \"yellow\" : \"white\"");
						grid_1.style.css({
							"border-top-width" : "3px",
							"border-top-color" : "#7498b9"
						});
						container.addChild(grid_1, {
							"top": "0px",
							"right": "0px",
							"bottom": "0px",
							"left": "0px"
						});
					})(group_14);
					container.addChild(group_14, {
						"colIndex": 0,
						"rowIndex": 1
					});
				})(group_6);
				container.addChild(group_6, {
					"top": "115px",
					"right": "5px",
					"bottom": "5px",
					"left": "5px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "10px",
				"right": "10px",
				"bottom": "10px",
				"left": "10px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "압연스케줄 조회/수정";
	cpr.core.Platform.INSTANCE.register(app);
})();
