/*
 * App URI: 202101/trans
 * Source Location: 202101/trans.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202101/trans", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * trans.js
			 * Created at 2021. 1. 6. 오전 11:10:34.
			 *
			 * @author HANS
			 ************************************************/
			
			//app.lookup("ea1").getEmbeddedAppInstance() = 
			
			
			cpr.core.Platform.INSTANCE.initParameter({"WRSG":"zzzz"});
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
			//	var opener = window.opener;
				
			//	console.log(opener);
			//	var ril = "";
			//	
			//	try{
			//		if(opener){
			//			
			//			ril = opener.document.URL;
			//		} else {
			//			
			//			throw new Error("접근할 수 없습니다");
			//		}	
			//	}catch(err){
			//		console.log(err);
			//		ril = "";	
			//	}		
			//	var ur = window.document.URL;
			//	if (ril.indexOf("tester") == -1) {
			//		alert("zz");
			//	} else {
			//		alert("슈발ㅋㅋ");
			//		cpr.core.App.load("202101/Host", function(loadedApp){
			//			loadedApp.createNewInstance().run();
			//			app.close();
			//		});
			//	}
			//	var vsRequestURL = "";
			//	try{
			//		if(voOpener){
			//			
			//			vsRequestURL = voOpener.document.URL;
			//		} else {
			//			
			//			throw new Error("접근할 수 없습니다");
			//		}	
			//	}catch(err){
			//		vsRequestURL = "";	
			//	}		
			//	var vsSelfURL = window.document.URL;
			//	console.log(vsSelfURL);
			//	console.log(vsRequestURL);
			//	if( vsSelfURL.indexOf("freesisd.kofia.or.kr") >= 0  ) {
			//   				if( vsRequestURL.indexOf("workd.kofia.or.kr")  ==-1 && 
			//   					vsRequestURL.indexOf("mgmtd.kofia.or.kr")  ==-1	) {
			//   		   			cpr.core.App.load("app/com/main/Message", function(loadedApp){
			//   		   				cpr.core.Platform.INSTANCE.initParameter({"WMSG":"접근가능한 화면이 아닙니다."});
			//   		   				loadedApp.createNewInstance().run();
			//   		   				app.close();
			//   		   			});
			//   				}
			//   			}else{
			//   				console.log(vsRequestURL.indexOf("localhost:8080"));
			//   				if( vsRequestURL.indexOf("localhost:8080")  ==-1 && 
			//   	   					vsRequestURL.indexOf("mgmt.kofia.or.kr")  ==-1	) {
			//						cpr.core.App.load("app/com/main/Message", function(loadedApp){
			//   		   				cpr.core.Platform.INSTANCE.initParameter({"WMSG":"접근가능한 화면이 아닙니다."});
			//   		   				loadedApp.createNewInstance().run();
			//   		   				app.close();
			//   		   			});
			//   	   			} 
			//   			} 
				
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				console.log(document.referrer);
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				console.log(window);
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				console.log(document.domain);
				document.domain = "test.com";
				console.log(document.domain);
				console.log(window.opener.location.hostname);
			}
			
			
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				
				app.lookup("ea1").getEmbeddedAppInstance() = app.lookup("ea2").getEmbeddedAppInstance();
				
				cpr.core.AppInstance.
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"},
					{"name": "column4"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "column45"}
				]
			});
			if(typeof onDs1Sort == "function") {
				dataSet_1.addEventListener("sort", onDs1Sort);
			}
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "DOC.REF";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "50px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "opener";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "80px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "Output";
			container.addChild(output_1, {
				"top": "20px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_2 = new cpr.controls.Output("opt2");
			output_2.value = "Output";
			container.addChild(output_2, {
				"top": "39px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_3 = new cpr.controls.Output("opt3");
			output_3.value = "Output";
			container.addChild(output_3, {
				"top": "58px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_4 = new cpr.controls.Output("opt4");
			output_4.value = "Output";
			container.addChild(output_4, {
				"top": "80px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_5 = new cpr.controls.Output("opt5");
			output_5.value = "Output";
			container.addChild(output_5, {
				"top": "99px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_6 = new cpr.controls.Output("opt6");
			output_6.value = "Output";
			container.addChild(output_6, {
				"top": "118px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("ds1"),
				"columns": [
					{"width": "50px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "column4";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "column4";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "column4";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "159px",
				"left": "20px",
				"width": "400px",
				"height": "200px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("ea1");
			cpr.core.App.load("202101/test26", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "50px",
				"left": "451px",
				"width": "320px",
				"height": "240px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("ea2");
			cpr.core.App.load("202008/CH01", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "300px",
				"left": "451px",
				"width": "320px",
				"height": "240px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Button";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "58px",
				"left": "781px",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "trans";
	cpr.core.Platform.INSTANCE.register(app);
})();
