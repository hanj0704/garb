/*
 * App URI: 202101/flowChart
 * Source Location: 202101/flowChart.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202101/flowChart", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * flowChart.js
			 * Created at 2020. 12. 7. 오전 11:38:31.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var flow = app.lookup("ch");
				flow.arrowType = "diagonal";
				flow.drawProcess(app.lookup("ds1"), flow.getActualRect().width);
			}
			
			
			
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick4(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var flow = app.lookup("ch");
				flow.arrowType = "straight";
				flow.drawProcess(app.lookup("ds1"), flow.getActualRect().width);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"alterColumnLayout": "server",
				"columns": [
					{"name": "processNm"},
					{
						"name": "value",
						"dataType": "number"
					},
					{
						"name": "sortNum",
						"dataType": "number"
					},
					{
						"name": "arrowValue",
						"dataType": "number"
					},
					{"name": "progress"}
				],
				"rows": [
					{"processNm": "연간사업추진일정", "value": "1", "sortNum": "0", "arrowValue": "0", "progress": "완료"},
					{"processNm": "정보보호대책서", "value": "2", "sortNum": "0", "arrowValue": "0", "progress": "완료"},
					{"processNm": "사업예산산정", "value": "2", "sortNum": "1", "arrowValue": "1", "progress": "진행중"},
					{"processNm": "체계규격심의", "value": "2", "sortNum": "2", "arrowValue": "0", "progress": "대기"},
					{"processNm": "사업계획수립", "value": "3", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm23", "value": "3", "sortNum": "1", "arrowValue": "0", "progress": "대기"},
					{"processNm": "제안요청서검토", "value": "4", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm7", "value": "5", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm8", "value": "6", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm9", "value": "7", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm10", "value": "8", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm11", "value": "9", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm12", "value": "10", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm13", "value": "11", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm14", "value": "12", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm15", "value": "13", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm16", "value": "14", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm17", "value": "15", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm18", "value": "16", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm19", "value": "16", "sortNum": "2", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm20", "value": "17", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm21", "value": "18", "sortNum": "0", "arrowValue": "0", "progress": "대기"},
					{"processNm": "processNm22", "value": "19", "sortNum": "0", "arrowValue": "0", "progress": "대기"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "arrow";
			if(typeof onButtonClick2 == "function") {
				button_1.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var userDefinedControl_1 = new udc.flowChart.flow("ch");
			container.addChild(userDefinedControl_1, {
				"top": "50px",
				"right": "20px",
				"left": "20px",
				"height": "538px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "vector";
			if(typeof onButtonClick4 == "function") {
				button_2.addEventListener("click", onButtonClick4);
			}
			container.addChild(button_2, {
				"top": "20px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "flowChart";
	cpr.core.Platform.INSTANCE.register(app);
})();
