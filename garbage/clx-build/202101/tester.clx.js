/*
 * App URI: 202101/tester
 * Source Location: 202101/tester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202101/tester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * tester.js
			 * Created at 2021. 1. 4. 오후 3:15:29.
			 *
			 * @author HANS
			 ************************************************/
			
			/**
			 * Select DOM의 value change 이벤트를 처리합니다.
			 */
			function selectListener(/* Event */ e){
				// 앱의 value 속성 변경
				app.setAppProperty("value", e.target.value, true);
						
				// value-change 이벤트 디스패치.
				var changeEvent = new cpr.events.CValueChangeEvent("value-change", {
					newValue:e.target.value
				});
				
				app.dispatchEvent(changeEvent);
			}
			
			
			/*
			 * 쉘에서 init 이벤트 발생 시 호출.
			 */
			function onShl1Init(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.UIControlShell
				 */
				var shl1 = e.control;
				
			//	if(e.content){
			//		/** @type {HTMLSelectElement} */
			//		var select = e.content.querySelector("select");
			//		if(select){
			//			select.removeEventListener("change", selectListener);
			//		}
			//	}
			}
			
			
			/*
			 * 쉘에서 load 이벤트 발생 시 호출.
			 */
			function onShl1Load(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.UIControlShell
				 */
				var shl1 = e.control;
				/** 
				 * @type cpr.controls.UIControlShell
				 */
				var shell = e.control;
				var rootDiv = e.content;
				
				var select = document.createElement("select");
				select.style.position = "absolute";
				select.style.width = "100%";
				select.style.height = "100%";
				select.style.borderRadius = "0px";
				select.setAttribute("class", "cl-control cl-combobox cl-text");
				select.style["-webkit-appearance"] = "none";
				
					var currentValue = app.getAppProperty("value");
					
					/** @type {cpr.data.DataSet} */
					var dataSet = app.lookup("ds1")
					var labelColumnName = "label";
					var valueColumnName = "value";
					
						select.disabled = false;
						select.style.background = "#fff";
					
					var rowCount = dataSet.getRowCount();
					var row;
					var option = document.createElement("option");
					option.setAttribute("value","");
					select.appendChild(option);
					for(var idx = 0;idx < rowCount;idx++){
						(function(){
							var row = dataSet.getRow(idx);
							var option = document.createElement("option");
							var value = row.getValue(valueColumnName);
							option.setAttribute("value", value);
							option.textContent = row.getValue(labelColumnName);
							if(value == currentValue){
								option.setAttribute("selected", true);
							}
							select.appendChild(option);
						})();
					}
					select.addEventListener("change", selectListener);
				
				e.content.appendChild(select);
			}
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				app.lookup("grd1").addColumn({
					columnLayout: [{
						width: "100px"
					}],
					header : [{
						constraint: {
							rowIndex : 0,
							colIndex : 3
						},
						configurator: function(cell){
							cell.text = "headerText";
						}
					}],
					detail: [{
						constraint: {
							rowIndex : 0,
							colIndex : 3
						},
						configurator: function(cell){
							cell.columnName = "";
						}
					}]
				});
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				
				var ds = app.lookup("ds2");
				
				ds.getHeaders().forEach(function(each){
					console.log(each.getDataType());
				});
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				var btns = new cpr.controls.Button();
				btns.value = "Zz";
				btns.addEventListener("click", function(e){
					
					app.getContainer().insertChild(5, e.control,{
						width : "100px",
					height:	"30px",
					left : "20px",
					top : "20px"
					});
				});
				app.getContainer().addChild( btns, {
					width : "100px",
					height:	"30px",
					left : "20px",
					top : "20px"
				});
			}
			
			
			/*
			 * "Button" 버튼(btn4)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn4 = e.control;
				
				window.open("http://localhost:8080/simples/hey.do","_popup","width=400,height=500,modal=true");
			}
			
			
			/*
			 * "Button" 버튼(btn5)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn5Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn5 = e.control;
				
				console.log(document.domain);
			}
			
			
			/*
			 * "Button" 버튼(btn6)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn6Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn6 = e.control;
				
				var ref = document.createElement("a");
				ref.href = "http://localhost:8080/simples/hey.do";
				ref.target = "_blank";
				ref.style.display = "none";
				ref.addEventListener("click",function(){
					window.open(this.href,"_blank","width=400,height=500,modal=true");
				});
				document.body.appendChild(ref);
			//	window.open("about:blank","han","width=400,height=500,modal=true");
				ref.click();
			//var refer=document.createElement('a');
			
			//refer.href="http://localhost:8080/simples/hey.do";
			//
			//refer.target='popupname';
			//
			//refer.style.display='none';
			//
			//document.body.appendChild(refer);
			
			//window.open('http://localhost:8080/simples/hey.do', 'popupname', 'width=500, height=500, resizable=no, status=no, scrollbars=no');
			
			//refer.click();
			
			}
			
			
			/*
			 * "Button" 버튼(btn7)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn7Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn7 = e.control;
				var w = window.open("blank.htm","_blank","~~~~")
				var f = document.createElement('form');
				f.action = "http://localhost:8080/simples/hey.do";
				f.target = "_blank";
			document.body.appendChild(f); // 이걸 안 해줄 경우 IE에서 submit이 안됨(크롬에서는 없어도 동작)
			f.submit();
			f.parentNode.removeChild(f);
			}
			
			
			/*
			 * "Button" 버튼(btn8)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn8Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn8 = e.control;
				
				//http://127.0.0.1:52194/~~에서 접근함.
			    var myWindow = window.open('','popup',"width=400,height=500,modal=true");
			    myWindow.location.href = 'http://localhost:8080/simples/hey.do';
			}
			
			
			/*
			 * "Button" 버튼(btn9)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn9Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn9 = e.control;
					window.open("./202101/trans.clx.html","_popup","width=400,height=500,modal=true");
			}
			
			
			/*
			 * "Button" 버튼(btn10)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn10Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn10 = e.control;
				document.domain = "test.com";
				var a = window.open("http://han.test.com:8080/garbage-webs/simples/hey.do","_popup","width=400,height=500,modal=true");
				
			}
			
			
			/*
			 * "Button" 버튼(btn11)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn11Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn11 = e.control;
				
				
			}
			
			
			/*
			 * "Button" 버튼(btn12)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn12Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn12 = e.control;
				
				
				app.lookup("sms3").send();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{
						"name": "value",
						"dataType": "number"
					},
					{
						"name": "parentV",
						"dataType": "number"
					}
				],
				"rows": [
					{"label": "label1", "value": "1", "parentV": "0"},
					{"label": "label2", "value": "2", "parentV": "1"},
					{"label": "label3", "value": "3", "parentV": "1"},
					{"label": "label4", "value": "4", "parentV": "1"},
					{"label": "label5", "value": "5", "parentV": "1"},
					{"label": "label6", "value": "6", "parentV": "2"},
					{"label": "label7", "value": "7", "parentV": "2"},
					{"label": "label8", "value": "8", "parentV": "2"},
					{"label": "label9", "value": "9", "parentV": "2"},
					{"label": "label10", "value": "10", "parentV": "0"},
					{"label": "label11", "value": "11", "parentV": "0"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds2");
			dataSet_2.parseData({
				"columns" : [
					{"name": "column1"},
					{
						"name": "column2",
						"dataType": "number"
					},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("mainDS");
			dataSet_3.parseData({
				"sortCondition": "column6 DESC",
				"columns": [
					{"name": "column1"},
					{
						"name": "column2",
						"dataType": "string"
					},
					{"name": "column3"},
					{"name": "column4"},
					{"name": "column5"},
					{
						"name": "column6",
						"dataType": "number"
					},
					{
						"name": "column7",
						"dataType": "number"
					},
					{
						"name": "column8",
						"dataType": "number"
					},
					{
						"name": "column9",
						"dataType": "number"
					}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": "column31", "column4": "column41", "column5": "column51", "column6": "1", "column7": "1", "column8": "1", "column9": "1"},
					{"column1": "column12", "column2": "column22", "column3": "column32", "column4": "column42", "column5": "column52", "column6": "2", "column7": "2", "column8": "2", "column9": "2"},
					{"column1": "column13", "column2": "column23", "column3": "column33", "column4": "column43", "column5": "column53", "column6": "3", "column7": "3", "column8": "3", "column9": "3"},
					{"column1": "column18", "column2": "column28", "column3": "column38", "column4": "column48", "column5": "column58", "column6": "8", "column7": "8", "column8": "8", "column9": "8"},
					{"column1": "column17", "column2": "column27", "column3": "column37", "column4": "column47", "column5": "column57", "column6": "7", "column7": "7", "column8": "7", "column9": "7"},
					{"column1": "column15", "column2": "column25", "column3": "column35", "column4": "column45", "column5": "column55", "column6": "5", "column7": "5", "column8": "5", "column9": "5"},
					{"column1": "column14", "column2": "column24", "column3": "column34", "column4": "column44", "column5": "column54", "column6": "4", "column7": "4", "column8": "4", "column9": "4"},
					{"column1": "column16", "column2": "column26", "column3": "column36", "column4": "column46", "column5": "column56", "column6": "6", "column7": "6", "column8": "6", "column9": "6"}
				]
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("ds3");
			dataSet_4.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"},
					{"name": "iconC"}
				],
				"rows": [
					{"label": "label1", "value": "value1", "iconC": "url('theme/hanhwa/images/access_group.png')"},
					{"label": "label2", "value": "value2", "iconC": "url('theme/hanhwa/images/access_group.png')"},
					{"label": "label3", "value": "value3", "iconC": "url('theme/hanhwa/images/access_group.png')"},
					{"label": "label4", "value": "value4", "iconC": "url('theme/hanhwa/images/access_group.png')"},
					{"label": "label5", "value": "value5", "iconC": "url('theme/hanhwa/images/access_group.png')"}
				]
			});
			app.register(dataSet_4);
			var submission_1 = new cpr.protocols.Submission("sms1");
			submission_1.action = "/simples/hey.do";
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms2");
			submission_2.action = "/simples/hi.do";
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("sms3");
			submission_3.action = "/simples/massList.do";
			submission_3.addResponseData(dataSet_3, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("mainDS"),
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "column1";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "column2";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "column3";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "column4";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "column5";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "column6";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column6";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.targetColumnName = "column7";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column7";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.targetColumnName = "column8";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column8";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.targetColumnName = "column9";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "column9";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "32px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "column1";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "column2";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "column3";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "column4";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "column5";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "column6";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "column7";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "column8";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.columnName = "column9";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "20px",
				"right": "20px",
				"left": "20px",
				"height": "205px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cmb1");
			(function(comboBox_1){
				comboBox_1.setItemSet(app.lookup("ds1"), {
					"label": "label",
					"value": "value"
				});
			})(comboBox_1);
			container.addChild(comboBox_1, {
				"top": "271px",
				"left": "818px",
				"width": "115px",
				"height": "30px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "297px",
				"left": "719px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "327px",
				"left": "719px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "331px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_4 = new cpr.controls.Button("btn4");
			button_4.value = "Button";
			if(typeof onBtn4Click == "function") {
				button_4.addEventListener("click", onBtn4Click);
			}
			container.addChild(button_4, {
				"top": "331px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_5 = new cpr.controls.Button("btn5");
			button_5.value = "Button";
			if(typeof onBtn5Click == "function") {
				button_5.addEventListener("click", onBtn5Click);
			}
			container.addChild(button_5, {
				"top": "301px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_6 = new cpr.controls.Button("btn6");
			button_6.value = "Button";
			if(typeof onBtn6Click == "function") {
				button_6.addEventListener("click", onBtn6Click);
			}
			container.addChild(button_6, {
				"top": "361px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_7 = new cpr.controls.Button("btn7");
			button_7.value = "Button";
			if(typeof onBtn7Click == "function") {
				button_7.addEventListener("click", onBtn7Click);
			}
			container.addChild(button_7, {
				"top": "391px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_8 = new cpr.controls.Button("btn8");
			button_8.value = "Button";
			if(typeof onBtn8Click == "function") {
				button_8.addEventListener("click", onBtn8Click);
			}
			container.addChild(button_8, {
				"top": "421px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_9 = new cpr.controls.Button("btn9");
			button_9.value = "Button";
			if(typeof onBtn9Click == "function") {
				button_9.addEventListener("click", onBtn9Click);
			}
			container.addChild(button_9, {
				"top": "361px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_10 = new cpr.controls.Button("btn10");
			button_10.value = "Button";
			if(typeof onBtn10Click == "function") {
				button_10.addEventListener("click", onBtn10Click);
			}
			container.addChild(button_10, {
				"top": "331px",
				"left": "240px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_11 = new cpr.controls.Button("btn11");
			button_11.value = "Button";
			if(typeof onBtn11Click == "function") {
				button_11.addEventListener("click", onBtn11Click);
			}
			container.addChild(button_11, {
				"top": "271px",
				"left": "598px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output("opt1");
			output_1.value = "Output";
			output_1.style.css({
				"vertical-align" : "bottom"
			});
			container.addChild(output_1, {
				"top": "271px",
				"left": "373px",
				"width": "156px",
				"height": "97px"
			});
			
			var button_12 = new cpr.controls.Button("btn12");
			button_12.value = "Button";
			if(typeof onBtn12Click == "function") {
				button_12.addEventListener("click", onBtn12Click);
			}
			container.addChild(button_12, {
				"top": "235px",
				"right": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var radioButton_1 = new cpr.controls.RadioButton("rdb1");
			radioButton_1.style.css({
				"background-image" : "none"
			});
			radioButton_1.style.icon.bind("background-image").toDataColumn("iconC");
			(function(radioButton_1){
				radioButton_1.setItemSet(app.lookup("ds3"), {
					"label": "label",
					"value": "value"
				})
			})(radioButton_1);
			container.addChild(radioButton_1, {
				"top": "380px",
				"left": "261px",
				"width": "472px",
				"height": "42px"
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			group_1.style.setClasses(["cl-form-group"]);
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.setColumns(["1fr"]);
			formLayout_1.setRows(["65px", "30px"]);
			formLayout_1.setRowAutoSizing(0, true);
			group_1.setLayout(formLayout_1);
			(function(container){
			})(group_1);
			container.addChild(group_1, {
				"top": "451px",
				"left": "20px",
				"width": "465px",
				"height": "119px"
			});
			
			var group_2 = new cpr.controls.Container("grp3");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_2);
			(function(container){
			})(group_2);
			container.addChild(group_2, {
				"top": "440px",
				"left": "528px",
				"width": "298px",
				"height": "224px"
			});
			
			var group_3 = new cpr.controls.Container("grp2");
			group_3.style.setClasses(["cl-form-group"]);
			// Layout
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.topMargin = "0px";
			formLayout_2.rightMargin = "0px";
			formLayout_2.bottomMargin = "0px";
			formLayout_2.leftMargin = "0px";
			formLayout_2.horizontalSpacing = "0px";
			formLayout_2.verticalSpacing = "5px";
			formLayout_2.setColumns(["1fr"]);
			formLayout_2.setRows(["30px", "30px"]);
			group_3.setLayout(formLayout_2);
			(function(container){
			})(group_3);
			container.addChild(group_3, {
				"top": "580px",
				"left": "20px",
				"width": "465px",
				"height": "65px"
			});
		}
	});
	app.title = "tester";
	cpr.core.Platform.INSTANCE.register(app);
})();
