/*
 * App URI: 202101/socket
 * Source Location: 202101/socket.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202101/socket", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * socket.js
			 * Created at 2021. 1. 29. 오전 9:31:13.
			 *
			 * @author HANS
			 ************************************************/
			var webs = null;
			
			
			/*
			 * "Button" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn1 = e.control;
				webs = new WebSocket("ws://localhost:8080/echo");
				
				webs.onopen = function(event) {
					console.log("WebSocket is connected");
				}
				
				webs.onmessage = function(event){
					var message = event.data;
					console.log(message);
					
					var json = JSON.parse(message);
					
					var bot = app.lookup("bot");
					bot.controlArm(parseInt(json["arm"]));
					bot.controlDirection(parseInt(json["direction"]));
					bot.controlPicker(parseInt(json["pick"]));
				};
				
				webs.onerror = function(error){
					console.log(error);
				}
			}
			
			
			/*
			 * "Button" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn2 = e.control;
				var json = {
					"direction" : "180",
					"pal" : "0",
					"zip" : "100"
				}
				
				var a = JSON.stringify(json);
				webs.send(a);
			}
			
			
			/*
			 * "Button" 버튼(btn3)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btn3 = e.control;
				app.lookup("bot").moveDebug(100);
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.svg.PickingBot("bot");
			container.addChild(userDefinedControl_1, {
				"top": "134px",
				"left": "184px",
				"width": "188px",
				"height": "175px"
			});
			
			var button_1 = new cpr.controls.Button("btn1");
			button_1.value = "Button";
			if(typeof onBtn1Click == "function") {
				button_1.addEventListener("click", onBtn1Click);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btn2");
			button_2.value = "Button";
			if(typeof onBtn2Click == "function") {
				button_2.addEventListener("click", onBtn2Click);
			}
			container.addChild(button_2, {
				"top": "20px",
				"left": "130px",
				"width": "100px",
				"height": "20px"
			});
			
			var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.svg.PockingBotConsole();
			container.addChild(userDefinedControl_2, {
				"top": "64px",
				"left": "630px",
				"width": "300px",
				"height": "150px"
			});
			
			var button_3 = new cpr.controls.Button("btn3");
			button_3.value = "Button";
			if(typeof onBtn3Click == "function") {
				button_3.addEventListener("click", onBtn3Click);
			}
			container.addChild(button_3, {
				"top": "20px",
				"left": "240px",
				"width": "100px",
				"height": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.bot = linker.userDefinedControl_1;
		}
	});
	app.title = "socket";
	cpr.core.Platform.INSTANCE.register(app);
})();
