/*
 * App URI: 202101/d3Sample
 * Source Location: 202101/d3Sample.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202101/d3Sample", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * d3Sample.js
			 * Created at 2021. 1. 27. 오후 5:49:26.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * 쉘에서 load 이벤트 발생 시 호출.
			 */
			function onShl1Load(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type cpr.controls.UIControlShell
				 */
				var shl1 = e.control;
				
				var wrapperdiv = e.content;
				
				var xmlns = "http://www.w3.org/2000/svg";
				var svgElem = document.createElementNS(xmlns, "svg");
				svgElem.setAttribute("id", "hans");
				svgElem.setAttributeNS(null, "width", "100%");
				svgElem.setAttributeNS(null, "height", "100%");
				svgElem.style.display = "block";
				var dm = document.createElement("div");
				
				wrapperdiv.appendChild(svgElem);
				
				//쉘사용 기본 설정입니다
				var svg = d3.select("svg");
				var margin = {top:10,right:30,bottom:30,left:60};
				var width = 460 - margin.left - margin.right;
				var height = 400 - margin.top - margin.bottom;
				
				
				svg.append("svg")
				.attr("width",width + margin.left + margin.right)
				.attr("height",height + margin.top + margin.bottom)
				.append("g")
				.attr("transform","translate("+margin.left+","+margin.top+")");
				
				d3.csv("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered_comma.csv",
				function(d){
						return {data:d3.timeParse("%Y-%m-%d")(d.date),value:d.value}
					},
					function(data){
						var x = d3.scaleTime()
						.domain(d3.extent(data,function(d){return d.date;}))
						.range([0,width]);
						
						svg.append("g")
						.attr("transform","translate(0,"+height+")")
						.call(d3.axisBottom(x));
						
						
						var y = d3.scaleLinear()
						.domain([0,d3.max(data,function(d){return +d.value;})])
						.range([height,0]);
						
						svg.append("g")
						.call(d3.axisLeft(y));
						
						
						 svg.append("path")
			      .datum(data)
			      .attr("fill", "none")
			      .attr("stroke", "steelblue")
			      .attr("stroke-width", 1.5)
			      .attr("d", d3.line()
			        .x(function(d) { return x(d.date) })
			        .y(function(d) { return y(d.value) })
			        )
					}
				)
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var uIControlShell_1 = new cpr.controls.UIControlShell("shl1");
			if(typeof onShl1Load == "function") {
				uIControlShell_1.addEventListener("load", onShl1Load);
			}
			container.addChild(uIControlShell_1, {
				"top": "54px",
				"right": "20px",
				"left": "20px",
				"height": "394px"
			});
		}
	});
	app.title = "d3Sample";
	cpr.core.Platform.INSTANCE.register(app);
})();
