/*
 * App URI: 202011/3-GridFilter
 * Source Location: 202011/3-GridFilter.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202011/3-GridFilter", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * GridFilter.js
			 * Created at 2019. 9. 17. 오후 4:38:12.
			 *
			 * @author HANS
			 ************************************************/
			
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				app.lookup("subList").send();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "id",
						"dataType": "number"
					},
					{"name": "first_name"},
					{"name": "last_name"},
					{"name": "email"},
					{"name": "gender"},
					{"name": "ip_address"}
				]
			});
			app.register(dataSet_1);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "202011/GridExamData.json";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output();
			output_1.value = "그리드 정렬, 필터, supress";
			container.addChild(output_1, {
				"top": "10px",
				"right": "30px",
				"left": "10px",
				"height": "25px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.readOnly = false;
			grid_1.init({
				"dataSet": app.lookup("dsList"),
				"columnMovable": false,
				"selectionUnit": "cell",
				"topSplitHeight": 30,
				"bottomSplitHeight": 30,
				"resizableColumns": "none",
				"suppressedCellType": "merged",
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.targetColumnName = "id";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "id";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "first_name";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "first_name";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "last_name";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "last_name";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "email";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "email";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "gender";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "gender";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "ip_address";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "ip_address";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "id";
								cell.suppressible = true;
								cell.mergedColumnName = "first_name";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "first_name";
								cell.suppressible = true;
								cell.mergeToIndexExpr = "first_name == last_name ? 2 : 1";
								cell.mergedColumnName = "last_name";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "last_name";
								cell.suppressible = true;
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "email";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "gender";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "ip_address";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "45px",
				"right": "30px",
				"bottom": "30px",
				"left": "10px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "그리드 정렬 필터";
	cpr.core.Platform.INSTANCE.register(app);
})();
