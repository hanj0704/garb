/*
 * App URI: 202011/exceljs
 * Source Location: 202011/exceljs.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202011/exceljs", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * exceljs.js
			 * Created at 2020. 11. 25. 오후 2:58:51.
			 *
			 * @author HANS
			 ************************************************/
			
			function abcq(){
				var title = 'Car Sell Report';
			var header = ["Year", "Month", "Make", "Model", "Quantity", "Pct"]
			var data = [
			  [2007, 1, "Volkswagen ", "Volkswagen Passat", 1267, 10],
			  [2007, 1, "Toyota ", "Toyota Rav4", 819, 6.5],
			  [2007, 1, "Toyota ", "Toyota Avensis", 787, 6.2],
			  [2007, 1, "Volkswagen ", "Volkswagen Golf", 720, 5.7],
			  [2007, 1, "Toyota ", "Toyota Corolla", 691, 5.4],
			];
				var workbook = new ExcelJS.Workbook();
			var worksheet = workbook.addWorksheet('Car Data');
			var titleRow = worksheet.addRow([title]);
			// Set font, size and style in title row.
			titleRow.font = { name: 'Comic Sans MS', family: 4, size: 16, underline: 'double', bold: true };
			var headerRow = worksheet.addRow(header);
			
			// Cell Style : Fill and Border
			headerRow.eachCell(function(cell,number){
			  cell.fill = {
			    type: 'pattern',
			    pattern: 'solid',
			    fgColor: { argb: 'FFFFFF00' },
			    bgColor: { argb: 'FF0000FF' }
			  }
			  cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } }
			});
			
			data.forEach(function(each){
				var row = worksheet.addRow(each);
				var qty = row.getCell(5);
				var color = "FF99FF99";
				if(+qty.value < 500) {
					color = "FF9999";
				}
				qty.fill = {
					"type":"pattern",
					"pattern":'solid',
					"fgColor":{"argb":color}
				};
			});
			//);
			workbook.xlsx.writeBuffer().then(function(data){
				var blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
			      saveAs(blob, 'CarData.xlsx');
			});
			}
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				abcq();
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "Button";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
		}
	});
	app.title = "exceljs";
	cpr.core.Platform.INSTANCE.register(app);
})();
