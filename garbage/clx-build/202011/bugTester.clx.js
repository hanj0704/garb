/*
 * App URI: 202011/bugTester
 * Source Location: 202011/bugTester.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("202011/bugTester", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * bugTester.js
			 * Created at 2020. 11. 18. 오후 4:43:13.
			 *
			 * @author HANS
			 ************************************************/;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("dsList"),
				"autoFit": "1, 2, 3, 4, 5, 6, 7, 8, 9, 13",
				"resizableColumns": "14",
				"columns": [
					{"width": "37px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "80px"},
					{"width": "80px"},
					{"width": "80px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "157px"},
					{"width": "70px"}
				],
				"header": {
					"rows": [{"height": "38px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.targetColumnName = "WRITNG_DE";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "작성일자";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.targetColumnName = "MTLTY";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "상호명";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.targetColumnName = "BSNM_NO";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "사업자번호";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.targetColumnName = "PRDLST";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "품목";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.targetColumnName = "ACNT_SBJECT";
								cell.filterable = false;
								cell.sortable = true;
								cell.text = "계정과목";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.targetColumnName = "PRUF_SE";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "증빙구분";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.targetColumnName = "SPLPC_AM";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "공급가액";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.targetColumnName = "TAX_AM";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "세액";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.targetColumnName = "SM";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "합계";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 11},
							"configurator": function(cell){
								cell.targetColumnName = "ETC_SE";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "기타구분";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 12},
							"configurator": function(cell){
								cell.targetColumnName = "JRNLZ_STTUS";
								cell.filterable = false;
								cell.sortable = false;
								cell.text = "분개상태";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 14},
							"configurator": function(cell){
								cell.text = "세부보기";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 13},
							"configurator": function(cell){
								cell.text = "비고";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.text = "#";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 10},
							"configurator": function(cell){
								cell.text = "비율";
								cell.control = (function(){
									var output_1 = new cpr.controls.Output();
									output_1.tooltip = "상호 전체 금액 대비 합계";
									output_1.value = "Output";
									output_1.style.setClasses(["text-center"]);
									return output_1;
								})();
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "35px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "WRITNG_DE";
								cell.control = (function(){
									var dateInput_1 = new cpr.controls.DateInput("dti1");
									dateInput_1.bind("value").toDataColumn("WRITNG_DE");
									return dateInput_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "MTLTY";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "BSNM_NO";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "PRDLST";
								cell.control = (function(){
									var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.scr.TreeCombo();
									return userDefinedControl_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "ACNT_SBJECT";
								cell.control = (function(){
									var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.scr.TableCombo();
									return userDefinedControl_2;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "PRUF_SE";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "SPLPC_AM";
								cell.control = (function(){
									var numberEditor_1 = new cpr.controls.NumberEditor("nbe1");
									numberEditor_1.style.setClasses(["text-left"]);
									numberEditor_1.bind("value").toDataColumn("SPLPC_AM");
									return numberEditor_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.columnName = "TAX_AM";
								cell.control = (function(){
									var output_2 = new cpr.controls.Output();
									output_2.dataType = "number";
									output_2.format = "s#,##0";
									output_2.bind("value").toDataColumn("TAX_AM");
									return output_2;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.columnName = "SM";
								cell.control = (function(){
									var output_3 = new cpr.controls.Output();
									output_3.dataType = "number";
									output_3.format = "s#,##0";
									output_3.bind("value").toDataColumn("SM");
									return output_3;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 11},
							"configurator": function(cell){
								cell.control = (function(){
									var output_4 = new cpr.controls.Output();
									output_4.style.bindClass().toExpression("ETC_SE ==\"정상\" ? \"sun\" : \"cloud\"");
									return output_4;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 12},
							"configurator": function(cell){
								cell.columnName = "JRNLZ_STTUS";
								cell.control = (function(){
									var checkBox_1 = new cpr.controls.CheckBox("cbx1");
									checkBox_1.trueValue = "분개";
									checkBox_1.style.setClasses(["text-center"]);
									checkBox_1.bind("value").toDataColumn("JRNLZ_STTUS");
									return checkBox_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 14},
							"configurator": function(cell){
								cell.control = (function(){
									var button_1 = new cpr.controls.Button();
									button_1.value = "";
									button_1.icon = "../theme/images/com/main/icon-global-search-button.png";
									return button_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 13},
							"configurator": function(cell){
								cell.columnName = "RM";
								cell.control = (function(){
									var radioButton_1 = new cpr.controls.RadioButton("rdb2");
									(function(radioButton_1){
										radioButton_1.addItem(new cpr.controls.Item("영수증첨부", "value1"));
										radioButton_1.addItem(new cpr.controls.Item("파일첨부", "value2"));
									})(radioButton_1);
									radioButton_1.bind("value").toDataColumn("RM");
									return radioButton_1;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 10},
							"configurator": function(cell){
								cell.control = (function(){
									var progress_1 = new cpr.controls.Progress("pgr1");
									progress_1.bind("value").toDataColumn("SM");
									progress_1.bind("max").toExpression("getConditionalSum(\"MTLTY=='\"+MTLTY+\"'\", \"SM\")");
									return progress_1;
								})();
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "20px",
				"right": "20px",
				"bottom": "236px",
				"left": "20px"
			});
		}
	});
	app.title = "bugTester";
	cpr.core.Platform.INSTANCE.register(app);
})();
