/*
 * App URI: 2021-11/T_Focus
 * Source Location: 2021-11/T_Focus.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("2021-11/T_Focus", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * T_Focus.js
			 * Created at 2021. 11. 11. 오후 3:04:32.
			 *
			 * @author ryu
			 ************************************************/;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns": [
					{"name": "column1"},
					{"name": "column2"},
					{"name": "column3"}
				],
				"rows": [
					{"column1": "column11", "column2": "column21", "column3": ""},
					{"column1": "column12", "column2": "column22", "column3": ""},
					{"column1": "column13", "column2": "column23", "column3": ""},
					{"column1": "column14", "column2": "column24", "column3": "column22"},
					{"column1": "column15", "column2": "column25", "column3": "column22"},
					{"column1": "column16", "column2": "column26", "column3": "column23"}
				]
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var hTMLSnippet_1 = new cpr.controls.HTMLSnippet();
			hTMLSnippet_1.value = "<style>\r\n\t.cl-checkboxgroup .cl-checkbox {\r\n\t\tborder: 1px solid #ccc;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: center;\r\n\t}\r\n\t\r\n\t.cl-checkboxgroup .cl-checkbox.cl-checked {\r\n\t\tbackground-color: #666666;\r\n\t\tcolor: #ffffff;\r\n\t}\r\n\t\r\n\t.cl-checkboxgroup .cl-checkbox .cl-checkbox-icon,\r\n\t.cl-checkboxgroup.cl-fixedWidth .cl-checkbox .cl-icon-wrapper {\r\n\t\twidth: 0px;\r\n\t}\r\n\t\r\n\t.cl-checkboxgroup .cl-checkbox .cl-checkbox-field {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.cl-radiobutton .cl-radiobutton-item {\r\n\t\tborder: 1px solid #ccc;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\ttext-align: center;\r\n\t}\r\n\t\r\n\t.cl-radiobutton .cl-radiobutton-item.cl-selected {\r\n\t\tbackground-color: #666666;\r\n\t\tcolor: #ffffff;\r\n\t}\r\n\t\r\n\t.cl-radiobutton .cl-radiobutton-item .cl-radiobutton-icon,\r\n\t.cl-radiobutton.cl-fixedWidth .cl-radiobutton-item .cl-icon-wrapper {\r\n\t\twidth: 0px;\r\n\t}\r\n\t\r\n\t.cl-radiobutton .cl-radiobutton-item .cl-radiobutton-field {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.cl-control:focus, .cl-control.cl-focus {\r\n\t\toutline: auto;\r\n\t{\r\n\t\r\n\t/*포커스링*/\r\n\t.cl-control:focus, .cl-control.cl-focus {\r\n\t\toutline: auto;\r\n\t{\r\n<\/style>";
			container.addChild(hTMLSnippet_1, {
				"top": "728px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var checkBoxGroup_1 = new cpr.controls.CheckBoxGroup("cbg1");
			checkBoxGroup_1.itemSpacing = 14;
//			checkBoxGroup_1.tabIndex = 1;
			(function(checkBoxGroup_1){
				checkBoxGroup_1.addItem(new cpr.controls.Item("텍스트", "value1"));
				checkBoxGroup_1.addItem(new cpr.controls.Item("텍스트", "value2"));
				checkBoxGroup_1.addItem(new cpr.controls.Item("텍스트", "value3"));
				checkBoxGroup_1.addItem(new cpr.controls.Item("텍스트", "value4"));
				checkBoxGroup_1.addItem(new cpr.controls.Item("텍스트", "value5"));
			})(checkBoxGroup_1);
			container.addChild(checkBoxGroup_1, {
				"top": "20px",
				"left": "20px",
				"width": "984px",
				"height": "40px"
			});
			
			var radioButton_1 = new cpr.controls.RadioButton("rdb1");
			radioButton_1.itemSpacing = 12;
			(function(radioButton_1){
				radioButton_1.addItem(new cpr.controls.Item("텍스트", "value1"));
				radioButton_1.addItem(new cpr.controls.Item("텍스트", "value2"));
				radioButton_1.addItem(new cpr.controls.Item("텍스트", "value3"));
				radioButton_1.addItem(new cpr.controls.Item("텍스트", "value4"));
				radioButton_1.addItem(new cpr.controls.Item("텍스트", "value5"));
			})(radioButton_1);
			container.addChild(radioButton_1, {
				"top": "70px",
				"left": "20px",
				"width": "984px",
				"height": "40px"
			});
		}
	});
	app.title = "T_Focus";
	cpr.core.Platform.INSTANCE.register(app);
})();
